<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>China housing crisis The people living in unfinished apartments</title>
    <link href="/2024/05/28/English_reading/%E7%88%9B%E5%B0%BE%E6%A8%93%E9%A2%A8%E6%9A%B4/China%20housing%20crisis%20The%20people%20living%20in%20unfinish/"/>
    <url>/2024/05/28/English_reading/%E7%88%9B%E5%B0%BE%E6%A8%93%E9%A2%A8%E6%9A%B4/China%20housing%20crisis%20The%20people%20living%20in%20unfinish/</url>
    
    <content type="html"><![CDATA[<h1 id="China-housing-crisis-The-people-living-in-unfinished-apartments"><a href="#China-housing-crisis-The-people-living-in-unfinished-apartments" class="headerlink" title="China housing crisis: The people living in unfinished apartments"></a>China housing crisis: The people living in unfinished apartments</h1><p>原文網址: <a href="https://www.bbc.com/news/av/world-asia-62436926">https://www.bbc.com/news/av/world-asia-62436926</a><br>來源: BBC<br>Tags: News<br>閱讀日期: 2024&#x2F;02&#x2F;05<br>字數統計: 6135<br>Status: Done</p><p><img src="/Untitled.png" alt="alt text"></p><h1 id="English-version（1135）"><a href="#English-version（1135）" class="headerlink" title="English version（1135）"></a>English version（1135）</h1><h2 id="What-is-an-Unfinished-Building"><a href="#What-is-an-Unfinished-Building" class="headerlink" title="What is an Unfinished Building?"></a>What is an Unfinished Building?</h2><p>The term “Unfinished Building,” often referred to as “Incomplete Construction” or “Abandoned Construction,” refers to a construction project that has commenced but has come to a halt midway due to various reasons. This interruption prevents the project from being completed on schedule, resulting in an ultimately unfinished and partially constructed building. The term is not limited to residential properties but encompasses important infrastructure such as bridges and roads. This article will focus on explaining “Unfinished Residential Buildings.”</p><h2 id="Common-Causes-of-Unfinished-Buildings"><a href="#Common-Causes-of-Unfinished-Buildings" class="headerlink" title="Common Causes of Unfinished Buildings"></a>Common Causes of Unfinished Buildings</h2><ol><li><p><strong>Developer’s Financial and Debt Issues:</strong></p><p> Developers may face financial challenges or debt disputes due to factors such as fluctuations in the real estate market or government policy restrictions. These issues can lead to a disruption in the funding for ongoing construction projects, preventing them from being completed on time as originally planned.</p></li><li><p><strong>Construction Quality Issues:</strong></p><p> Throughout the construction process, from time planning and project design to the actual construction work, each phase is intricately connected. Governments set standards for each phase to ensure construction quality (<a href="https://lawweb.pcc.gov.tw/LawContent.aspx?id=FL003734">Implementation Standards</a>), and contractors must meet these standards. If a builder fails to adhere to construction regulations, such as deviations in quantity, use of substandard materials, or cutting corners, they may be forced to halt construction after scrutiny.</p></li><li><p><strong>Property Rights Issues:</strong></p><p> Real estate ownership disputes involve controversies related to property ownership, usage rights, or other relevant interests. These disputes can be complex, involving multiple parties such as property owners, government agencies, and developers. Resolving these disputes often requires intricate legal procedures, consuming considerable time and financial resources. Failure to resolve property rights disputes promptly can result in prolonged delays in construction projects.</p></li></ol><h2 id="Unfinished-Building-Crisis-China"><a href="#Unfinished-Building-Crisis-China" class="headerlink" title="Unfinished Building Crisis: China"></a>Unfinished Building Crisis: China</h2><h3 id="Sunac-Unfinished-Building（協信爛尾樓）"><a href="#Sunac-Unfinished-Building（協信爛尾樓）" class="headerlink" title="Sunac Unfinished Building（協信爛尾樓）"></a>Sunac Unfinished Building（協信爛尾樓）</h3><p>On July 25, 2022, hundreds of homebuyers staged a protest at the entrance of Sunac Technology City in China, demanding that Sunac Group continue the construction of residential buildings that remain unfinished.</p><p>Protesters claimed they had invested their life savings to purchase pre-sale homes, pooling resources with family members, and ended up burdened with car loans and mortgage debts. However, their protests were met with police violence, forcibly dispersing all demonstrators in the square. The construction company issued a simple statement stating that the building would be completed on schedule but did not engage in discussions with the protesting homebuyers regarding project matters.</p><h3 id="Evergrande-Unfinished-Building（恆大爛尾樓）"><a href="#Evergrande-Unfinished-Building（恆大爛尾樓）" class="headerlink" title="Evergrande Unfinished Building（恆大爛尾樓）"></a>Evergrande Unfinished Building（恆大爛尾樓）</h3><p>Evergrande’s debt crisis has been ongoing for several years. On September 13, 2021, nearly a hundred investors protested at Evergrande Group’s headquarters in Shenzhen, China, demanding loan repayment and redemption of financial products.</p><p>After government mediation, Evergrande Group and two other construction companies agreed to complete the construction of the buildings separately.</p><h2 id="Unfinished-Building-Crisis-Taiwan"><a href="#Unfinished-Building-Crisis-Taiwan" class="headerlink" title="Unfinished Building Crisis: Taiwan"></a>Unfinished Building Crisis: Taiwan</h2><p>In Taiwan, reports of unfinished buildings are rarely seen on television, perhaps due to suppression or fading into the depths of history. Nevertheless, these incidents have occurred, and the victims continue to struggle for their rights.</p><p>My awareness of these issues remained distant until I came across a special interview by Zhiqi 77, where he invited a special reporter from CTS News Magazine to discuss the stories of unfinished buildings in the report titled “Your Unfinished Building, My Home.”</p><p>Observing the overgrown weeds around the unfinished buildings resembling ruins, each one concealing a tale of hardship, homeowners tried various means to secure a home for their retirement. Unfortunately, their efforts resulted in a futile daydream.</p><h2 id="How-to-Protect-Yourself"><a href="#How-to-Protect-Yourself" class="headerlink" title="How to Protect Yourself?"></a>How to Protect Yourself?</h2><h3 id="Five-Performance-Guarantees-Refund-of-Payment"><a href="#Five-Performance-Guarantees-Refund-of-Payment" class="headerlink" title="Five Performance Guarantees: Refund of Payment"></a>Five Performance Guarantees: Refund of Payment</h3><p>Refunding the payment is the most secure way for consumers. Builders must deposit a guarantee fund into a designated account. When a building becomes unfinished, homebuyers can decide whether to retrieve the down payment from the guarantee fund or use it to continue the construction.</p><h3 id="Industry-Guarantee-Collusion"><a href="#Industry-Guarantee-Collusion" class="headerlink" title="Industry Guarantee? Collusion?"></a>Industry Guarantee? Collusion?</h3><p>The term “industry guarantee” is often found in contracts, indicating that if Builder A is unable to continue construction due to force majeure, Builder B from the industry guarantee contract takes over the project and completes the remaining construction.</p><p>However, according to an interview with Zhiqi 77（志棋七七）, Chen Yanzuo（陳沿佐）, a written reporter from CTS News Magazine（華視新聞雜誌）, mentioned, “We found a loophole. When homebuyers with unfinished buildings approached the builder under industry guarantee, they discovered that Builder B was actually Builder A’s spouse. It was basically a family, and they had no intention of completing the construction.”</p><h3 id="What-Homework-to-Do-Before-Buying-Pre-sale-Homes"><a href="#What-Homework-to-Do-Before-Buying-Pre-sale-Homes" class="headerlink" title="What Homework to Do Before Buying Pre-sale Homes?"></a>What Homework to Do Before Buying Pre-sale Homes?</h3><ol><li><strong>Ministry of Economic Affairs Construction Department</strong>: <a href="https://www.nlma.gov.tw/%E6%9C%80%E6%96%B0%E8%A8%8A%E6%81%AF.html">https://www.nlma.gov.tw/最新訊息.html</a><ol><li>Check whether the contributing construction company or the construction company has obtained legal registration and licenses.</li></ol></li><li><strong>Judicial Yuan Judgment System</strong>: <a href="https://judgment.judicial.gov.tw/FJUD/Default_AD.aspx">https://judgment.judicial.gov.tw/FJUD/Default_AD.aspx</a><ol><li>Check the judicial judgments against the builder to see if they have been sued for fraud or other criminal activities.</li></ol></li><li><strong>Google:</strong><ol><li>Search for news related to the builder using their name as a keyword.</li><li>In online communities related to real estate transactions, check reviews about the builder.</li></ol></li></ol><h2 id="Afterthoughts"><a href="#Afterthoughts" class="headerlink" title="Afterthoughts"></a>Afterthoughts</h2><blockquote><p>German philosopher Hegel: “The only lesson that mankind learns from history: that mankind learns nothing from history.”</p></blockquote><p>Seeing the multitude of housing purchase information plastered on utility poles while walking down the street, all starting at millions, one obtains cramped living spaces. Compared to the repayment pressure of buying existing homes, more people are turning their attention to pre-sale homes still under construction.</p><p>Pre-sale homes not only offer lower initial payment pressure but, more importantly, allow buyers to acquire larger units at a lower price. Additionally, interior pipeline configurations can be negotiated with the builder, allowing partial modifications to suit one’s preferences. For young people, this is an irresistible temptation and opportunity.</p><p>After thorough research of relevant regulations and full preparation, falling victim to an unfinished building crisis due to unfortunate circumstances is a significant blow to homebuyers. The government should revise related support measures, rigorously inspect the financial flows of all builders, and provide information on relevant judgments. This would empower the public to have a reliable housing market for selection and purchase.</p><hr><h1 id="中文版本"><a href="#中文版本" class="headerlink" title="中文版本"></a>中文版本</h1><h2 id="爛尾樓是什麼"><a href="#爛尾樓是什麼" class="headerlink" title="爛尾樓是什麼?"></a>爛尾樓是什麼?</h2><p>「 <strong>爛尾樓</strong> 」也經常被稱作<strong>「 未完成建築 」、「 爛尾建築 」</strong>，爛尾樓的意思簡單來說就是指建築工程已開始，卻在半途中因種種原因導致施工停擺，無法如期完成交屋，導致最終留下一棟半成品的建築。爛尾建築不專指房屋，有時也會涵蓋橋樑、道路等重要建設，筆者接下來的文章會著重在「 爛尾房屋 」上進行說明。</p><h2 id="爛尾樓常見原因"><a href="#爛尾樓常見原因" class="headerlink" title="爛尾樓常見原因"></a>爛尾樓常見原因</h2><ol><li><p><strong>開發商的資金及債務問題：</strong></p><p> 有時候開發商可能會因不動產市場變動、政府政策限制等種種因素，使公司資金鏈斷裂或者陷入債務糾紛，導致後續建築工程的資金無法補足，因而產生無法照預定進度完成應交付建築的情況。</p></li><li><p><strong>施工品質問題：</strong></p><p> 在房屋建造的過程中，從時間規劃、工程設計到最後的施作工程，每一階段的環環相扣、密不可分，為了確保施工品質，政府在各個階段皆訂定了<a href="https://lawweb.pcc.gov.tw/LawContent.aspx?id=FL003734">實施標準</a>，承包的廠商必須充分滿足各階段的開發限制。此時建商若未能滿足建築規範，例如建造時發生數量不符、材質不實或偷工減料等行為經審查屬實，就有可能會被迫停工。</p></li><li><p><strong>產權問題：</strong></p><p> 房地產權糾紛是指關於不動產的所有權、使用權或其他相關權益的爭議，這些糾紛不僅牽涉多項不動產權益，這些權益又涉及多方當事人，如：業主、政府機關、開發商等，解決這些糾紛通常需要經過繁瑣的法律程序，耗費相當的時間及金錢成本，若遲遲無法解決產權糾紛，便可能造成工程持續延宕。</p></li></ol><h2 id="爛尾樓風暴：中國"><a href="#爛尾樓風暴：中國" class="headerlink" title="爛尾樓風暴：中國"></a>爛尾樓風暴：中國</h2><h3 id="協信爛尾樓"><a href="#協信爛尾樓" class="headerlink" title="協信爛尾樓"></a>協信爛尾樓</h3><p>2022年7月25日，數百名承購戶於中國協信科技城的門口進行遊行示威，要求協信建商集團繼續完工至今仍未完工的居民樓。</p><p>示威者宣稱自己投入畢生積蓄來購買預售屋，甚至拖上一家人來集資，卻換得自己車貸、房貸債務連連。但是這樣的抗議，換來的卻是警察的暴力執法，強制驅離所有在廣場中示威的承購戶們，建設公司也只是簡單的發表聲明說該建物會如期進行完工，並未出面與承購戶們商討工程事宜。</p><h3 id="恆大爛尾樓"><a href="#恆大爛尾樓" class="headerlink" title="恆大爛尾樓"></a>恆大爛尾樓</h3><p>恆大債務暴雷已持續數年。2021年9月13日，近百名投資者曾在中國恆大集團位於深圳的總部抗議，要求償還貸款和兌付金融產品。</p><p>後來這起事件經由政府的調解之後，恆大集團以及另外兩家建設公司將會分別完成建物的工程。</p><h2 id="爛尾樓風暴：台灣"><a href="#爛尾樓風暴：台灣" class="headerlink" title="爛尾樓風暴：台灣"></a>爛尾樓風暴：台灣</h2><p>居住於台灣這片土地上，我很少見過爛尾樓的新聞在電視上播放，或許是這些事情有的被壓了下來，有的則被人淡忘在歷史的長河中，這些事情真實發生過，受害者真實存在也仍在為自己的權益奔波。</p><p>我對於這些事情只感到相當遙遠，直到我偶然間看到志祺七七的專題訪問，他邀請華視新聞雜誌專題記者訪談《你的爛尾樓，我的家》此篇報導的爛尾樓事蹟。</p><p>看著畫面中雜草叢生如同廢墟般的爛尾樓，背後是一篇篇辛酸的血淚史，承購戶想盡辦法想要給自己安置一棟能夠頤養天年的家，結果只是一場虛無飄渺的白日夢。</p><h2 id="如何自保"><a href="#如何自保" class="headerlink" title="如何自保?"></a>如何自保?</h2><h3 id="五大履約保證：價金返還"><a href="#五大履約保證：價金返還" class="headerlink" title="五大履約保證：價金返還"></a>五大履約保證：價金返還</h3><p>價金返還是對消費者最有保障的方式，建商需要先放一筆保證金進保證帳戶裡，而當房子變成爛尾樓之時，由承購戶們決定說要從保證金裡拿回頭期款，還是用保證金繼續完工房子的工程。</p><h3 id="同業擔保-狼狽為奸"><a href="#同業擔保-狼狽為奸" class="headerlink" title="同業擔保? 狼狽為奸?"></a>同業擔保? 狼狽為奸?</h3><p>契約中常見到「同業擔保」這個名詞，表示說當A建商因不可抗力之因素而無力續建建物之時，改由同業擔保合約中的B建商接手該建案並繼續完工剩餘的工程。</p><p>但是根據志祺七七的訪談中，華視新聞雜誌的文字記者陳沿佐表示：「我們發現有漏洞，就是我們遇到爛尾樓的承購戶，他房子已經變成爛尾樓了，他們就去找了同業擔保的建商，才發現說B建商就是A建商的老婆，根本就是一家人，所以他們就是擺明要來，有點算是騙消費者，他們也本來就沒有打算要把這個房子蓋完這樣子。」</p><h3 id="買預售屋之前到底要做什麼功課"><a href="#買預售屋之前到底要做什麼功課" class="headerlink" title="買預售屋之前到底要做什麼功課?"></a>買預售屋之前到底要做什麼功課?</h3><ol><li><strong>經濟部的營建司</strong>：<a href="https://www.nlma.gov.tw/%E6%9C%80%E6%96%B0%E8%A8%8A%E6%81%AF.html">https://www.nlma.gov.tw/最新訊息.html</a><ol><li>查詢負責出資的建設公司或者負責興建的營造公司，有沒有拿到合法的登記與執照</li></ol></li><li><strong>司法院裁判書系統</strong>：<a href="https://judgment.judicial.gov.tw/FJUD/Default_AD.aspx">https://judgment.judicial.gov.tw/FJUD/Default_AD.aspx</a><ol><li>查詢該建商的司法判決，可以看到有沒有被其他民眾告過詐欺等刑事</li></ol></li><li><strong>Google：</strong><ol><li>以建商名稱當作關鍵字搜尋相關的新聞</li><li>在房屋買賣主題的網路社團中，查詢相關建商的風評</li></ol></li></ol><h2 id="觀後感"><a href="#觀後感" class="headerlink" title="觀後感"></a>觀後感</h2><blockquote><p>德國哲學家黑格爾：<em><strong>人類從歷史中學到的唯一教訓，就是人類沒有從歷史中吸取任何教訓</strong></em></p></blockquote><p>走在路上，見到電線杆貼滿許多房屋的購買資訊，無一不是千萬起跳的，這樣的價錢取得的卻是蝸居般的陋室，相較於買成屋的還款壓力，更多人將目光投向正在興建中的預售屋。</p><p>預售屋不僅頭期款的壓力較低，更重要的是可以用較少的價錢購買到較大的房型，而且室內管線配置還可以向建商相談，局部更改成自己想要的樣子，對於年輕人來說無疑是巨大的誘惑與機會。</p><p>研究了相關法規、做足萬全準備後，卻因為時運不佳遇上爛尾樓風暴，自己的積蓄打水飄。</p><p>這無疑是對購屋族群的莫大打擊，政府應該要修正相關的配套措施，嚴格稽查所有建商的資金流向、相關判決資訊，讓民眾能夠有良好的房屋市場可以選擇並購買。</p><hr><h1 id="參閱資料"><a href="#參閱資料" class="headerlink" title="參閱資料"></a>參閱資料</h1><p><a href="https://en.wikipedia.org/wiki/Unfinished_building">Unfinished building</a></p><p><a href="https://www.bbc.com/news/av/world-asia-62436926"></a></p><p><a href="https://edition.cnn.com/2022/07/14/economy/china-property-crisis-homebuyers-bad-debt-intl-hnk/index.html">Chinese homebuyers refuse to pay mortgages on unfinished apartments | CNN Business</a></p><p><a href="https://www.housefeel.com.tw/article/%E7%88%9B%E5%B0%BE%E6%A8%93-%E6%9C%AA%E5%AE%8C%E6%88%90%E5%BB%BA%E7%AF%89-%E5%BB%BA%E5%95%86%E5%80%92%E9%96%89-%E7%88%9B%E5%B0%BE%E6%A8%93%E5%8F%B0%E7%81%A3/">爛尾樓是什麼？爛尾樓會有什麼影響？要如何預防買到爛尾樓？ - HouseFeel 房感</a></p><p><a href="https://www.youtube.com/watch?v=M7M5GxlFKKU">【你的爛尾樓 我的家】房市危機 北中南大調查│主持人 林仙怡│華視新聞雜誌完整版 EP2352 2023.2.17</a></p><p><a href="https://www.youtube.com/watch?v=c4azAfluBu4">用畢生積蓄買房，結果建商只蓋一半就落跑！台灣現在的「爛尾樓」問題，有多嚴重？ft.《華視新聞雜誌》記者陳沿佐、盧松佑｜志祺七七</a></p><p><a href="https://www.soundofhope.org/post/640469?lang=b5"></a></p><p><a href="https://www.bbc.com/zhongwen/trad/chinese-news-66960231">恆大危機：許家印涉罪被查 上百萬套「爛尾樓」怎麼辦？ - BBC News 中文</a></p><p><a href="https://www.bbc.com/zhongwen/trad/chinese-news-68166246">恆大在香港被勒令清盤 上百萬套爛尾樓苦主還能指望交樓嗎 - BBC News 中文</a></p>]]></content>
    
    
    <categories>
      
      <category>English reading</category>
      
    </categories>
    
    
    <tags>
      
      <tag>English reading</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>各位電神以及部落客的朋友們, 大家好!</title>
    <link href="/2024/05/28/%E7%B6%B2%E7%AB%99%E6%B2%BF%E9%9D%A9/"/>
    <url>/2024/05/28/%E7%B6%B2%E7%AB%99%E6%B2%BF%E9%9D%A9/</url>
    
    <content type="html"><![CDATA[<h1 id="網站沿革"><a href="#網站沿革" class="headerlink" title="網站沿革"></a>網站沿革</h1><h2 id="2024"><a href="#2024" class="headerlink" title="2024"></a>2024</h2><ul><li>1 &#x2F; 21 網站首次問世</li><li>1 &#x2F; 31 移植作者在 notion 所做的 CPE 筆記</li><li>2 &#x2F; 6 新增 Markdown 分類文章</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/05/28/%E4%BB%A5%20Obsidian%20%E7%AE%A1%E7%90%86%20Hexo%20%E6%96%87%E7%AB%A0/"/>
    <url>/2024/05/28/%E4%BB%A5%20Obsidian%20%E7%AE%A1%E7%90%86%20Hexo%20%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/554333805"># Obsidian+Git完美維護Hexo博客</a><br>目前對整個部落格的改建，都建立在這裡的連結之上</p><p>而為什麼我要用這個 Obsidian 來製作與管理這個 Hexo 呢?<br>因為最為主要的原因就是當 Notion 下載成 Markdown 時，圖片與表格時常移位或根本跑不出來。<br>再加上，我使用的是個人帳戶，對於整個工作區的容量也有上限<br>Obsidian 就這麼從我電腦的角落中爬了出來</p><p>目前的管理方式會是</p><p><img src="C:\Users\rick2\Blogger_github\source\assets\prtscr.png" alt="prtscr.png"></p><p>螢幕截圖<br><img src="/source/assets/image.png"></p><p><img src="/images/image.png"></p><p>至於 assets 的圖片![[Pasted image 20240319234959.png]]</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Markdown 語法</title>
    <link href="/2024/05/28/Markdown/Markdown%E8%AA%9E%E6%B3%95/"/>
    <url>/2024/05/28/Markdown/Markdown%E8%AA%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>此篇文章擷取自<a href="https://markdown.tw/#overview">Markdown 中文文件官網</a><br>:::</p><h1 id="Markdown-文件"><a href="#Markdown-文件" class="headerlink" title="Markdown 文件"></a>Markdown 文件</h1><p><img src="https://markdown.tw/images/208x128.png" alt="Markdown"></p><p><strong>NOTE:</strong> This is Traditional Chinese Edition Document of<br>Markdown Syntax. If you are seeking for English Edition<br>Document. Please refer to <a href="http://daringfireball.net/projects/markdown/syntax">Markdown: Syntax</a>.</p><h1 id="Markdown-Syntax"><a href="#Markdown-Syntax" class="headerlink" title="Markdown: Syntax"></a>Markdown: Syntax</h1><ul><li><a href="#overview">概述</a><ul><li><a href="#philosophy">哲學</a></li><li><a href="#html">行內 HTML</a></li><li><a href="#autoescape">特殊字元自動轉換</a></li></ul></li><li><a href="#block">區塊元素</a><ul><li><a href="#p">段落和換行</a></li><li><a href="#header">標題</a></li><li><a href="#blockquote">區塊引言</a></li><li><a href="#list">清單</a></li><li><a href="#precode">程式碼區塊</a></li><li><a href="#hr">分隔線</a></li></ul></li><li><a href="#span">區段元素</a><ul><li><a href="#link">連結</a></li><li><a href="#em">強調</a></li><li><a href="#code">程式碼</a></li><li><a href="#img">圖片</a></li></ul></li><li><a href="#misc">其它</a><ul><li><a href="#backslash">跳脫字元</a></li><li><a href="#autolink">自動連結</a></li></ul></li><li><a href="#acknowledgement">感謝</a></li></ul><p><strong>注意：</strong> 這份文件是用 Markdown 寫的，你可以<a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md">看看它的原始檔</a> 。</p><hr><h2 id="overview">概述</h2><h3 id="philosophy">哲學</h3><p>Markdown 的目標是實現「易讀易寫」。</p><p>不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。Markdown 語法受到一些既有 text-to-HTML 格式的影響，包括 [Setext] <a href="http://docutils.sourceforge.net/mirror/setext.html">1</a>、[atx] <a href="http://www.aaronsw.com/2002/atx/">2</a>、[Textile] <a href="http://textism.com/tools/textile/">3</a>、[reStructuredText] <a href="http://docutils.sourceforge.net/rst.html">4</a>、[Grutatext] <a href="http://www.triptico.com/software/grutatxt.html">5</a> 和 [EtText] <a href="http://ettext.taint.org/doc/">6</a>，然而最大靈感來源其實是純文字的電子郵件格式。</p><p>因此 Markdown 的語法全由標點符號所組成，並經過嚴謹慎選，是為了讓它們看起來就像所要表達的意思。像是在文字兩旁加上星號，看起來就像*強調*。Markdown 的清單看起來，嗯，就是清單。假如你有使用過電子郵件，區塊引言看起來就真的像是引用一段文字。</p><h3 id="html">行內 HTML</h3><p>Markdown 的語法有個主要的目的：用來作為一種網路內容的<em>寫作</em>用語言。</p><p>Markdown 不是要來取代 HTML，甚至也沒有要和它相似，它的語法種類不多，只和 HTML 的一部分有關係，重點<em>不是</em>要創造一種更容易寫作 HTML 文件的語法，我認為 HTML 已經很容易寫了，Markdown 的重點在於，它能讓文件更容易閱讀、編寫。HTML 是一種<em>發佈</em>的格式，Markdown 是一種<em>編寫</em>的格式，因此，Markdown 的格式語法只涵蓋純文字可以涵蓋的範圍。</p><p>不在 Markdown 涵蓋範圍之外的標籤，都可以直接在文件裡面用 HTML 撰寫。不需要額外標註這是 HTML 或是 Markdown；只要直接加標籤就可以了。</p><p>只有區塊元素──比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等標籤，必須在前後加上空行，以利與內容區隔。而且這些（元素）的開始與結尾標籤，不可以用 tab 或是空白來縮排。Markdown 的產生器有智慧型判斷，可以避免在區塊標籤前後加上沒有必要的 <code>&lt;p&gt;</code> 標籤。</p><p>舉例來說，在 Markdown 文件裡加上一段 HTML 表格：</p><pre><code>This is a regular paragraph.&lt;table&gt;    &lt;tr&gt;        &lt;td&gt;Foo&lt;/td&gt;    &lt;/tr&gt;&lt;/table&gt;This is another regular paragraph.</code></pre><p>請注意，Markdown 語法在 HTML 區塊標籤中將不會被進行處理。例如，你無法在 HTML 區塊內使用 Markdown 形式的<code>*強調*</code>。</p><p>HTML 的區段標籤如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 則不受限制，可以在 Markdown 的段落、清單或是標題裡任意使用。依照個人習慣，甚至可以不用Markdown 格式，而採用 HTML 標籤來格式化。舉例說明：如果比較喜歡 HTML 的  <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 標籤，可以直接使用這些標籤，而不用 Markdown 提供的連結或是影像標示語法。</p><p>HTML 區段標籤和區塊標籤不同，在區段標籤的範圍內， Markdown 的語法是有效的。</p><h3 id="autoescape">特殊字元自動轉換</h3><p>在 HTML 文件中，有兩個字元需要特殊處理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符號用於起始標籤，<code>&amp;</code> 符號則用於標記 HTML 實體，如果你只是想要使用這些符號，你必須要使用實體的形式，像是 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p><p><code>&amp;</code> 符號其實很容易讓寫作網路文件的人感到困擾，如果你要打「AT&amp;T」 ，你必須要寫成「<code>AT&amp;amp;T</code>」 ，還得轉換網址內的 <code>&amp;</code> 符號，如果你要連結到：</p><pre><code>http://images.google.com/images?num=30&amp;q=larry+bird</code></pre><p>你必須要把網址轉成：</p><pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird</code></pre><p>才能放到連結標籤的 <code>href</code> 屬性裡。不用說也知道這很容易忘記，這也可能是 HTML 標準檢查所檢查到的錯誤中，數量最多的。</p><p>Markdown 允許你直接使用這些符號，但是你要小心跳脫字元的使用，如果你是在HTML 實體中使用 <code>&amp;</code> 符號的話，它不會被轉換，而在其它情形下，它則會被轉換成 <code>&amp;amp;</code>。所以你如果要在文件中插入一個著作權的符號，你可以這樣寫：</p><pre><code>&amp;copy;</code></pre><p>Markdown 將不會對這段文字做修改，但是如果你這樣寫：</p><pre><code>AT&amp;T</code></pre><p>Markdown 就會將它轉為：</p><pre><code>AT&amp;amp;T</code></pre><p>類似的狀況也會發生在 <code>&lt;</code> 符號上，因為 Markdown 支援 <a href="#html">行內 HTML</a> ，如果你是使用 <code>&lt;</code> 符號作為 HTML 標籤使用，那 Markdown 也不會對它做任何轉換，但是如果你是寫：</p><pre><code>4 &lt; 5</code></pre><p>Markdown 將會把它轉換為：</p><pre><code>4 &amp;lt; 5</code></pre><p>不過需要注意的是，code 範圍內，不論是行內還是區塊， <code>&lt;</code> 和 <code>&amp;</code> 兩個符號都<em>一定</em>會被轉換成 HTML 實體，這項特性讓你可以很容易地用 Markdown 寫 HTML code （和 HTML 相對而言， HTML 語法中，你要把所有的 <code>&lt;</code> 和 <code>&amp;</code> 都轉換為 HTML 實體，才能在 HTML 文件裡面寫出 HTML code。）</p><hr><h2 id="block">區塊元素</h2><h3 id="p">段落和換行</h3><p>一個段落是由一個以上相連接的行句組成，而一個以上的空行則會切分出不同的段落（空行的定義是顯示上看起來像是空行，便會被視為空行。比方說，若某一行只包含空白和 tab，則該行也會被視為空行），一般的段落不需要用空白或斷行縮排。</p><p>「一個以上相連接的行句組成」這句話其實暗示了 Markdown 允許段落內的強迫斷行，這個特性和其他大部分的 text-to-HTML 格式不一樣（包括 MovableType 的「Convert Line Breaks」選項），其它的格式會把每個斷行都轉成 <code>&lt;br /&gt;</code> 標籤。</p><p>如果你<em>真的</em>想要插入 <code>&lt;br /&gt;</code> 標籤的話，在行尾加上兩個以上的空白，然後按 enter。</p><p>是的，這確實需要花比較多功夫來插入 <code>&lt;br /&gt;</code> ，但是「每個換行都轉換為 <code>&lt;br /&gt;</code>」的方法在 Markdown 中並不適合， Markdown 中 email 式的 <a href="#blockquote">區塊引言</a> 和多段落的 <a href="#list">清單</a> 在使用換行來排版的時候，不但更好用，還更好閱讀。</p><h3 id="header">標題</h3><p>Markdown 支援兩種標題的語法，[Setext] <a href="http://docutils.sourceforge.net/mirror/setext.html">1</a> 和 [atx] <a href="http://www.aaronsw.com/2002/atx/">2</a> 形式。</p><p>Setext 形式是用底線的形式，利用 <code>=</code> （最高階標題）和 <code>-</code> （第二階標題），例如：</p><pre><code>This is an H1=============This is an H2-------------</code></pre><p>任何數量的 <code>=</code> 和 <code>-</code> 都可以有效果。</p><p>Atx 形式則是在行首插入 1 到 6 個 <code>#</code> ，對應到標題 1 到 6 階，例如：</p><pre><code># This is an H1## This is an H2###### This is an H6</code></pre><p>你可以選擇性地「關閉」atx 樣式的標題，這純粹只是美觀用的，若是覺得這樣看起來比較舒適，你就可以在行尾加上 <code>#</code>，而行尾的 <code>#</code> 數量也不用和開頭一樣（行首的井字數量決定標題的階數）：</p><pre><code># This is an H1 ### This is an H2 ##### This is an H3 ######</code></pre><h3 id="blockquote">Blockquotes</h3><p>Markdown 使用 email 形式的區塊引言，如果你很熟悉如何在 email 信件中引言，你就知道怎麼在 Markdown 文件中建立一個區塊引言，那會看起來像是你強迫斷行，然後在每行的最前面加上 <code>&gt;</code> ：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&gt; id sem consectetuer libero luctus adipiscing.</code></pre><p>Markdown 也允許你只在整個段落的第一行最前面加上 <code>&gt;</code> ：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</code></pre><p>區塊引言可以有階層（例如：引言內的引言），只要根據層數加上不同數量的 <code>&gt;</code> ：</p><pre><code>&gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level.</code></pre><p>引言的區塊內也可以使用其他的 Markdown 語法，包括標題、清單、程式碼區塊等：</p><pre><code>&gt; ## This is a header.&gt; &gt; 1.   This is the first list item.&gt; 2.   This is the second list item.&gt; &gt; Here&#39;s some example code:&gt; &gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre><p>任何標準的文字編輯器都能簡單地建立 email 樣式的引言，例如 BBEdit ，你可以選取文字後然後從選單中選擇<em>增加引言階層</em>。</p><h3 id="list">清單</h3><p>Markdown 支援有序清單和無序清單。</p><p>無序清單使用星號、加號或是減號作為清單標記：</p><pre><code>*   Red*   Green*   Blue</code></pre><p>等同於：</p><pre><code>+   Red+   Green+   Blue</code></pre><p>也等同於：</p><pre><code>-   Red-   Green-   Blue</code></pre><p>有序清單則使用數字接著一個英文句點：</p><pre><code>1.  Bird2.  McHale3.  Parish</code></pre><p>很重要的一點是，你在清單標記上使用的數字並不會影響輸出的 HTML 結果，上面的清單所產生的 HTML 標記為：</p><pre><code>&lt;ol&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;McHale&lt;/li&gt;&lt;li&gt;Parish&lt;/li&gt;&lt;/ol&gt;</code></pre><p>如果你的清單標記寫成：</p><pre><code>1.  Bird1.  McHale1.  Parish</code></pre><p>或甚至是：</p><pre><code>3. Bird1. McHale8. Parish</code></pre><p>你都會得到完全相同的 HTML 輸出。重點在於，你可以讓 Markdown 文件的清單數字和輸出的結果相同，或是你懶一點，你可以完全不用在意數字的正確性。</p><p>如果你使用懶惰的寫法，建議第一個項目最好還是從 1. 開始，因為 Markdown 未來可能會支援有序清單的 start 屬性。</p><p>清單項目標記通常是放在最左邊，但是其實也可以縮排，最多三個空白，項目標記後面則一定要接著至少一個空白或 tab。</p><p>要讓清單看起來更漂亮，你可以把內容用固定的縮排整理好：</p><pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,    viverra nec, fringilla in, laoreet vitae, risus.*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.    Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>但是如果你很懶，那也不一定需要：</p><pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果清單項目間用空行分開， Markdown 會把項目的內容在輸出時用 <code>&lt;p&gt;</code><br>標籤包起來，舉例來說：</p><pre><code>*   Bird*   Magic</code></pre><p>會被轉換為：</p><pre><code>&lt;ul&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;Magic&lt;/li&gt;&lt;/ul&gt;</code></pre><p>但是這個：</p><pre><code>*   Bird*   Magic</code></pre><p>會被轉換為：</p><pre><code>&lt;ul&gt;&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</code></pre><p>清單項目可以包含多個段落，每個項目下的段落都必須縮排 4 個空白或是一個 tab ：</p><pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor    sit amet, consectetuer adipiscing elit. Aliquam hendrerit    mi posuere lectus.    Vestibulum enim wisi, viverra nec, fringilla in, laoreet    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum    sit amet velit.2.  Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果你每行都有縮排，看起來會看好很多，當然，再次地，如果你很懶惰，Markdown 也允許：</p><pre><code>*   This is a list item with two paragraphs.    This is the second paragraph in the list item. You&#39;reonly required to indent the first line. Lorem ipsum dolorsit amet, consectetuer adipiscing elit.*   Another item in the same list.</code></pre><p>如果要在清單項目內放進引言，那 <code>&gt;</code> 就需要縮排：</p><pre><code>*   A list item with a blockquote:    &gt; This is a blockquote    &gt; inside a list item.</code></pre><p>如果要放程式碼區塊的話，該區塊就需要縮排<em>兩次</em>，也就是 8 個空白或是兩個 tab：</p><pre><code>*   A list item with a code block:        &lt;code goes here&gt;</code></pre><p>當然，項目清單很可能會不小心產生，像是下面這樣的寫法：</p><pre><code>1986. What a great season.</code></pre><p>換句話說，也就是在行首出現<em>數字-句點-空白</em>，要避免這樣的狀況，你可以在句點前面加上反斜線。</p><pre><code>1986\. What a great season.</code></pre><h3 id="precode">程式碼區塊</h3><p>和程式相關的寫作或是標籤語言原始碼通常會有已經排版好的程式碼區塊，通常這些區塊我們並不希望它以一般段落文件的方式去排版，而是照原來的樣子顯示，Markdown 會用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 標籤來把程式碼區塊包起來。</p><p>要在 Markdown 中建立程式碼區塊很簡單，只要簡單地縮排 4 個空白或是 1 個 tab 就可以，例如，下面的輸入：</p><pre><code>This is a normal paragraph:    This is a code block.</code></pre><p>Markdown 會轉換成：</p><pre><code>&lt;p&gt;This is a normal paragraph:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;This is a code block.&lt;/code&gt;&lt;/pre&gt;</code></pre><p>這個每行一階的縮排（4 個空白或是 1 個 tab），都會被移除，例如：</p><pre><code>Here is an example of AppleScript:    tell application &quot;Foo&quot;        beep    end tell</code></pre><p>會被轉換為：</p><pre><code>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;    beepend tell&lt;/code&gt;&lt;/pre&gt;</code></pre><p>一個程式碼區塊會一直持續到沒有縮排的那一行（或是文件結尾）。</p><p>在程式碼區塊裡面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 會自動轉成 HTML 實體，這樣的方式讓你非常容易使用 Markdown 插入範例用的 HTML 原始碼，只需要複製貼上，再加上縮排就可以了，剩下的 Markdown 都會幫你處理，例如：</p><pre><code>    &lt;div class=&quot;footer&quot;&gt;        &amp;copy; 2004 Foo Corporation    &lt;/div&gt;</code></pre><p>會被轉換為：</p><pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;    &amp;amp;copy; 2004 Foo Corporation&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;</code></pre><p>程式碼區塊中，一般的 Markdown 語法不會被轉換，像是星號便只是星號，這表示你可以很容易地以 Markdown 語法撰寫 Markdown 語法相關的文件。</p><h3 id="hr">分隔線</h3><p>你可以在一行中用三個或以上的星號、減號、底線來建立一個分隔線，行內不能有其他東西。你也可以在星號中間插入空白。下面每種寫法都可以建立分隔線：</p><pre><code>* * *********- - ----------------------------------------</code></pre><hr><h2 id="span">區段元素</h2><h3 id="link">連結</h3><p>Markdown 支援兩種形式的連結語法： <em>行內</em>和<em>參考</em>兩種形式。</p><p>不管是哪一種，連結的文字都是用 [方括號] 來標記。</p><p>要建立一個行內形式的連結，只要在方塊括號後面馬上接著括號並插入網址連結即可，如果你還想要加上連結的 title 文字，只要在網址後面，用雙引號把 title 文字包起來即可，例如：</p><pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.[This link](http://example.net/) has no title attribute.</code></pre><p>會產生：</p><pre><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;an example&lt;/a&gt; inline link.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has notitle attribute.&lt;/p&gt;</code></pre><p>如果你是要連結到同樣主機的資源，你可以使用相對路徑：</p><pre><code>See my [About](/about/) page for details.   </code></pre><p>參考形式的連結使用另外一個方括號接在連結文字的括號後面，而在第二個方括號裡面要填入用以辨識連結的標籤：</p><pre><code>This is [an example][id] reference-style link.</code></pre><p>你也可以選擇性地在兩個方括號中間加上空白：</p><pre><code>This is [an example] [id] reference-style link.</code></pre><p>接著，在文件的任意處，你可以把這個標籤的連結內容定義出來：</p><pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;</code></pre><p>連結定義的形式為：</p><ul><li>方括號，裡面輸入連結的辨識用標籤</li><li>接著一個冒號</li><li>接著一個以上的空白或 tab</li><li>接著連結的網址</li><li>選擇性地接著 title 內容，可以用單引號、雙引號或是括弧包著</li></ul><p>下面這三種連結的定義都是相同：</p><pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;[foo]: http://example.com/  &#39;Optional Title Here&#39;[foo]: http://example.com/  (Optional Title Here)</code></pre><p><strong>請注意：</strong>有一個已知的問題是 Markdown.pl 1.0.1 會忽略單引號包起來的連結 title。</p><p>連結網址也可以用方括號包起來：</p><pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</code></pre><p>你也可以把 title 屬性放到下一行，也可以加一些縮排，網址太長的話，這樣會比較好看：</p><pre><code>[id]: http://example.com/longish/path/to/resource/here    &quot;Optional Title Here&quot;</code></pre><p>網址定義只有在產生連結的時候用到，並不會直接出現在文件之中。</p><p>連結辨識標籤可以有字母、數字、空白和標點符號，但是並<em>不</em>區分大小寫，因此下面兩個連結是一樣的：</p><pre><code>[link text][a][link text][A]</code></pre><p><em>預設的連結標籤</em>功能讓你可以省略指定連結標籤，這種情形下，連結標籤和連結文字會視為相同，要用預設連結標籤只要在連結文字後面加上一個空的方括號，如果你要讓 “Google” 連結到 google.com，你可以簡化成：</p><pre><code>[Google][]</code></pre><p>然後定義連結內容：</p><pre><code>[Google]: http://google.com/</code></pre><p>由於連結文字可能包含空白，所以這種簡化的標籤內也可以包含多個文字：</p><pre><code>Visit [Daring Fireball][] for more information.</code></pre><p>然後接著定義連結：</p><pre><code>[Daring Fireball]: http://daringfireball.net/</code></pre><p>連結的定義可以放在文件中的任何一個地方，我比較偏好直接放在連結出現段落的後面，你也可以把它放在文件最後面，就像是註解一樣。</p><p>下面是一個參考式連結的範例：</p><pre><code>I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3].  [1]: http://google.com/        &quot;Google&quot;  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;  [3]: http://search.msn.com/    &quot;MSN Search&quot;</code></pre><p>如果改成用連結名稱的方式寫：</p><pre><code>I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].  [google]: http://google.com/        &quot;Google&quot;  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</code></pre><p>上面兩種寫法都會產生下面的 HTML。</p><pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;</code></pre><p>下面是用行內形式寫的同樣一段內容的 Markdown 文件，提供作為比較之用：</p><pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</code></pre><p>參考式的連結其實重點不在於它比較好寫，而是它比較好讀，比較一下上面的範例，使用參考式的文章本身只有 81 個字元，但是用行內形式的連結卻會增加到 176 個字元，如果是用純 HTML 格式來寫，會有 234 個字元，在 HTML 格式中，標籤比文字還要多。</p><p>使用 Markdown 的參考式連結，可以讓文件更像是瀏覽器最後產生的結果，讓你可以把一些標記相關的資訊移到段落文字之外，你就可以增加連結而不讓文章的閱讀感覺被打斷。</p><h3 id="em">強調</h3><p>Markdown 使用星號（<code>*</code>）和底線（<code>_</code>）作為標記強調字詞的符號，被 <code>*</code> 或 <code>_</code> 包圍的字詞會被轉成用 <code>&lt;em&gt;</code> 標籤包圍，用兩個 <code>*</code> 或 <code>_</code> 包起來的話，則會被轉成 <code>&lt;strong&gt;</code>，例如：</p><pre><code>*single asterisks*_single underscores_**double asterisks**__double underscores__</code></pre><p>會轉成：</p><pre><code>&lt;em&gt;single asterisks&lt;/em&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;strong&gt;double underscores&lt;/strong&gt;</code></pre><p>你可以隨便用你喜歡的樣式，唯一的限制是，你用什麼符號開啟標籤，就要用什麼符號結束。</p><p>強調也可以直接插在文字中間：</p><pre><code>un*frigging*believable</code></pre><p>但是如果你的 <code>*</code> 和 <code>_</code> 兩邊都有空白的話，它們就只會被當成普通的符號。</p><p>如果要在文字前後直接插入普通的星號或底線，你可以用反斜線：</p><pre><code>\*this text is surrounded by literal asterisks\*</code></pre><h3 id="code">程式碼</h3><p>如果要標記一小段行內程式碼，你可以用反引號把它包起來（<code>`</code>），例如：</p><pre><code>Use the `printf()` function.</code></pre><p>會產生：</p><pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;</code></pre><p>如果要在程式碼區段內插入反引號，你可以用多個反引號來開啟和結束程式碼區段：</p><pre><code>``There is a literal backtick (`) here.``</code></pre><p>這段語法會產生：</p><pre><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;</code></pre><p>程式碼區段的起始和結束端都可以放入一個空白，起始端後面一個，結束端前面一個，這樣你就可以在區段的一開始就插入反引號：</p><pre><code>A single backtick in a code span: `` ` ``A backtick-delimited string in a code span: `` `foo` ``</code></pre><p>會產生：</p><pre><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;</code></pre><p>在程式碼區段內，<code>&amp;</code> 和方括號都會被轉成 HTML 實體，這樣會比較容易插入 HTML 原始碼，Markdown 會把下面這段：</p><pre><code>Please don&#39;t use any `&lt;blink&gt;` tags.</code></pre><p>轉為：</p><pre><code>&lt;p&gt;Please don&#39;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;</code></pre><p>你也可以這樣寫：</p><pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.</code></pre><p>以產生：</p><pre><code>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encodedequivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;</code></pre><h3 id="img">圖片</h3><p>很明顯地，要在純文字應用中設計一個 「自然」的語法來插入圖片是有一定難度的。</p><p>Markdown 使用一種和連結很相似的語法來標記圖片，同樣也允許兩種樣式： <em>行內</em>和<em>參考</em>。</p><p>行內圖片的語法看起來像是：</p><pre><code>![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</code></pre><p>詳細敘述如下：</p><ul><li>一個驚嘆號 <code>!</code></li><li>接著一對方括號，裡面放上圖片的替代文字</li><li>接著一對普通括號，裡面放上圖片的網址，最後還可以用引號包住並加上<br>選擇性的 ‘title’ 文字。</li></ul><p>參考式的圖片語法則長得像這樣：</p><pre><code>![Alt text][id]</code></pre><p>「id」是圖片參考的名稱，圖片參考的定義方式則和連結參考一樣：</p><pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;</code></pre><p>到目前為止， Markdown 還沒有辦法指定圖片的寬高，如果你需要的話，你可以使用普通的 <code>&lt;img&gt;</code> 標籤。</p><hr><h2 id="misc">其它</h2><h3 id="autolink">自動連結</h3><p>Markdown 支援比較簡短的自動連結形式來處理網址和電子郵件信箱，只要是用方括號包起來， Markdown 就會自動把它轉成連結，連結的文字就和連結位置一樣，例如：</p><pre><code>&lt;http://example.com/&gt;</code></pre><p>Markdown 會轉為：</p><pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;</code></pre><p>自動的郵件連結也很類似，只是 Markdown 會先做一個編碼轉換的過程，把文字字元轉成 16 進位碼的 HTML 實體，這樣的格式可以混淆一些不好的信箱地址收集機器人，例如：</p><pre><code>&lt;address@example.com&gt;</code></pre><p>Markdown 會轉成：</p><pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;</code></pre><p>在瀏覽器裡面，這段字串會變成一個可以點擊的「<a href="mailto:&#x61;&#x64;&#x64;&#x72;&#x65;&#x73;&#115;&#64;&#101;&#120;&#x61;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#x6d;">&#x61;&#x64;&#x64;&#x72;&#x65;&#x73;&#115;&#64;&#101;&#120;&#x61;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#x6d;</a>」連結。</p><p>（這種作法雖然可以混淆不少的機器人，但並無法全部擋下來，不過這樣也比什麼都不做好些。無論如何，公開你的信箱終究會引來廣告信件的。）</p><h3 id="backslash">跳脫字元</h3><p>Markdown 可以利用反斜線來插入一些在語法中有其它意義的符號，例如：如果你想要用星號加在文字旁邊的方式來做出強調效果（但不用 <code>&lt;em&gt;</code> 標籤），你可以在星號的前面加上反斜線：</p><pre><code>\*literal asterisks\*</code></pre><p>Markdown 支援在下面這些符號前面加上反斜線來幫助插入普通的符號：</p><pre><code>\   反斜線`   反引號*   星號_   底線&#123;&#125;  大括號[]  方括號()  括號#   井字號+加號-減號.   英文句點!   驚嘆號</code></pre><h2 id="acknowledgement">感謝</h2><p>感謝 <a href="https://twitter.com/#!/leafy7382">leafy7382</a> 協助翻譯，<a href="http://iamhlb.com/">hlb</a>、<a href="http://twitter.com/randylien">Randylien</a> 幫忙潤稿，<a href="https://twitter.com/#!/ethantw">ethantw</a> 的<a href="http://ethantw.net/projects/han/">漢字標準格式・CSS Reset</a>， <a href="http://kidwm.net/">WM</a> 回報文字錯誤。</p>]]></content>
    
    
    <categories>
      
      <category>Markdown</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Notion vs. Obsidian</title>
    <link href="/2024/05/28/%E7%AD%86%E8%A8%98%E8%BB%9F%E9%AB%94/Notion%20vs%20Obsidian/"/>
    <url>/2024/05/28/%E7%AD%86%E8%A8%98%E8%BB%9F%E9%AB%94/Notion%20vs%20Obsidian/</url>
    
    <content type="html"><![CDATA[<p>創建日期: March 17, 2024 6:28 PM</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在多個筆記軟體充斥的現代，Notion、Obsidian 無疑是打字筆記中的重要代表，就連部分大學教授都要求學生學會使用，並以此來繳交報告或作業。</p><p>這篇文章將會對 Notion 與 Obsidian 進行比較，幫助你選擇最適合自己的筆記軟體。</p><h1 id="重點一：Notion-與-Obsidian-個別的特點"><a href="#重點一：Notion-與-Obsidian-個別的特點" class="headerlink" title="重點一：Notion 與 Obsidian 個別的特點"></a>重點一：Notion 與 Obsidian 個別的特點</h1><h2 id="軟體宗旨"><a href="#軟體宗旨" class="headerlink" title="軟體宗旨"></a>軟體宗旨</h2><p>在比較 Notion 與 Obsidian 之前，兩個軟體的主要功能可以從它們的官網上窺探一二，</p><h3 id="Notion：合作-雲端-專案取向"><a href="#Notion：合作-雲端-專案取向" class="headerlink" title="Notion：合作 &amp; 雲端 &amp; 專案取向"></a>Notion：合作 &amp; 雲端 &amp; 專案取向</h3><p>Notion是一個多功能的協作和組織工具，它結合了筆記、任務管理、項目計劃、文檔編寫和團隊協作等功能。Notion的設計目的是為了提供一個集成的工作區，使個人用戶和團隊能夠在同一個平台上完成各種工作。</p><ul><li><strong>Wikis 百科</strong>：藉由將文章分門別類，創建屬於自己的知識庫。</li><li><strong>Workspace 團隊工作區</strong>：透過雲端共享的能力，讓工作區有如同 Google 協作的功。</li><li><strong>Projects 專案取向</strong>：每一篇筆記下都可以內嵌更多筆記，不用再為了收納而煩惱。</li><li><strong>雲端存檔</strong>：任何時刻、任何裝置，只要有 Notion 就可以雲端編輯、存檔</li><li><strong>多功能性：</strong> Notion支持多種內容類型，包括文本、表格、代碼、嵌入的媒體和其他應用程序的集成。這使得用戶可以在單一平台上進行多樣化的工作。</li><li><strong>結構化的內容組織：</strong> Notion使用了基於區塊的結構，允許用戶將內容按照區塊的方式進行組織，從而更靈活地排列和設計文檔。</li></ul><p><img src="/Notion%20vs%20Obsidian%20e394d14ea98148e9a99372346499a74b/Untitled.png" alt="Untitled"></p><h3 id="Obsidian"><a href="#Obsidian" class="headerlink" title="Obsidian"></a>Obsidian</h3><p>Obsidian是一款基於Markdown語言的知識管理和筆記軟件。它提供了一個結構化的工作空間，讓用戶可以創建和組織自己的筆記、文檔、想法和關聯。Obsidian強調了跨文件的連結和關聯，這使得用戶可以更容易地在不同筆記之間建立關聯，形成思維導圖式的結構。</p><ul><li><strong>離線存取</strong>：編輯筆記不受到任何網路連線的影響，任何筆記皆以本地存取</li><li><strong>Sharpen your thinking</strong>：專注強化你的思考能力</li><li><strong>Link &amp; Graph</strong>：透過連結與反向連結的方式，去關聯出筆記之間的關係</li><li><strong>Canvas 白板</strong>：透過一塊無限延伸的白板，讓使用者可以像警探一樣對單一主題做連結與思考</li><li><strong>插件和自定義：</strong> 可以根據自己的需求添加不同的功能和擴展，並進行界面的自定義。</li></ul><p><img src="/Notion%20vs%20Obsidian%20e394d14ea98148e9a99372346499a74b/Untitled%201.png" alt="Untitled"></p><p><img src="/Notion%20vs%20Obsidian%20e394d14ea98148e9a99372346499a74b/Untitled%202.png" alt="Untitled"></p><p><img src="/Notion%20vs%20Obsidian%20e394d14ea98148e9a99372346499a74b/Untitled%203.png" alt="Untitled"></p><h1 id="重點二：兩者的優缺點"><a href="#重點二：兩者的優缺點" class="headerlink" title="重點二：兩者的優缺點"></a>重點二：兩者的優缺點</h1><p>Obsidian 與 Notion 都提供了使用者良好的使用環境、筆記功能，但 Notion 更注重於多媒體、自定義頁面布局、雲端工作區，而 Obsidian 則是專注讓使用者的知識做連結、專一的對某個主題做深入的研究。</p><h2 id="簡易對照表格"><a href="#簡易對照表格" class="headerlink" title="簡易對照表格"></a>簡易對照表格</h2><table><thead><tr><th></th><th>Notion</th><th>Obsidian</th></tr></thead><tbody><tr><td>可直接於網路公開發表</td><td>V</td><td>X</td></tr><tr><td>雲端同步功能</td><td>內建，編輯時會同步到雲端</td><td>本身沒有，需搭配其他工具，如: OneDrive</td></tr><tr><td>團隊協作功能</td><td>V</td><td>X</td></tr><tr><td>開發者額外擴充功能</td><td>無，須等官方更新</td><td>有，可自行下載擴充模組自訂義</td></tr><tr><td>筆記模板</td><td>有，英文為主</td><td>有，需自製或下載</td></tr><tr><td>資料儲存空間上限</td><td>單筆資料傳輸 5 MB</td><td>無限制</td></tr><tr><td>存取筆記的方式</td><td>資料庫結構</td><td>巣狀資料夾結構</td></tr><tr><td>筆記搜尋功能</td><td>V</td><td>V</td></tr><tr><td>需熟練 Markdown 語法</td><td>X</td><td>V</td></tr><tr><td>上手難度</td><td>較低</td><td>較高</td></tr></tbody></table><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><p>我兩種筆記軟體都有使用，就一般的通用性來說，我認為 Notion 可以勝任大部分團隊的需求，日常紀錄的所需。而 Obsidian 則是當你需要對單一主題進行深入探討，或簡單撰寫筆記草稿時會用到的工具。</p><p>關於兩者的使用，可以查看我部落格上的使用教學，從中進一步認識兩個筆記軟體，自行探索與體悟使用心得。</p>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Notion 介紹</title>
    <link href="/2024/05/28/Markdown/Notion/Notion%E4%BB%8B%E7%B4%B9/"/>
    <url>/2024/05/28/Markdown/Notion/Notion%E4%BB%8B%E7%B4%B9/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.notion.so/product">Notion 官網連結</a></p><h1 id="什麼是-Notion？"><a href="#什麼是-Notion？" class="headerlink" title="什麼是 Notion？"></a>什麼是 Notion？</h1><p>Notion是一個多功能的協作和組織工具，它結合了筆記、任務管理、項目計劃、文檔編寫和團隊協作等功能。Notion的設計目的是為了提供一個集成的工作區，使個人用戶和團隊能夠在同一個平台上完成各種工作。</p><h1 id="Notion的主要特點"><a href="#Notion的主要特點" class="headerlink" title="Notion的主要特點"></a>Notion的主要特點</h1><p>Notion 的主要編輯語言跟 Markdown 類似</p><ol><li><p><strong>多功能性：</strong> Notion支持多種內容類型，包括文本、表格、代碼、嵌入的媒體和其他應用程序的集成。這使得用戶可以在單一平台上進行多樣化的工作。</p></li><li><p><strong>協作和共享：</strong> Notion允許用戶創建共享的工作空間，多人同時協作編輯文檔、任務列表和項目計劃。用戶可以設置不同的權限，以控制其他人對內容的訪問和編輯權限。</p></li><li><p><strong>結構化的內容組織：</strong> Notion使用了基於區塊的結構，允許用戶將內容按照區塊的方式進行組織，從而更靈活地排列和設計文檔。</p></li><li><p><strong>強大的搜索功能：</strong> Notion內建了強大的搜索引擎，用戶可以輕鬆地找到他們的內容，即使內容非常龐大也能快速檢索。</p></li><li><p><strong>跨平台支持：</strong> Notion提供了網頁應用、桌面應用和移動應用，使用戶可以在不同設備上方便地訪問和使用。</p></li></ol><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>總的來說，Notion被廣泛用於個人任務管理、專案團隊協作、知識管理和文檔編寫等方面。由於其靈活性和功能豐富性，它已經成為許多人在工作和學習中的首選工具之一。</p>]]></content>
    
    
    <categories>
      
      <category>Markdown</category>
      
      <category>Notion</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown,Notion</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown 介紹</title>
    <link href="/2024/05/28/Markdown/Markdown%20%E4%BB%8B%E7%B4%B9/"/>
    <url>/2024/05/28/Markdown/Markdown%20%E4%BB%8B%E7%B4%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="什麼是Markdown"><a href="#什麼是Markdown" class="headerlink" title="什麼是Markdown"></a>什麼是Markdown</h1><p>Markdown是一種輕量級標記語言，旨在用簡單且易讀易寫的方式來撰寫文檔。它使用純文本格式編寫，並且可以轉換為HTML等格式，以方便在網頁上顯示。</p><p>Markdown的設計目標是使人們可以使用一種易於閱讀和撰寫的純文本格式，同時保持文檔的結構性。它通常用於編寫Readme文件、博客文章、電子郵件，以及許多其他地方需要格式化文本的場合。</p><h1 id="Markdown的常見語法"><a href="#Markdown的常見語法" class="headerlink" title="Markdown的常見語法"></a>Markdown的常見語法</h1><ol><li><p><strong>標題：</strong> 使用#符號表示標題，例如<code># 標題1</code>表示一級標題，<code>## 標題2</code>表示二級標題，以此類推。</p></li><li><p><strong>列表：</strong> 使用*、+或-表示無序列表，使用數字和點表示有序列表。</p></li><li><p><strong>區塊引用：</strong> 使用&gt;表示區塊引用。</p></li><li><p><strong>連結：</strong> 使用<code>[文本](URL)</code>表示超鏈接。</p></li><li><p><strong>圖片：</strong> 使用<code>![描述文本](圖片URL)</code>表示插入圖片。</p></li><li><p><strong>強調：</strong> 使用*或_包圍文本表示斜體，使用**或__包圍文本表示粗體。</p></li><li><p><strong>代碼塊：</strong> 使用三個反引號（<code>）表示代碼塊，並指定代碼的語言，例如\</code>python … `&#96;&#96;</p></li></ol><p>語法的詳細資訊可以在部落格中的 <a href="source_posts%5CMarkdown%5CMarkdown%E8%AA%9E%E6%B3%95.md">Markdown 語法</a>中找到</p><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>Markdown的優勢在於它的簡單易學，且不需要特殊的編輯器，可以在任何文本編輯器中使用。它是許多平台和工具的首選格式，如GitHub、Stack Overflow、Jupyter Notebooks等。</p>]]></content>
    
    
    <categories>
      
      <category>Markdown</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 網站運行</title>
    <link href="/2024/05/28/Hexo/Hexo%20%E7%B6%B2%E7%AB%99%E9%81%8B%E8%A1%8C/"/>
    <url>/2024/05/28/Hexo/Hexo%20%E7%B6%B2%E7%AB%99%E9%81%8B%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<p>創建這個部落格之後，我希望自己能夠運行好這一個網站</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 架構說明</title>
    <link href="/2024/05/28/Hexo/Hexo%20%E6%9E%B6%E8%A8%AD%E7%92%B0%E5%A2%83/"/>
    <url>/2024/05/28/Hexo/Hexo%20%E6%9E%B6%E8%A8%AD%E7%92%B0%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<p>作為使用 shoka 主題的部落客，我想宣傳這一個主題</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>The 3n+1 problem</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/The%203n+1%20problem/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/The%203n+1%20problem/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA100<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="The%203n+1%20problem%201ca83eca7f384a99914be9ffab00282b/p100.pdf">p100.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>數學上有一個特別的規律，假設現在有一個數叫做【a】，進行以下計算：</p><ol><li>如果是奇數，則 3*a + 1</li><li>如果是偶數，則 a &#x2F; 2</li></ol><p>目前數學家證實在 0 ~ 10000 的範圍內，這個計算過程最終都會收斂到 a &#x3D; 1</p><p>給定兩個數（0＜i, j &lt; 10000）作為範圍，求出範圍中執行最多次計算過程的次數</p><ul><li>i、j，在輸入時大小順序隨機</li><li>輸出樣式：【ｉ　ｊ　最高次數】</li><li>重複執行直到 End of file</li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="C版本"><a href="#C版本" class="headerlink" title="C版本"></a>C版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">solve</span><span class="params">(<span class="type">int</span> input1, <span class="type">int</span> input2)</span>&#123;</span><br><span class="line"><span class="type">int</span> total = <span class="number">1</span>, sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = input1 ; i &lt;= input2 ; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = i ; j &gt; <span class="number">1</span> ;)&#123;</span><br><span class="line"><span class="keyword">if</span>(j%<span class="number">2</span>)&#123;</span><br><span class="line">j = (<span class="number">3</span>*j)+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">j = j/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">total += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(sum &lt; total)&#123;</span><br><span class="line">sum = total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">total = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> input1, input2;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;input1, &amp;input2) != EOF)&#123;</span><br><span class="line"><span class="type">int</span> result;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(input1 &gt; input2)&#123;</span><br><span class="line">result = solve(input2, input1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">result = solve(input1, input2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, input1, input2, result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>題目已經給定了虛擬碼（pseudocode）展示計算過程，只要注意 i、j 的大小關係即可</p><p>剩下的就照題目敘述寫程式</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Train Swapping</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Train%20Swapping/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Train%20Swapping/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA299<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=wF4vNZ_vHtE">銘傳資傳系 CPE 042 UVa299-Train Swapping</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><ul><li>輸入火車的排列狀態，輸出需要交換多少次以排好順序</li><li>需要注意的有：<ol><li>輸入第一行一個整數 <code>N</code> 代表測資數</li><li>每筆測資第一行 <code>L</code> 代表火車長度 (0 ≤ L ≤ 50)</li><li><strong>每次交換只能對調相鄰兩車廂</strong></li><li>輸出格式<ul><li><code>Optimal train swapping takes S swaps.</code></li></ul></li></ol></li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本（泡沫排序法，Bubble-Sort）"><a href="#C-版本（泡沫排序法，Bubble-Sort）" class="headerlink" title="C++版本（泡沫排序法，Bubble Sort）"></a>C++版本（泡沫排序法，Bubble Sort）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> t, n;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span> arr[n];</span><br><span class="line"><span class="type">int</span> swapTimes = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">cin &gt;&gt; arr[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; i ; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[j]&gt;arr[i])&#123;</span><br><span class="line">swapTimes++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Optimal train swapping takes &quot;</span> &lt;&lt; swapTimes &lt;&lt; <span class="string">&quot; swaps.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-（合併排序法，Merge-Sort）"><a href="#C-（合併排序法，Merge-Sort）" class="headerlink" title="C++（合併排序法，Merge Sort）"></a>C++（合併排序法，Merge Sort）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="type">int</span> counter;</span><br><span class="line"><span class="type">int</span> ans[<span class="number">50</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Merge</span><span class="params">(<span class="type">int</span>* input, <span class="type">int</span> left, <span class="type">int</span> mid, <span class="type">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> idxl=left,idxr=mid+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=right-left;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(idxl&gt;mid)&#123;</span><br><span class="line">            <span class="comment">/* Left array run out */</span></span><br><span class="line">            ans[i]=input[idxr++];</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(idxr&gt;right)&#123;</span><br><span class="line">            <span class="comment">/* Right array run out */</span></span><br><span class="line">            ans[i]=input[idxl++];</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(input[idxl]&lt;=input[idxr])&#123;</span><br><span class="line">            <span class="comment">/* Copy left array value */</span></span><br><span class="line">            ans[i]=input[idxl++];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">/* Copy right array value */</span></span><br><span class="line">            counter += (mid-idxl+<span class="number">1</span>);</span><br><span class="line">            ans[i]=input[idxr++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Copy to original array */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=right-left;++i)&#123;</span><br><span class="line">        input[left+i]=ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mergeSort</span><span class="params">(<span class="type">int</span>* input, <span class="type">int</span> left, <span class="type">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(left&lt;right)&#123;</span><br><span class="line">        <span class="type">int</span> mid = (left+right)/<span class="number">2</span>;</span><br><span class="line">        <span class="comment">/* Split left array */</span></span><br><span class="line">        <span class="built_in">mergeSort</span>(input, left, mid);</span><br><span class="line">        <span class="comment">/* Split right array */</span></span><br><span class="line">        <span class="built_in">mergeSort</span>(input, mid+<span class="number">1</span>, right);</span><br><span class="line">        <span class="comment">/* Merge left and right array */</span></span><br><span class="line">        <span class="built_in">Merge</span>(input, left, mid, right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">    <span class="type">int</span> kase;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        cin &gt;&gt; kase;</span><br><span class="line">        <span class="keyword">if</span>(kase==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> input[<span class="number">50</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;kase;++i)&#123;</span><br><span class="line">                cin &gt;&gt; input[i];</span><br><span class="line">            &#125;</span><br><span class="line">            counter = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">mergeSort</span>(input,<span class="number">0</span>,kase<span class="number">-1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Optimal train swapping takes %d swaps.\n&quot;</span>, counter);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>使用泡沫排序法（Bubble sort）進行排序</p><ol><li>用迴圈比較兩兩相鄰元素，若前者較大則交換，並將交換次數++</li><li>最後輸出總交換次數</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>The Hotel with Infinite Rooms</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/The%20Hotel%20with%20Infinite%20Rooms/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/The%20Hotel%20with%20Infinite%20Rooms/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10170<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="The%20Hotel%20with%20Infinite%20Rooms%20305d3ab3e16643deb844ec9a99910f0e/p10170.pdf">p10170.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>有一間很奇怪的旅館，他有無限多的房間。來到這家旅館的旅行團都遵守以下的規則：</p><ol><li>同一個時間只能住一個旅行團。</li><li>每一旅行團在一早就住進旅館，然後在另一天的晚上離開。</li><li>上一個旅行團離開之後，隔天早上另一旅行團即住進。</li><li>除了第一個旅行團之外，每個剛來的旅行團的人數都比上一個旅行團多一人。</li><li>有n個人的旅行團會在旅館住n天。</li></ol><blockquote><p>例如：<br>有一個4個人的旅行團在8月1日上午住進旅館，他們會在8月4日晚上離開旅館。<br>下一個有5個人的旅行團會在8月5日住進，並且停留5天。</p></blockquote><p>給你第一個旅行團的人數，請你告訴我在某一天住在這家旅館的旅行團的人數有多少人。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> S, D;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; S &gt;&gt; D &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line"><span class="keyword">while</span>(D != <span class="number">0</span>)&#123;</span><br><span class="line">D -= S;</span><br><span class="line"><span class="keyword">if</span>(D &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">cout &lt;&lt; S &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">S++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ul><li>輸入第一組旅行團人數 <code>S</code>，輸出酒店內第 <code>D</code> 天的入住人數</li><li>需要注意的有：<ol><li><strong>有順序的</strong>重複輸入</li><li>每筆測資有兩整數<ul><li><code>S</code> 代表第一組旅行團人數 (第幾筆測資就是第幾組)</li><li><code>D</code> 代表欲查找的天數 (0 &lt; D &lt; 10^15)</li></ul></li><li><strong>HaluaRuti hotel</strong> 濃縮版規則<ul><li>房間無限</li><li>同一時間只能有一組旅行團入住</li><li>旅行團有 <code>n</code> 名團員就入住 <code>n</code> 天</li><li>每組旅行團人數比前一團多一人</li><li>每團都在早晨入住，第 <code>n</code> 天晚上退房</li></ul></li></ol></li></ul><p>簡單來說就是算數學就好，總天數重複相減當下旅行團的總人數，即可得出最後一天週期中，所居住的總人數。</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Vito’s Family</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Vito&#39;s%20Family/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Vito&#39;s%20Family/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10041<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="source/PDF/p10041.pdf">p10041.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>維克托要在紐約找房子，他希望這間房子離他所有親戚家的距離總和為最小值</p><ol><li>輸入第一列會給定一個數字（T），標示有幾組測資要進行輸入</li><li>每組測資的開頭會給定一個數字（0 &lt; r &lt; 500），標示有幾筆測資要進行輸入</li><li>輸入有可能重複的測資（0 &lt; s &lt; 3000）代表親戚家的門牌號碼</li></ol><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n, r, input; <span class="comment">// 測資數量, 有幾個親戚, 輸入的暫時存取</span></span><br><span class="line"></span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line">cin &gt;&gt; r;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; arr;</span><br><span class="line"><span class="type">int</span> mid = <span class="number">0</span>, distance_total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; r ; i++)&#123;</span><br><span class="line">cin &gt;&gt; input;</span><br><span class="line">arr.<span class="built_in">push_back</span>(input);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(), arr.<span class="built_in">end</span>());</span><br><span class="line">mid = arr[r / <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; r; i++)&#123;</span><br><span class="line">            distance_total = distance_total + <span class="built_in">abs</span>(mid - arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; distance_total &lt;&lt; endl;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C版本"><a href="#C版本" class="headerlink" title="C版本"></a>C版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> n, r; <span class="comment">// 測資數量, 有幾個親戚</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;r);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[r] = &#123;&#125;;</span><br><span class="line"><span class="type">int</span> mid = <span class="number">0</span>, distance_total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; r ; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sort(arr, arr+r);</span><br><span class="line">mid = arr[r / <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; r; i++)&#123;</span><br><span class="line">distance_total = distance_total + <span class="built_in">abs</span>(mid - arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;distance_total&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這一題並不複雜，只要你記得 C 語言中的陣列、數學中的中位數就可以了</p><ol><li>假設這些親戚全部都在一條數線上，門牌號碼代表所處的位置</li><li>利用數學中的中位數性質，可得出維克托的房子應該位於何處</li><li>利用步驟 2. 的結果，與其他門牌號碼相減取絕對值</li><li>加總步驟 3. 的結果，輸出距離的總和</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>What is the Probability</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/What%20is%20the%20Probability/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/What%20is%20the%20Probability/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10056<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="What%20is%20the%20Probability%20f08273bba93047dea0a350f7abfff81a/p10056.pdf">p10056.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>透過輸入值計算第 i 個人達成特定事件的機率。</p><p>r：回合數，n：總人數，p：成功機率，q &#x3D; (1- p)：失敗機率。</p><ul><li>第一列輸入一個值 S （S &lt; 1000）代表接下來有 S 列的輸入</li><li>每列輸入值都有三個值<ul><li>第一個值 n 代表玩家的總人數</li><li>第二個值 p 代表獲勝的機率</li><li>第三個值 k 代表要求出第幾位玩家獲勝的機率</li></ul></li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> s, n, k;</span><br><span class="line">    <span class="type">double</span> p; <span class="comment">// probability of successful event</span></span><br><span class="line">    <span class="type">double</span> q, ans;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s; i++)&#123;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; p &gt;&gt; k;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (p == <span class="number">0</span>)&#123;</span><br><span class="line">            ans = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            q = <span class="number">1</span> - p;</span><br><span class="line">            ans = <span class="built_in">pow</span>(q, k<span class="number">-1</span>) * p / (<span class="number">1</span> - <span class="built_in">pow</span>(q, n));  </span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">4</span>) &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這一題是大家相當厭惡的數學機率題目，先來講解機率要怎麼算：</p><p>假設現在：</p><ul><li>玩家總數 n &#x3D; 3</li><li>獲勝機率 p，失敗機率 q &#x3D; ( 1 - p )</li><li>求出第 k &#x3D; 2 位玩家獲勝的機率（此處假設第二位玩家叫做Ｂ）</li></ul><table><thead><tr><th>次數( i )</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th></tr></thead><tbody><tr><td>玩家</td><td>玩家A</td><td>玩家B</td><td>玩家C</td><td>玩家A</td><td>玩家B</td><td>玩家C</td><td>玩家A</td><td>玩家B</td><td>玩家C</td></tr><tr><td>第一輪才獲勝</td><td>q</td><td>p</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>第二輪才獲勝</td><td>q</td><td>q</td><td>q</td><td>q</td><td>p</td><td></td><td></td><td></td><td></td></tr><tr><td>第三輪才獲勝</td><td>q</td><td>q</td><td>q</td><td>q</td><td>q</td><td>q</td><td>q</td><td>p</td><td></td></tr><tr><td>(i-k)%n</td><td>-1</td><td>0</td><td>1</td><td>2</td><td>0</td><td>1</td><td>2</td><td>0</td><td>1</td></tr></tbody></table><p>獲勝機率 S</p><p>$$<br>S &#x3D; q^1 \times p + q^4 \times p + q^7 \times p +…<br>$$</p><p>可整理成通用公式</p><p>$$<br>S &#x3D; q^{k-1} \times p ;+; q^{k-1+n} \times p ;+; q^{k-1 + 2n} \times p +…<br>$$</p><p>隨後使用無窮等比級數公式化簡上述的通用公式</p><p>$$<br>S &#x3D; q^{k-1} \times p \times(1+q^{m}+q^{2m}+…)<br>&#x3D; \frac{q^{k-1} \times p}{1 - q^{m}}<br>$$</p><p>而這個公式結果轉化為C++程式語言的話</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pow</span>(q, k<span class="number">-1</span>) * p / (<span class="number">1</span> - <span class="built_in">pow</span>(q, n));  </span><br></pre></td></tr></table></figure><p>最後針對小數點進行輸出位數的限制</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">4</span>) &lt;&lt; ans &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>大功告成</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>You can say 11</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/You%20can%20say%2011/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/You%20can%20say%2011/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10929<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="You%20can%20say%2011%20c6fa598a5efd4b1b8bd069ff704e8434/p10929.pdf">p10929.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>給定一個數字，是求它是否為11的倍數</p><p>當輸入的數字為0時，程式結束</p><p><strong>數字大小：1 ~ 1000位數</strong></p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">string input;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">getline</span>(cin, input))&#123;</span><br><span class="line"><span class="keyword">if</span>(input == <span class="string">&quot;0&quot;</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 11 的倍數判別法為「奇數位數字和」減 「偶數位數字和」等於 0 或 11 的倍數。</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; input.<span class="built_in">length</span>() ; i++)&#123;</span><br><span class="line"><span class="type">int</span> n = input[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">a += n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">b += n;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((a-b)%<span class="number">11</span> == <span class="number">0</span>)</span><br><span class="line">            cout &lt;&lt; input &lt;&lt; <span class="string">&quot; is a multiple of 11.&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; input &lt;&lt; <span class="string">&quot; is not a multiple of 11.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>想到要解跟<strong>倍數有關</strong>的問題時，就要想<strong>【％】取餘數</strong>的功能</p><p><strong>11 的倍數判別法為「奇數位數字和」減 「偶數位數字和」等於 0 或 11 的倍數</strong></p><p>又因為題目的數字是1~1000位數的數字，正常的 int 和 long long int 都無法裝下</p><p>所以要使用字串【string】或者字元陣列【char[]】來存取題目的輸入</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>What&#39;s Cryptanalysis?</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/What&#39;s%20Cryptanalysis/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/What&#39;s%20Cryptanalysis/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10008<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="What's%20Cryptanalysis%20662b3675b4f1480096c1924a80f04cdb/p10008.pdf">p10008.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>密碼翻譯（cryptanalysis）是指把某個人寫的密文（cryptographic writing）加以分解。這個程序通常會對密文訊息做統計分析。你的任務就是寫一個程式來對密文作簡單的分析。</p><p>輸入的第1列有一個正整數n，代表以下有多少列需要作分析的密文。 接下來的n列，每列含有0或多個字元（可能包含空白字元）</p><p>每列包含一個大寫字元（A~Z）和一個正整數。這個正整數代表該字元在輸入中出現的次數。輸入中大小寫（例如：A及a）視為相同的字元。輸出時請按照字元出現的次數由大到小排列，如果有2個以上的字元出現次數相同的話，則按照字元的大小（例如：A在H之前）由小到大排列。 請注意：如果某一字元未出現在輸入中，那他也不應出現在輸出中。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本（進階版）"><a href="#C-版本（進階版）" class="headerlink" title="C++版本（進階版）"></a>C++版本（進階版）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt; a, pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt; b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.second == b.second)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.first &lt; b.first; <span class="comment">// 小到大排序 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.second &gt; b.second; <span class="comment">//大到小排序 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line">        map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; ans;</span><br><span class="line">        n++;</span><br><span class="line">        <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">            string s;</span><br><span class="line"><span class="built_in">getline</span>(cin, s);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; s.<span class="built_in">length</span>() ; i++)&#123;</span><br><span class="line"><span class="type">char</span> tmp = <span class="built_in">toupper</span>(s[i]);</span><br><span class="line"><span class="keyword">if</span>(tmp &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; tmp &lt;= <span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(ans.<span class="built_in">count</span>(tmp))&#123;</span><br><span class="line">            ans[tmp] += <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">ans.<span class="built_in">insert</span>(&#123;tmp, <span class="number">1</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">      vector&lt;pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">vec</span> (ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">      <span class="built_in">sort</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>(), cmp);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">auto</span> i: vec)&#123;</span><br><span class="line">          cout &lt;&lt; i.first &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; i.second &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-（基礎版）"><a href="#C-（基礎版）" class="headerlink" title="C++（基礎版）"></a>C++（基礎版）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,len=<span class="number">0</span>,count[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    cin.<span class="built_in">ignore</span>();</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        string line;</span><br><span class="line">        <span class="built_in">getline</span>(cin,line);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;line.<span class="built_in">length</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((line[i]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; line[i]&lt;=<span class="string">&#x27;z&#x27;</span>) || (line[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; line[i]&lt;=<span class="string">&#x27;Z&#x27;</span>))&#123;</span><br><span class="line">                len++;</span><br><span class="line">                count[<span class="built_in">toupper</span>(line[i])]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=len;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> i=<span class="string">&#x27;A&#x27;</span>;i&lt;=<span class="string">&#x27;Z&#x27;</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(count[i]==j)&#123;</span><br><span class="line">                cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;count[i]&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>計算多個目標出現的次數，要想到 C++ 的【map】功能</p><p>首先，用【ctype.h】中的【toupper】功能，將輸入的字串中要判斷的當前字元轉換為大寫</p><p>接著，用【ASCII】表的觀念，判斷當前字元是否介於【A~Z】之間</p><p>創建一個 map，字母當作【key】，出現次數當作【value】，利用 map 的【count】功能尋找當前字母有沒有已經出現過，如果有就次數+1，否則的話就插入當前字母並且次數為1。</p><p>這時候我們要解決一個問題：「map 只能使用 key 作為排序標準」</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multimap&lt;<span class="type">char</span>, <span class="type">int</span>, greater&lt;<span class="type">int</span>&gt;&gt; ans; <span class="comment">// 錯誤的寫法，因為 map 無法用 value 去做排序</span></span><br></pre></td></tr></table></figure><p>map 預設用 key 作為排序標準的功能，無法解決題目要求的排序。</p><p>為了解決這個問題，我們必須學習【vector】、【pair】、【bool】、【sort】等C++常見語法</p><h3 id="vector-與-pair-的聯動"><a href="#vector-與-pair-的聯動" class="headerlink" title="vector 與 pair 的聯動"></a>vector 與 pair 的聯動</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">vec</span> (ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure><p>效果如同下列敘述：</p><table><thead><tr><th>pair 將兩個資料進行綁定</th><th>first</th><th>second</th></tr></thead><tbody><tr><td>vec（vector 變數名稱）</td><td>char</td><td>int</td></tr><tr><td>第一項（０）</td><td>A</td><td>2</td></tr><tr><td>第二項（１）</td><td>B</td><td>3</td></tr></tbody></table><h3 id="bool-與-sort-的聯動"><a href="#bool-與-sort-的聯動" class="headerlink" title="bool 與 sort 的聯動"></a>bool 與 sort 的聯動</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt; a, pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt; b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.second == b.second)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.first &lt; b.first; <span class="comment">// 字母小到大排序 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.second &gt; b.second; <span class="comment">// 次數大到小排序 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>(), cmp);</span><br></pre></td></tr></table></figure><p>sort 原本預設可以對一個一維陣列進行以下規則的排序：</p><ol><li>從大到小 </li><li>從小到大</li></ol><p>sort 也允許使用者自行撰寫排序的規則【bool】，這一題也沒辦法用簡單的一維陣列排序解決</p><p>這個 bool 先針對次數進行大到小排序，若次數相同，則進行字母小到大排序</p><h3 id="for-auto"><a href="#for-auto" class="headerlink" title="for auto"></a>for auto</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> i: vec)&#123;</span><br><span class="line">    cout &lt;&lt; i.first &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; i.second &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>i 會自動抓取資料，重複執行直到陣列的結尾</p><h3 id="結論整體結構應該長的像以下所示："><a href="#結論整體結構應該長的像以下所示：" class="headerlink" title="結論整體結構應該長的像以下所示："></a>結論整體結構應該長的像以下所示：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt; a, pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt; b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.second == b.second)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.first &lt; b.first; <span class="comment">// 小到大排序 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.second &gt; b.second; <span class="comment">//大到小排序 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; ans;</span><br><span class="line"></span><br><span class="line">vector&lt;pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">vec</span> (ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line"><span class="built_in">sort</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>(), cmp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="學習的資源"><a href="#學習的資源" class="headerlink" title="學習的資源"></a>學習的資源</h3><p><a href="https://www.cnblogs.com/kingwz/p/15611888.html">C++ map按key或按value排序 - kingwzun - 博客园</a></p><p><a href="https://hackmd.io/@erichung0906/cpp#5-map">C++學習筆記 - HackMD</a></p><p><a href="https://shengyu7697.github.io/std-vector/">C++ std::vector 用法與範例</a></p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Palindrome</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Palindrome/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Palindrome/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 考古題<br>題號: UVA401<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Palindrome%208efa14ec777d456887487e1a47f6768e/401.pdf">401.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>給定一串字列，判斷是否符合下列條件：</p><ol><li>若前後讀起來相同，如：ABCBA，那就是【Palindrome】回文</li><li>若前後的單字剛好鏡像，如：2A3MEAS，那就是【mirrored string】鏡像文字</li><li>若字列同時符合上述兩個條件，如：ATOYOTA，則稱之為【mirrored Palindrome】鏡像且回文</li></ol><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用Java的考生請注意，最外層的類別(class)需命名為 main 。</span></span><br><span class="line"><span class="comment">//如果遇到超乎想像的狀況，請更改編譯器試看看!! 各編譯器特性不同!!</span></span><br><span class="line"><span class="comment">//預設測資、隨機測資、固定測資是用來幫助除錯用的。批改時，只看暗中測資是否通過!!</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">testPalindrome</span><span class="params">(string arr, <span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a &gt;= b)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(arr[a] == arr[b])&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">testPalindrome</span>(arr, a+<span class="number">1</span>, b<span class="number">-1</span>); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">testMirrored</span><span class="params">(string arr, <span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a &gt;= b)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(arr[a])&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">    arr[a] = <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">    arr[a] = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">    arr[a] = <span class="string">&#x27;Z&#x27;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;J&#x27;</span>:</span><br><span class="line">    arr[a] = <span class="string">&#x27;L&#x27;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;S&#x27;</span>:</span><br><span class="line">    arr[a] = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">    arr[a] = <span class="string">&#x27;3&#x27;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">    arr[a] = <span class="string">&#x27;5&#x27;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">    arr[a] = <span class="string">&#x27;J&#x27;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(arr[a] == arr[b])&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">testMirrored</span>(arr, a+<span class="number">1</span>, b<span class="number">-1</span>); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string input;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;input &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line">        <span class="type">int</span> len = input.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> result_palind = <span class="built_in">testPalindrome</span>(input, <span class="number">0</span>, len);</span><br><span class="line">        <span class="type">int</span> result_mirrored = <span class="built_in">testMirrored</span>(input, <span class="number">0</span>, len);</span><br><span class="line">        </span><br><span class="line">        cout &lt;&lt; input &lt;&lt; <span class="string">&quot; -- &quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(result_palind &amp;&amp; result_mirrored)&#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;is a mirrored palindrome.&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(result_mirrored)&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;is a mirrored string.&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(result_palind)&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;is a regular palindrome.&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;is not a palindrome.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這題看似很難，實際上要算的東西只有一點點而已，不彷參閱之前的程式練習題</p><p><a href="../../%E8%AE%80%E6%9B%B8%E6%9C%83%E9%A6%96%E9%A0%81%20da2b876d04d3429187bf9643479ec5ff/%E4%B8%8A%E8%AA%B2%E7%AD%86%E8%A8%98%E7%B8%BD%E8%A6%BD%20a775e73047084a9fb053dcf3256241ae/%E6%89%80%E6%9C%89%E7%AD%86%E8%A8%98%E4%B9%8B%E5%AD%B8%E5%B9%B4%E5%BA%A6%E4%B8%8A%E4%B8%8B%E5%AD%B8%E6%9C%9F%E7%B8%BD%E8%A6%BD%2063975aa1981b479099eb27a8995d1576/2023%20%E4%B8%8A%E5%AD%B8%E6%9C%9F%203b660802002f4e89ba641d508f08e109/%E6%89%80%E6%9C%89%E8%AA%B2%E7%A8%8B%200cbaa55dafff44cf8a6026b44452a805/%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%20i%E3%80%81ii%20f0a347ae13f944f8b2afa1ef15063464/%E7%AD%86%E8%A8%98%E7%B8%BD%E8%A6%BD%20b843dbf89a2a43b0ab6cd1d36f300a48/12%2013%20%E7%AC%AC%E4%B8%80%E9%A1%8C%20%E5%9B%9E%E6%96%87%20c2aff093e16c46b893634a0cf6f9c84e.md">12&#x2F;13 第一題 回文</a></p><p>利用開頭與結尾相對照就可以輕鬆解題</p><p>鏡像文字看起來很麻煩，實際上只要將字列左半邊的文字先行轉換成鏡像文字，就可以直接判斷了</p><h3 id="解題步驟（C-）："><a href="#解題步驟（C-）：" class="headerlink" title="解題步驟（C++）："></a>解題步驟（C++）：</h3><ol><li>創建一個 string 用來存取輸入的字列，len 存取字列長度</li><li>創建 testPalindrome 測試是否為回文<ol><li>檢查位於第 start 項的字元是否等於第 end 項的字元</li><li>是，進行遞迴</li><li>否，回傳 ０（不是回文）</li><li>當 start ≥ end（判斷結束時），回傳１（是回文）</li></ol></li><li>創建 testMirrored 測試是否為鏡像文字<ol><li>判斷步驟相當於 testPalindrome</li><li>新增 switch 來轉換左側的字元為鏡像文字</li><li>進行前後比對</li><li>是，進行遞迴</li><li>否，回傳０（不是鏡像文字）</li><li>當 start ≥ end（判斷結束時），回傳１（是鏡像文字）</li></ol></li><li>將 testPalindrome 和 testMirrored 的傳回值分別存取<ol><li>皆符合：Mirrored Palindrome</li><li>只符合 Mirrored：Mirrored string</li><li>只符合 Palindrome：regular Palindrome </li><li>皆不符合：no palindrome</li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Primary Arithmetic</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Primary%20Arithmetic/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Primary%20Arithmetic/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10035<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Primary%20Arithmetic%2069e2d62ebb44489c862d44c58b6d649b/p10035.pdf">p10035.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>給定 2 個數字（小於 10 位數），求兩者相加之後，有幾次進位發生</p><ol><li>一次以上（ｎ次）：n carry operations</li><li>剛好一次：1 carry operation</li><li>完全沒有：No carry operation</li></ol><p>輸入的終止條件為【兩數皆同時為０】的時候</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="C版本"><a href="#C版本" class="headerlink" title="C版本"></a>C版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">re</span><span class="params">(<span class="type">int</span> input1, <span class="type">int</span> input2)</span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">12</span>],  b[<span class="number">12</span>] = &#123;&#125;;</span><br><span class="line"><span class="type">int</span> carry_total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">12</span> ; i++)&#123;</span><br><span class="line">a[i] = input1%<span class="number">10</span>;</span><br><span class="line">input1 /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">12</span> ; i++)&#123;</span><br><span class="line">b[i] = input2%<span class="number">10</span>;</span><br><span class="line">input2 /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">12</span> ; i++)&#123;</span><br><span class="line"><span class="type">int</span> tmp = a[i]+b[i];</span><br><span class="line"><span class="keyword">if</span>(tmp &gt;= <span class="number">10</span>)&#123;</span><br><span class="line">a[i+<span class="number">1</span>] += <span class="number">1</span>;</span><br><span class="line">carry_total++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> carry_total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> input1, input2;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;input1, &amp;input2))&#123;</span><br><span class="line"><span class="keyword">if</span>(input1 == <span class="number">0</span> &amp;&amp; input2 == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(input1 &gt; input2)&#123;</span><br><span class="line">result = re(input1, input2);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">result = re(input2, input1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(result &gt; <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d carry operations.\n&quot;</span>, result);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(result == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d carry operation.\n&quot;</span>, result);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No carry operation.\n&quot;</span>, result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><h3 id="看到這題目應該要回想起-2-件事"><a href="#看到這題目應該要回想起-2-件事" class="headerlink" title="看到這題目應該要回想起 2 件事"></a><strong>看到這題目應該要回想起 2 件事</strong></h3><ol><li><p>程式設計（i、ii）的練習題</p><p> <a href="../../%E8%AE%80%E6%9B%B8%E6%9C%83%E9%A6%96%E9%A0%81%20da2b876d04d3429187bf9643479ec5ff/%E4%B8%8A%E8%AA%B2%E7%AD%86%E8%A8%98%E7%B8%BD%E8%A6%BD%20a775e73047084a9fb053dcf3256241ae/%E6%89%80%E6%9C%89%E7%AD%86%E8%A8%98%E4%B9%8B%E5%AD%B8%E5%B9%B4%E5%BA%A6%E4%B8%8A%E4%B8%8B%E5%AD%B8%E6%9C%9F%E7%B8%BD%E8%A6%BD%2063975aa1981b479099eb27a8995d1576/2023%20%E4%B8%8A%E5%AD%B8%E6%9C%9F%203b660802002f4e89ba641d508f08e109/%E6%89%80%E6%9C%89%E8%AA%B2%E7%A8%8B%200cbaa55dafff44cf8a6026b44452a805/%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%20i%E3%80%81ii%20f0a347ae13f944f8b2afa1ef15063464/%E7%AD%86%E8%A8%98%E7%B8%BD%E8%A6%BD%20b843dbf89a2a43b0ab6cd1d36f300a48/12%2020%20%E7%AC%AC%E4%B8%80%E9%A1%8C%20How%20many%20operations%2068895d15672447ddb80a4d6df92e1d18.md">12&#x2F;20 第一題 How many operations</a></p></li><li><p>之前是怎麼拆分一出一個數字的所有位數</p><p> <a href="../../%E8%AE%80%E6%9B%B8%E6%9C%83%E9%A6%96%E9%A0%81%20da2b876d04d3429187bf9643479ec5ff/%E4%B8%8A%E8%AA%B2%E7%AD%86%E8%A8%98%E7%B8%BD%E8%A6%BD%20a775e73047084a9fb053dcf3256241ae/%E6%89%80%E6%9C%89%E7%AD%86%E8%A8%98%E4%B9%8B%E5%AD%B8%E5%B9%B4%E5%BA%A6%E4%B8%8A%E4%B8%8B%E5%AD%B8%E6%9C%9F%E7%B8%BD%E8%A6%BD%2063975aa1981b479099eb27a8995d1576/2023%20%E4%B8%8A%E5%AD%B8%E6%9C%9F%203b660802002f4e89ba641d508f08e109/%E6%89%80%E6%9C%89%E8%AA%B2%E7%A8%8B%200cbaa55dafff44cf8a6026b44452a805/%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%20i%E3%80%81ii%20f0a347ae13f944f8b2afa1ef15063464/%E7%AD%86%E8%A8%98%E7%B8%BD%E8%A6%BD%20b843dbf89a2a43b0ab6cd1d36f300a48/11%2022%20%E7%AC%AC%E4%BA%8C%E9%A1%8C%20%E6%95%B8%E5%AD%97%E7%B8%BD%E5%92%8C%20a8705e9a2f0b451c9b7294c9efa257e1.md">11&#x2F;22 第二題 數字總和</a></p></li></ol><h3 id="步驟"><a href="#步驟" class="headerlink" title="步驟"></a>步驟</h3><ol><li>利用 for 迴圈、%10 與陣列，拆分出輸入值的所有位數</li><li>兩個陣列相同索引值的數字相加<ol><li>如果超過 10 ，則下一項的數字+1，計數器+1</li><li>沒有的話，則不作動</li></ol></li><li>檢查計數器的數字，依照規則輸出<ol><li>一次以上（ｎ次）：n carry operations</li><li>剛好一次：1 carry operation</li><li>完全沒有：No carry operation</li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Parity</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Parity/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Parity/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10931<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Parity%20bb3c02d2aad84532b84403fb888042bc/p10931.pdf">p10931.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>整數 <strong>n</strong> 的「同位元」定義為：其二進位表示法中每位元的和再除以 2 的餘數。</p><p>例如：21 &#x3D; 101012 的二進位有三個 1，因此它的同位元為 3 (mod 2)，或 1。</p><p>在此，你要計算一個整數 <strong>1 ≤ I ≤ 2147483647</strong> 的同位元。</p><p>輸入的每一行有一個整數 <strong>I</strong>，而 <strong>I &#x3D; 0</strong> 表示輸入結束，該行無需處理。</p><p>對於輸入中的每個整 <strong>I</strong>，你要印一行 **The parity of B is P (mod 2).**，其中 <strong>B</strong> 是 <strong>I</strong> 的二進位表示法。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Decimal_to_Binary_count</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> total = <span class="number">0</span>, tmp;</span><br><span class="line"><span class="keyword">while</span>(n != <span class="number">0</span>)&#123;</span><br><span class="line">tmp = (n%<span class="number">2</span> == <span class="number">0</span>? <span class="number">0</span>:<span class="number">1</span>);</span><br><span class="line">total += tmp;</span><br><span class="line">n/=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Decimal_to_Binary</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> tmp;</span><br><span class="line"><span class="keyword">if</span>(n != <span class="number">0</span>)&#123;</span><br><span class="line">tmp = (n%<span class="number">2</span> == <span class="number">0</span>? <span class="number">0</span>:<span class="number">1</span>);</span><br><span class="line">n /= <span class="number">2</span>;</span><br><span class="line"><span class="built_in">Decimal_to_Binary</span>(n);</span><br><span class="line">cout &lt;&lt; tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> input;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; input &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line"><span class="keyword">if</span>(input == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> sum = <span class="built_in">Decimal_to_Binary_count</span>(input);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;The parity of &quot;</span>;</span><br><span class="line"><span class="built_in">Decimal_to_Binary</span>(input);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; is &quot;</span> &lt;&lt; sum &lt;&lt; <span class="string">&quot; (mod 2).&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>類似題目如下連結，進位制的轉換也寫在裡面：</p><p><a href="Funny%20Encryption%20Method%2026d4d712214e4823839ffed511732879.md"><strong>Funny Encryption Method</strong></a></p><ol><li>遞迴輸出 2 進位的結果</li><li>計算 2 進位中 1 出現過幾次</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Problem J Summing Digits</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Problem%20J%20Summing%20Digits/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Problem%20J%20Summing%20Digits/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA11332<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Problem%20J%20Summing%20Digits%202fc9b112c10c461eacd20cf50dcb7d68/p10222.pdf">p10222.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>定義一個函式 f(n) 是所有十進位數字位數的總和，再 f(f(n))、f(f(f(n)))……，直到只剩下個位數為止並定義該值為 g(n)。</p><ul><li>輸入的每一行會有一個正整數 n，其值最大到 2×10^9</li><li>必須輸出g(n)。輸入是以0值做為結束，該值不需要輸出</li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本（語法改一改，C版本是一模一樣的）"><a href="#C-版本（語法改一改，C版本是一模一樣的）" class="headerlink" title="C++版本（語法改一改，Ｃ版本是一模一樣的）"></a>C++版本（語法改一改，Ｃ版本是一模一樣的）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        sum += n%<span class="number">10</span>;</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans = n;</span><br><span class="line">        <span class="keyword">while</span>(ans &gt;= <span class="number">10</span>)</span><br><span class="line">            ans = <span class="built_in">f</span>(ans);</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>用遞迴+迴圈即可解決這一題，用【%】取個位數的數字，【&#x2F;&#x3D;】將位數向下推移一位</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Rotating Sentences</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Rotating%20Sentences/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Rotating%20Sentences/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA490<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Rotating%20Sentences%20ff60db9af5b249239b9ebc503afde47e/p490.pdf">p490.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>在這個問題中你必須將數列文字往順時針方向旋轉90度。也就是說將原本由左到右，由上到下的句子輸出成由上到下，由右到左。</p><p>輸入最多不會超過100列，每列最多不會超過100個字元。 </p><p>合法的字元包括：換行，空白，所有的標點符號，數字，以及大小寫字母。</p><p><strong>（注意：Tabs並不算是合法字元。）</strong> </p><p>最後一列輸入必須垂直輸出在最左邊一行，輸入的第一列必須垂直輸出在最右邊一行。</p><p> 請參考題目 PDF 的 sample intput&#x2F;output。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a, is1[<span class="number">100</span>]=&#123;<span class="string">&quot;&quot;</span>&#125;;<span class="comment">//輸入用字串 </span></span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,t;<span class="comment">//方便用 </span></span><br><span class="line">    <span class="type">int</span> num,maxlen=<span class="number">0</span>;<span class="comment">//num計算有幾個句子 </span></span><br><span class="line">                     <span class="comment">//maxlen計算最長句子長度 </span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">getline</span>(cin,a))<span class="comment">//輸入資料 </span></span><br><span class="line">    &#123;</span><br><span class="line">    is1[i]=a;</span><br><span class="line">        <span class="keyword">if</span>(is1[i].<span class="built_in">length</span>()&gt;maxlen)<span class="comment">//取得最長句子的長度 </span></span><br><span class="line">        &#123;</span><br><span class="line">            maxlen=is1[i].<span class="built_in">length</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    num=i;<span class="comment">//紀錄句子數量 </span></span><br><span class="line">     </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;maxlen;i++)<span class="comment">//開始翻轉</span></span><br><span class="line">    &#123;                    <span class="comment">//i代表列 </span></span><br><span class="line">        <span class="type">int</span> gap=<span class="number">0</span>;<span class="comment">//計算空白用的 </span></span><br><span class="line">        <span class="keyword">for</span>(t=num<span class="number">-1</span>;t&gt;=<span class="number">0</span>;t--)<span class="comment">//t代表行 </span></span><br><span class="line">        &#123;                    <span class="comment">//num代表句子數量，所以t必須減1才符合陣列要求 </span></span><br><span class="line">            <span class="keyword">if</span>(i&gt;=is1[t].<span class="built_in">length</span>()) <span class="comment">//如果超出該句長度 </span></span><br><span class="line">            &#123;                     <span class="comment">//就先計算要以多少空白作為代替 </span></span><br><span class="line">                gap++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span>(gap&gt;<span class="number">0</span>)<span class="comment">//先輸出空白以代替完結句子 </span></span><br><span class="line">                &#123;</span><br><span class="line">                    cout&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                    gap--;</span><br><span class="line">                &#125;</span><br><span class="line">                cout&lt;&lt;is1[t][i];<span class="comment">//再輸出該句子的字 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;<span class="comment">//換行 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ol><li>創建字串陣列或者字元的二維陣列</li><li>將所有輸入值存入string[]，並找出最長字串長度<ol><li>注意：宣告陣列大小時要超過 100，否則會 runtime error</li></ol></li><li>依順序改為直行輸出，記得補足空白</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Sort! Sort!! and Sort!!!</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Sort!%20Sort!!%20and%20Sort!!!/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Sort!%20Sort!!%20and%20Sort!!!/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA11321<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>Hmm! Here you are asked to do a simple sorting. You will be given N numbers and a positive integer M. You will have to sort the N numbers in ascending order of their modulo M value. If there is a tie between an odd number and an even number (that is their modulo M value is the same) then the odd number will precede the even number. If there is a tie between two odd numbers (that is their modulo M value is the same) then the larger odd number will precede the smaller odd number and if there is a tie between two even numbers (that is their modulo M value is the same) then the smaller even number will precede the larger even number.</p><p>For remainder value of negative numbers follow the rule of C programming language: A negative number can never have modulus greater than zero. E.g. -100 MOD 3 &#x3D; -1, -100 MOD 4 &#x3D; 0, etc.</p><p>The input file contains 20 sets of inputs. Each set starts with two integers N (0 &lt; N ≤ 10000) and M (0 &lt; M ≤ 10000) which denotes how many numbers are within this set. Each of the next N lines contains one number each. These numbers should all fit in 32-bit signed integer. Input is terminated by a line containing two zeroes.</p><p>For each set of input produce N + 1 lines of outputs. The first line of each set contains the value of N and M. The next N lines contain N numbers, sorted according to the rules mentioned above. Print the last two zeroes of the input file in the output file also.</p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>給你兩個整數 N (0&lt;N&lt;&#x3D;10000), M (0&lt;M&lt;&#x3D;10000)，你要依照某些規則排序N個整數。先利用每個數字除以M的餘數由小到大排，若排序中比較的兩數為一奇一偶且兩數除以M 的餘數相等，則奇數要排在偶數前面。若兩奇數除以M餘數大小相等，則原本數值較大的奇數排在前面。同樣的，若兩偶數除以M餘數大小相等，則較小的偶數排在前面。至於負數的餘數計算和 C 語言裡的定義相同，即負數的餘數絕對不會大於零。例如 -100 MOD 3 &#x3D; -1, -100 MOD 4 &#x3D; 0 依此類推。</p><h3 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h3><p>輸入測資檔包含 20 筆的輸入測資。每組測資一開始包含兩個整數 N, M。接下來的 N 行裡每一行只包含一個整數。這些整數保證都可以被存在 32-bit 有號整數裡。輸入以 N&#x3D;0, M&#x3D;0代表結束。</p><h3 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h3><p>對於每一組輸入請輸出 N+1 行整數。第一行為兩個整數 N, M。接下來的 N 行都包含一個整數、及上述的數字按上述規則排列後的結果。對於輸入測資尾端的兩個 0, 0 請也輸出兩個空白分隔的 0, 0。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">N%M 小者前 大者後</span></span><br><span class="line"><span class="comment">餘數同 奇數前 偶數後</span></span><br><span class="line"><span class="comment">皆為奇 大奇前 小奇後</span></span><br><span class="line"><span class="comment">皆為偶 小偶前 大偶後</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isOdd</span><span class="params">(<span class="type">int</span> num)</span></span>&#123;</span><br><span class="line"> num = <span class="built_in">abs</span>(num%<span class="number">2</span>);<span class="comment">//餘數可能為負</span></span><br><span class="line"> <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(a%m != b%m)</span><br><span class="line"><span class="keyword">return</span> a%m &lt; b%m; <span class="comment">//N%M 小者前 大者後</span></span><br><span class="line"> <span class="keyword">if</span>(<span class="built_in">isOdd</span>(a) != <span class="built_in">isOdd</span>(b))</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">isOdd</span>(a); <span class="comment">//餘數同 奇數前 偶數後</span></span><br><span class="line"> <span class="keyword">if</span>(<span class="built_in">isOdd</span>(a))</span><br><span class="line"><span class="keyword">return</span> a &gt; b; <span class="comment">//皆為奇 大奇前 小奇後</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> a &lt; b; <span class="comment">//剩餘情況:皆為偶 小偶前 大偶後</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> a[<span class="number">10001</span>];</span><br><span class="line"> <span class="keyword">while</span>(cin &gt;&gt; n &gt;&gt; m)&#123;</span><br><span class="line"> cout&lt;&lt;n&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;m&lt;&lt;endl;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n ; i++)</span><br><span class="line"> cin&gt;&gt;a[i];</span><br><span class="line"> <span class="built_in">sort</span>(a,a+n,cmp);</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n ; i++)</span><br><span class="line"> cout&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>解這一題之前要先學會C++語法中的 sort 與 bool 的用法</p><p>接下來按照題目所求進行排序</p><ol><li>N%M 小者前 大者後</li><li>餘數同 奇數前 偶數後</li><li>皆為奇 大奇前 小奇後</li><li>剩餘情況：皆為偶 小偶前 大偶後</li></ol><h3 id="學習資源"><a href="#學習資源" class="headerlink" title="學習資源"></a>學習資源</h3><p><a href="https://shengyu7697.github.io/std-sort/">C++ std::sort 排序用法與範例完整介紹</a></p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Square Numbers</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Square%20Numbers/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Square%20Numbers/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA11461<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Square%20Numbers%20c7cbff0a7715494a8a91df13ac13359c/p11461.pdf">p11461.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>給定一個範圍（a、b），請找出範圍內的完全平方數（可以被開根號出整數）</p><ul><li>範圍的限制：0 &lt; a ≤ b ≤ 100000</li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本（精簡）"><a href="#C-版本（精簡）" class="headerlink" title="C++版本（精簡）"></a>C++版本（精簡）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; a &gt;&gt; b)&#123;</span><br><span class="line"><span class="keyword">if</span>(a == <span class="number">0</span> &amp;&amp; b == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> a_sqrt = (<span class="type">int</span>)<span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(a));</span><br><span class="line">        <span class="type">int</span> b_sqrt = (<span class="type">int</span>)<span class="built_in">sqrt</span>(b);</span><br><span class="line">        <span class="type">int</span> count = b_sqrt - a_sqrt + <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">cout &lt;&lt; count &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-版本（正常版本）"><a href="#C-版本（正常版本）" class="headerlink" title="C++版本（正常版本）"></a>C++版本（正常版本）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> n,m,cot;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)&#123;</span><br><span class="line">        cot=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span> &amp;&amp; m==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n;i&lt;=m;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((<span class="type">int</span>)<span class="built_in">sqrt</span>(i)*(<span class="type">int</span>)<span class="built_in">sqrt</span>(i)==i)&#123;</span><br><span class="line">                cot++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;cot&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><h3 id="正常版本"><a href="#正常版本" class="headerlink" title="正常版本"></a>正常版本</h3><ol><li>檢查開根號後取整數的值，反乘回去後是否等同於原本的值<ol><li>如果是，就是完全平方數，計數器+1</li><li>如果不是，那不是完全平方數</li></ol></li></ol><h3 id="精簡版本"><a href="#精簡版本" class="headerlink" title="精簡版本"></a>精簡版本</h3><ol><li>計算 a 及 b 之平方數，並相減算出其個數<ol><li>需考慮 a 本身是否為完全平方數，所以用 ceil() 計算</li></ol></li></ol><h3 id="celi"><a href="#celi" class="headerlink" title="celi ()"></a>celi ()</h3><p>回傳<strong>大於等於所給數字的最小整數</strong>，例如：</p><blockquote><p>celi ( 4.9 ) &#x3D; 5</p></blockquote><h3 id="sqrt"><a href="#sqrt" class="headerlink" title="sqrt ()"></a>sqrt ()</h3><p>回傳<strong>所給數字開根號</strong>後的結果，例如：</p><blockquote><p>sqrt ( 4 ) &#x3D; 2</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Satellites</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Satellites/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Satellites/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10221<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=03w6m8uYCqU">銘傳資傳系 CPE 037 UVa10221-Satellites</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>給予衛星到地球表面的距離及衛星間的角度，以求最短的弧長及弦長。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*一度 = 60分 </span></span><br><span class="line"><span class="comment">*圓周率 = PI</span></span><br><span class="line"><span class="comment">*弧長（arc）= a*半徑 </span></span><br><span class="line"><span class="comment">*弦長 (chord) = 2*半徑*sin(a/2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*角度的問題，因為要使用 sin() 函數，角度必須介於 0 ~ 180 之間</span></span><br><span class="line"><span class="comment">*所以角度 a 超過 180 度時，要使用 360度 - a 作為角度</span></span><br><span class="line"><span class="comment">*要找到一個精確的 PI ，&lt;math.h&gt; 裡面有定義 M_PI</span></span><br><span class="line"><span class="comment">*但是要在程式的開頭 ，要加上 #define _USE_MATH_DEFINES</span></span><br><span class="line"><span class="comment">*才能使用標頭檔中的定義 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _USE_MATH_DEFINES</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">double</span> s, a;</span><br><span class="line"><span class="type">char</span> c[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; s &gt;&gt; a &gt;&gt; c &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(c, <span class="string">&quot;min&quot;</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">a /= <span class="number">60</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a &gt; <span class="number">180</span>)&#123;</span><br><span class="line">a = <span class="number">360</span>-a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> ang = a * M_PI / <span class="number">180.0</span>;</span><br><span class="line"><span class="type">double</span> chord = <span class="number">2.0</span> * (s+<span class="number">6440.0</span>) * <span class="built_in">sin</span>(ang/<span class="number">2.0</span>);</span><br><span class="line"><span class="type">double</span> arc = ang*(s+<span class="number">6440.0</span>);</span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">6</span>) &lt;&lt; arc &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; fixed &lt;&lt;<span class="built_in">setprecision</span>(<span class="number">6</span>) &lt;&lt; chord &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ol><li>先將arc minute 化為角度，並將角度化為最小，以求最短弧長<ol><li>（若角度&gt;360，則 angle % 360；若角度&gt;180，則 angle &#x3D; 360-angle）</li></ol></li><li>套用公式：<ol><li>弧長 &#x3D; 2 * 半徑 * PI * (角度&#x2F;360)</li><li>弦距 &#x3D; sin(角度) * 半徑 * 2</li></ol></li></ol><p><a href="https://it-easy.tw/cout-float/">é»è¦ä¸é£</a></p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Simply Emirp</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Simply%20Emirp/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Simply%20Emirp/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10235<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=UGEP8YIUtLg">銘傳資傳系 CPE 033 UVa10235-Simply Emirp</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>一個比 1 大的整數如果只有 1 和他本身自己共 2 個因數，我們稱這個數為質數（prime number）。多年來質數一直被數學家們研究著。質數也常被應用在密碼學和編碼理論中。</p><p>那麼你曾經把質數倒轉過來嗎？對大部分的質數來說，你將會得到一個組合數（例如：43 變成 34）現在，我們要定義 Emirp（就是把 Prime 反過來拼）：如果你把一個質數反過來之後，他仍然是一個質數，並且和原來那個質數不同，那我們就稱這個數為 emirp number。例如：17 是一個emirp，因為 17 和 71 都是質數。</p><p>在這個問題中，你必須要決定某一個整數 N 是非質數，質數，或 emirp。<br>你可以假設 1&lt;N&lt;1000000。</p><p>輸入的每一行測試資料有 1 個整數 N</p><p>對每一輸入 N，輸出以下的訊息：</p><ol><li>“N is not prime.”，如果 N 不是一個質數</li><li>“N is prime.”，如果 N 是一個質數，但是不是一個 Emirp</li><li>“N is emirp.”，如果 N 是一個 emirp</li></ol><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isprime</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n &lt; <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt; n ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(n%i == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isemirp</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> reverse = <span class="number">0</span>, rem, tmp = n;</span><br><span class="line"><span class="keyword">while</span>(tmp != <span class="number">0</span>)&#123;    </span><br><span class="line">     rem = tmp%<span class="number">10</span>;</span><br><span class="line">     reverse = reverse*<span class="number">10</span>+rem;    </span><br><span class="line">     tmp /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(reverse == n)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">isprime</span>(reverse);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isprime</span>(n) &amp;&amp; <span class="built_in">isemirp</span>(n))&#123;</span><br><span class="line">cout &lt;&lt; n &lt;&lt; <span class="string">&quot; is emirp.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isprime</span>(n))&#123;</span><br><span class="line">cout &lt;&lt; n &lt;&lt; <span class="string">&quot; is prime.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; n &lt;&lt; <span class="string">&quot; is not prime.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這是一個常見的副函式問題，我們可以將<code>判斷質數</code>和<code>判斷emirp</code>分成兩個副函式<br>然後再用 if…else if… else 的功能去做判斷</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>TEX Quotes</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/TEX%20Quotes/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/TEX%20Quotes/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA272<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="TEX%20Quotes%202890de930a5b4c37b79d72982e12b4e8/p272.pdf">p272.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><ul><li>輸入一字串，重新排版後輸出</li><li>需要注意的有：<ol><li>重複輸入直到 EOF</li><li>排版規則<ul><li>每對 <code>&quot; &quot;</code> 中的第一個替換成 <strong>&#96;&#96;</strong></li><li>每對 <code>&quot; &quot;</code> 中的第二個替換成 <strong>‘’</strong></li></ul></li></ol></li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string tmp;</span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">getline</span>(cin, tmp))&#123;</span><br><span class="line">        length = tmp.<span class="built_in">length</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (tmp[i] == <span class="string">&#x27;\&quot;&#x27;</span>)&#123;</span><br><span class="line">                count++;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (count % <span class="number">2</span> == <span class="number">1</span>)&#123; <span class="comment">// left-double-quote</span></span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;``&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;&#x27;&#x27;&quot;</span>; <span class="comment">// right-double-quote</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                cout &lt;&lt; tmp[i];</span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C版本"><a href="#C版本" class="headerlink" title="C版本"></a>C版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> chr;</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>((chr = getchar()) != EOF)&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag &amp;&amp; chr == <span class="string">&#x27;&quot;&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;``&quot;</span>);</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!flag &amp;&amp; chr == <span class="string">&#x27;&quot;&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;&#x27;&#x27;&quot;</span>);</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, chr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ul><li>輸入一字串，重新排版後輸出</li><li>需要注意的有：<ol><li>重複輸入直到 EOF</li><li>排版規則<ul><li>每對 <code>&quot; &quot;</code> 中的第一個替換成 <strong>&#96;&#96;</strong></li><li>每對 <code>&quot; &quot;</code> 中的第二個替換成 <strong>‘’</strong></li></ul></li></ol></li></ul><p>使用 <code>getline</code> 存取字串，再逐一比對是否有 <code>” ”</code> 然後利用計數或者 <code>bool</code>的方式檢查它是開頭還是結尾。</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Symmetric Matrix</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Symmetric%20Matrix/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Symmetric%20Matrix/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA11349<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Symmetric%20Matrix%20db910a4d986f42d69c5e85c8118742d7/p11349.pdf">p11349.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>矩陣中若對稱於中心點，且矩陣內的植全部為正數的話，則可稱為 <strong>Symmetric Matrix</strong></p><p>$$<br>M &#x3D;\left[<br>\begin{array}{ccc}<br>5 &amp; 1 &amp; 3 \<br>2 &amp; 0 &amp; 2 \<br>3 &amp; 1 &amp; 5 \<br>\end{array}<br>\right]is ; the ; Symmetric ; Matrix<br>$$</p><p>$$<br>M &#x3D;\left[<br>\begin{array}{ccc}<br>5 &amp; 1 &amp; 3 \<br>2 &amp; 0 &amp; 2 \<br>0 &amp; 1 &amp; 5 \<br>\end{array}<br>\right]is ; not ; the ; Symmetric ; Matrix, ;3 \neq 0<br>$$</p><ul><li>第一個是對稱矩陣的元素值必須全部正數，但輸入的值包含負數</li><li>第二是元素的範圍為-2^32 &lt;&#x3D; Mij &lt;&#x3D; 2^32<ul><li>超出int的範圍(-2^31 &lt;&#x3D; int &lt;&#x3D; 2^31-1)，必須使用 long long 處理</li></ul></li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-與-C-混用版本"><a href="#C-與-C-混用版本" class="headerlink" title="C++ 與 C 混用版本"></a>C++ 與 C 混用版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> t, n;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="type">int</span> tmp = t;</span><br><span class="line"><span class="keyword">while</span>(tmp--)&#123;</span><br><span class="line">cin.<span class="built_in">ignore</span>(); <span class="comment">//清除輸入的緩存</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot; N = %d&quot;</span>, &amp;n); <span class="comment">//題目特殊輸入格式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//創建陣列，設立檢查點（正負、回文） </span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="type">int</span> Matrix[n*n] = &#123;&#125;;</span><br><span class="line"><span class="type">int</span> check_neg = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> check_sym = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸入二維陣列 ，但因為是檢查對稱性（中心），所以可以使用一維陣列存取 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n*n ; i++)&#123;</span><br><span class="line">cin &gt;&gt; Matrix[i];</span><br><span class="line"><span class="keyword">if</span>(Matrix[i] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">check_neg = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用回文檢查</span></span><br><span class="line"><span class="keyword">if</span>(check_neg != <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; (n*n)/<span class="number">2</span> ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(Matrix[i] != Matrix[n*n-i<span class="number">-1</span>])&#123;</span><br><span class="line">check_sym = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出 </span></span><br><span class="line"><span class="keyword">if</span>(check_sym &amp;&amp; check_neg)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Test #&quot;</span> &lt;&lt; t-tmp &lt;&lt; <span class="string">&quot;: Symmetric.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Test #&quot;</span> &lt;&lt; t-tmp &lt;&lt; <span class="string">&quot;: Non-symmetric.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>因為本題所定義的對稱矩陣是所有的元素相對於中心點對稱，因此若將此種矩陣沿著每一列(row)拉成一維，會發現這個一維的數列會形成迴文 (palindrome)。</p><p>以範例輸入的第一個陣列為例，沿著每一列由左至右拉成一維即 “5 1 3 2 0 2 3 1 5”</p><p>所以其實除了可以使用二維陣列去逐一比對相對位置之外，也可以判斷輸入的元素值是否為迴文</p><ol><li>處理輸入 “N &#x3D; ＿” (記得 cin.ignore() 清除緩存)</li><li>檢查矩陣元素是否為非負整數</li><li>將矩陣元素按順序排成一列後，檢查是否迴文來判斷是否對稱於中心點</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Tell me the frequencies!</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Tell%20me%20the%20frequencies!/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Tell%20me%20the%20frequencies!/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10062<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="https://vj.csgrandeur.cn/6971138d6a1075a46eaa50f7edcffd28?v=1705356388"></a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>給你一列文字，請你找出各字元出現的次數。</p><p>每筆測試資料一列。每列最大長度為1000。</p><p>對每一列輸入，請輸出各字元的ASCII值及其出現的次數。</p><p>請根據出現的次數由小到大輸出。如果有2個以上的字元有相同的次數，則ASCII值較大的先輸出。</p><p>每一筆測試資料的輸出，請空一列</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt; a, pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt; b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.second == b.second)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.first &gt; b.first; <span class="comment">// 小到大排序 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.second &lt; b.second; <span class="comment">//大到小排序 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">getline</span>(cin, s))&#123;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; ans;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; s.<span class="built_in">length</span>() ; i++)&#123;</span><br><span class="line"><span class="type">char</span> tmp = s[i];</span><br><span class="line"><span class="keyword">if</span>(ans.<span class="built_in">count</span>(tmp))&#123;</span><br><span class="line">        ans[tmp] += <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">ans.<span class="built_in">insert</span>(&#123;tmp, <span class="number">1</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vector&lt;pair&lt;<span class="type">char</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">vec</span> (ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">    <span class="built_in">sort</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>(), cmp);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i: vec)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="built_in">int</span>(i.first)&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; i.second &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>類似的題目，概念基本一樣：</p><p><a href="What's%20Cryptanalysis%20662b3675b4f1480096c1924a80f04cdb.md"><strong>What’s Cryptanalysis?</strong></a></p><ul><li>對每一列輸入，輸出各字元的 ASCII &amp; 次數</li><li>需要注意的點有：<ol><li>重複輸入，止於 EOF</li><li>每一行輸入對應一輸出，長度 ≦ 1000</li><li>輸入的每個字元：32 ≦ ASCII ≦ 127</li><li>每行輸出包含 ASCII &amp; 次數<ul><li><strong>按照次數由小到大</strong></li><li><strong>同樣次數按照 ASCII 由大到小</strong></li></ul></li><li>每筆輸出間含一空白行</li></ol></li></ul>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Fourth Point!</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Fourth%20Point!/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Fourth%20Point!/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10242<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=vtLq9C0NWF0&list=PLYhy6KLAgQE6QpZ5dUz-p-5dC1bWCTuIi&index=39">銘傳資傳系 CPE 039 UVa10242-Fourth Point!!</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>假設一座標軸上有一個平行四邊形</p><p>給定平行四邊形的兩個相鄰邊的端點的 (x, y)座標，找到第四個點的 (x, y)座標。</p><h3 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h3><p>輸入包含多組測試資料。</p><p>每組測試資料含有8個浮點數。</p><ul><li>第一個、第二個浮點數代表第一個邊的端點(x, y)座標</li><li>第三個、第四個浮點數代表第一個邊的另一端點(x, y)座標</li><li>第五個、第六個浮點數代表第二個邊的端點(x, y)座標</li><li>第七個、第八個浮點數代表第二個邊的另一端點(x, y)座標</li></ul><p>所有座標均以公尺為單位，請精確到毫米單位(小數點後3位)。</p><p>所有座標均在−10000和+10000之間。</p><h3 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h3><p>對於每行輸入</p><p>請輸出平行四邊形的第四個點的(x, y)座標</p><p>以公尺為單位，精確到毫米(小數點後3位)</p><p>(x, y)座標請用一個空格隔開。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">double</span> x1, x2, x3, x4, x;</span><br><span class="line"><span class="type">double</span> y1, y2, y3, y4, y;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2 &gt;&gt; x3 &gt;&gt; y3 &gt;&gt; x4 &gt;&gt; y4 &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line">x = x1+x2+x3+x4;</span><br><span class="line">y = y1+y2+y3+y4;</span><br><span class="line"><span class="keyword">if</span>((x1 == x3 &amp;&amp; y1 == y3) || (x1 == x4 &amp;&amp; y1 == y4))&#123;</span><br><span class="line">x -= (x1*<span class="number">3</span>);</span><br><span class="line">y -= (y1*<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">x -= (x2*<span class="number">3</span>);</span><br><span class="line">y -= (y2*<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">3</span>) &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">3</span>) &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p><img src="/Fourth%20Point!%20ca6c6e54f2894c848bfa31bbe433f733/Untitled.png" alt="Untitled"></p><p>平行四邊形的中心點公式：</p><p>$$<br>\frac{(A+C)}{2} &#x3D; \frac{(B+D)}{2}<br>$$</p><p>所以假設第四點是 D ，那公式可以整理成</p><p>$$<br>D &#x3D; A+C-B<br>$$</p><p>因為輸入的是兩個相鄰邊的點，共四個座標，所以或有一點重複</p><p>假設重複的是Ｂ，Ａ與Ｃ沒有重複，座標點總和Ｓ如下：</p><p>$$<br>S &#x3D; A+C+2B<br>$$</p><p>而當我們找到重複的 B 的之後，將總和減去 B 的 3 倍，即可找出 D （第四點座標）</p><p>$$<br>S-3B &#x3D; A+C-B &#x3D; D<br>$$</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Fibonaccimal Base</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Fibonaccimal%20Base/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Fibonaccimal%20Base/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA948<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Fibonaccimal%20Base%207256320a7e434a0dbe485e2581d150ad/p948.pdf">p948.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>有名的費氏數列是以 0 和 1 開始，然後把最後的兩個數字相加以得到下一項。</p><p>例如數列的第三項為 1 (1&#x3D;1+0)，第四項為 2 (2&#x3D;1+1)，第五項為 3 (3&#x3D;2+1)……。</p><p>**圖 1 -**費氏數列的前幾項</p><table><thead><tr><th>i</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th></tr></thead><tbody><tr><td>Fib(i)</td><td>0</td><td>1</td><td>1</td><td>2</td><td>3</td><td>5</td><td>8</td><td>13</td><td>21</td><td>34</td></tr></tbody></table><p>這個數列很重要且出現在我們生活及大自然的許多事物上。其中，你知道所有的正整數都可以用費氏數列中的不重覆的數字集合的和來代表嗎？例如：13 可以是集合 {13}, {5,8} 或{2,3,8} 的和，而 17 則可用 {1,3,13} 或 {1,3,5,8}來表示。即然每個數都有這個特性 (你要自己證證看嗎？) 這個數列可以用作表示數字的「底」。但如前所示，有些數字有多種表示法，這該怎麼辦呢？簡單，因為費氏數列中任兩個連續項的和就是下一項，<strong>所以只要加上一個限制：不得使用連續的項，那麼每個數字都有一個唯一的表示法。</strong></p><p>有了這個認知後我們可以建立一個很酷的方式來表示任意正整數。我們一連串的 0 與 1來表示。例如：17 &#x3D; 1 + 3 + 13 (記住不可以使用費氏數列中連續的項)，以 0 來表示沒有用到的項，以 1 來表示有用到的項，由右至左排列。因此 17 &#x3D; 100101. 詳情參閱圖 2。在這個表示法中，最左邊的那一位數一定是 1，不可以是 0。根據我們的限制，這種表示法中不可以出現相鄰的 1。我們這種表示法為「費氏進位」並以下列方式表示  17 &#x3D; 100101 (fib).</p><p>**圖 2 -**17 的費氏進位表示法之說明</p><table><thead><tr><th>17 &#x3D;</th><th>1</th><th>0</th><th>0</th><th>1</th><th>0</th><th>1</th></tr></thead><tbody><tr><td>13+3+1 &#x3D;</td><td>13</td><td>8</td><td>5</td><td>3</td><td>2</td><td>1</td></tr></tbody></table><p><strong>給你一組十進位的數字，你的任務是將它們以費氏進位輸出。</strong></p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//費氏數列創建 </span></span><br><span class="line"><span class="type">int</span> fib[<span class="number">40</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">38</span> ; i++)&#123;</span><br><span class="line">fib[i+<span class="number">2</span>] = fib[i+<span class="number">1</span>] + fib[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> input, n;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; cin.<span class="built_in">good</span>())&#123;</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line">cin &gt;&gt; input;</span><br><span class="line">cout &lt;&lt; input &lt;&lt; <span class="string">&quot; = &quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//轉換進位 </span></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">39</span> ; i &gt;= <span class="number">2</span> ; i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(input &gt;= fib[i])&#123;</span><br><span class="line">input = input - fib[i];</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot; (fib)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>根據題目的意思，我們要拆解測資成多個數字的加法，所以我們可以先找出小於或等於測資的費氏數列，再拿測資減掉費氏數列的數，重複執行直到結束。</p><ol><li>創建一個長度為 40 的費氏數列，用來對比接下來的測資</li><li>for 迴圈找出小於或等於測資的值<ol><li>如果測資 ≥ 費氏數列的第 i 項<ol><li>測資 -&#x3D; 費氏數列第 i 項</li><li>將判斷找到第一項的布林值設為 true</li><li>輸出 1</li></ol></li><li>如果測資 ≤ 費氏數列的第 i 項，且已經找到第一個 1 的時候<ol><li>輸出 0</li></ol></li></ol></li><li>格式輸出題目的要求</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>GCD</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/GCD/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/GCD/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA11417<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=v0iUwndg2NU">銘傳資傳系 CPE 035 UVa11417-GCD</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>已知 N 的值，你必須求 G。G 的定義如下：</p><p>$$<br>G &#x3D; \sum^{i&lt;N}<em>{i&#x3D;1}\sum^{j\leq N}</em>{j &#x3D; i+1}GCD(i, j)<br>$$</p><p>其中 GCD(i,j) 為整數 i 和整數 j 的最大公因數。</p><p>如果看不懂Sigma表示方式的話，G 的定義則如以下的程式碼：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">G=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;N;i++)</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;=N;j++)</span><br><span class="line">G+=<span class="built_in">GCD</span>(i,j);</span><br></pre></td></tr></table></figure><blockquote><p>GCD()為一個求兩個輸入數字的最大公因數的函數</p></blockquote><p>輸入檔最多有 100 行的輸入。每一行有一個整數N (1&lt;N&lt;501)。N 的定義如題幹。輸入以含有一個 0 的一行作為結束，請不要處理這個 0。</p><p>就每行的輸入產生一行輸出。這行含有相對於 N 的 G。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, g;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        g = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i+<span class="number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">                g += <span class="built_in">gcd</span>(i, j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        cout &lt;&lt; g &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">gcd</span>(b, a % b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>按題目所給之計算公式進行計算即可</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Funny Encryption Method</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Funny%20Encryption%20Method/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Funny%20Encryption%20Method/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10019<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Funny%20Encryption%20Method%2026d4d712214e4823839ffed511732879/p10019.pdf">p10019.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>一位來自墨西哥蒙特瑞技術研究學院(ITESM Campus Monterrey)的學生想發表一種新的數值加密演算法。<br>演算法步驟如下：</p><ol><li>讀入一個整數N，N為欲加密的數字：N &#x3D; 265</li><li>將N當作十進位的數值：X1 &#x3D; 265(decimal)</li><li>把X1由十進制轉為二進制：X1 &#x3D; 100001001(binary)</li><li>計算二進制的X1有幾個1：b1 &#x3D; 3</li><li>把N當作十六進位數值：X2 &#x3D; 265(hexadecimal)</li><li>把X2由十六進制轉為二進制：X2 &#x3D; 1001100101(binary)</li><li>計算二進制的X2有幾個1：b2 &#x3D; 5</li><li>最後的編碼為N xor (b1<em>b2)：265 xor (3</em>5) &#x3D; 262</li></ol><p>這位學生並未通過這次的計算機組識考試，所以他請求校方在ACM的試題上出一題計算共有幾個位元1的題目，好讓他能順利發表他的數值加密演算法。<br>你必須寫一個程式能讀入一個整數，然後輸出該整數的b1, b2值。</p><p>第一行包含一個數字T (0 &lt; T ≤ 1000)，代表有幾組測資。</p><p>接下來的T行，每行包含一個數字N (decimal)(0 &lt; N ≤ 9999)，N代表學生要加密的數字。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Decimal_to_Binary</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n != <span class="number">0</span>)&#123;</span><br><span class="line">total += (n%<span class="number">2</span> == <span class="number">0</span>? <span class="number">0</span>:<span class="number">1</span>);</span><br><span class="line">n/=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Hexadecimal_to_Binary</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n != <span class="number">0</span>)&#123;</span><br><span class="line">total += <span class="built_in">Decimal_to_Binary</span>(n%<span class="number">10</span>);</span><br><span class="line">n/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n, x;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="type">int</span> b1 = <span class="built_in">Decimal_to_Binary</span>(x);</span><br><span class="line"><span class="type">int</span> b2 = <span class="built_in">Hexadecimal_to_Binary</span>(x);</span><br><span class="line">cout &lt;&lt; b1 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; b2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這一題考的是進位制轉換的問題，包含：十六進位、十進位、二進位</p><ul><li>第一個要將十進位轉換成二進位</li><li>第二個要將十六進位轉換成二進位</li></ul><h3 id="十進位轉二進位"><a href="#十進位轉二進位" class="headerlink" title="十進位轉二進位"></a>十進位轉二進位</h3><p>二進位是由許多1、0 搭配上 2 的次方所成的一種進位方式</p><p>像是十進位的 22 可以用二進位轉換成 10110 &#x3D; 2^4 + 2^2 + 2^1 &#x3D; 16 + 4 + 2</p><table><thead><tr><th>2^4</th><th>2^3</th><th>2^2</th><th>2^1</th><th>2^0</th></tr></thead><tbody><tr><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td></tr></tbody></table><p><strong>十進位轉二進位的範例程式碼可以寫成：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Decimal_to_Binary</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">string result;</span><br><span class="line"><span class="type">int</span> tmp;</span><br><span class="line"><span class="keyword">while</span>(n &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">tmp = n % <span class="number">2</span>;</span><br><span class="line">      n /= <span class="number">2</span>;</span><br><span class="line">      result += <span class="built_in">to_string</span>(tmp);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; result &lt;&lt; endl;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>而要從二進位轉換為十進位，可以寫成：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Binary_to_Decimal</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> result = <span class="number">0</span>, exp = <span class="number">0</span>, m; <span class="comment">//結果、次方、個位數的暫存</span></span><br><span class="line"><span class="keyword">while</span> (n != <span class="number">0</span>)&#123;</span><br><span class="line">        m = n % <span class="number">10</span>;</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">        result += m*<span class="built_in">pow</span>(<span class="number">2</span>, exp);</span><br><span class="line">        ++exp;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; result &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="十六進位轉十進位"><a href="#十六進位轉十進位" class="headerlink" title="十六進位轉十進位"></a>十六進位轉十進位</h3><p>十六進位是由 0<del>9、A</del>F（10~15）組成的進位制</p><p>像是十進位的 48 可以用十六進位表示成 30 &#x3D; 3<em>16^1 + 0</em>16^0 &#x3D; 48+0</p><table><thead><tr><th>16^1</th><th>16^0</th></tr></thead><tbody><tr><td>1</td><td>0</td></tr></tbody></table><p><strong>十進位轉換成十六進位可以寫成：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Decimal_to_Hexadecimal</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="type">char</span> arr[] = <span class="string">&quot;0123456789ABCDEF&quot;</span>; <span class="comment">//十六進位對應表</span></span><br><span class="line">  <span class="type">char</span> hex[<span class="number">16</span>] = &#123;&#125;;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n != <span class="number">0</span>)&#123;</span><br><span class="line">        hex[i++] = arr[n % <span class="number">16</span>];   <span class="comment">//對十進位制數求餘並最終與hextable陣列中的字元匹配</span></span><br><span class="line">        n /= <span class="number">16</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; --j)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, hex[j]);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>十六進位轉換成十進位可以寫成：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Hexadecimal_to_Decimal</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> result = <span class="number">0</span>, exp = <span class="number">0</span>, m;</span><br><span class="line"><span class="keyword">while</span> (n != <span class="number">0</span>)&#123;</span><br><span class="line">        m = n % <span class="number">10</span>;</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">        result += m*<span class="built_in">pow</span>(<span class="number">16</span>, exp);</span><br><span class="line">        ++exp;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; result &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hartals</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Hartals/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Hartals/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10050<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Hartals%203e0a5513dddd41249b587290f09f52d4/p10050.pdf">p10050.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>一個社會研究組織採用了一組簡單的參數來模擬我們國家政黨運作的行為</p><p>參數之一是一個正整數h，h稱為罷會 ( hartal ) 參數，它表示同一個政黨連續兩次罷會的間隔天數</p><p>儘管該參數有點過於簡單，但還是能用於預測政黨罷會造成的影響。</p><h3 id="測資說明："><a href="#測資說明：" class="headerlink" title="測資說明："></a>測資說明：</h3><p>考慮現在有三個政黨。假設h1 &#x3D; 3，h2 &#x3D; 4，h3 &#x3D; 8，其中hi是第i方的罷會參數<br>現在，我們將模擬這三個方在N &#x3D; 14天的罷會行為<br>模擬的<strong>起始天一定是星期天</strong>，並假設在<strong>每週的假日 ( 星期五和星期六 ) 不會有任何罷會情形</strong>。</p><table><thead><tr><th>天數</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th></tr></thead><tbody><tr><td>星期</td><td>日</td><td>一</td><td>二</td><td>三</td><td>四</td><td>五</td><td>六</td><td>日</td><td>一</td><td>二</td><td>三</td><td>四</td><td>五</td><td>六</td></tr><tr><td>h1</td><td></td><td></td><td>X</td><td></td><td></td><td>X</td><td></td><td></td><td>X</td><td></td><td></td><td>X</td><td></td><td></td></tr><tr><td>h2</td><td></td><td></td><td></td><td>X</td><td></td><td></td><td></td><td>X</td><td></td><td></td><td></td><td>X</td><td></td><td></td></tr><tr><td>h3</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>X</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>總數</td><td></td><td></td><td>1</td><td>2</td><td></td><td></td><td></td><td>3</td><td>4</td><td></td><td></td><td>5</td><td></td><td></td></tr></tbody></table><p>上面的模擬顯示，在14天內將會罷會5天 ( 分別在第3、4、8、9和12天 )<br>第6天沒有罷會，因為它屬於假日 ( 星期五 ) 。由此可知我們在2週內損失了5個工作天</p><p>在這個問題中，您要計算出這N天內我們因為罷會損失多少工作天</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> t, n, p; <span class="comment">//t 組測資，n天，p個政體 </span></span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">cin &gt;&gt; p;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸入政體遊行的週期，找出最小週期 </span></span><br><span class="line"><span class="type">int</span> party[p] = &#123;&#125;;</span><br><span class="line"><span class="type">int</span> min_duration = INT_MAX;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; p ; i++)&#123;</span><br><span class="line">cin &gt;&gt; party[i];</span><br><span class="line">min_duration = <span class="built_in">min</span>(party[i], min_duration);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  找出在 n 天內，有幾次政體遊行 </span></span><br><span class="line"><span class="type">int</span> total_hartals = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = min_duration ; i &lt;= n ; i++)&#123;</span><br><span class="line"><span class="comment">// 一週的開始設為星期日，星期五和星期六不遊行 </span></span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">7</span> == <span class="number">6</span> || i%<span class="number">7</span> == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 確認當前有沒有政體有遊行 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; p ; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i%party[j] == <span class="number">0</span>)&#123;</span><br><span class="line">total_hartals++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; total_hartals &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p><strong>公倍數的概念即可以求這一題</strong></p><ol><li>創建一個一維陣列，用來存取政黨罷工的週期</li><li>找出最小的週期，將計算的起始點設在此</li><li>從起始點開始，檢查每一天是否有政黨罷工<ol><li>遇到假日（星期五、六）略過</li><li>遇到政黨罷工，罷工天數＋１</li></ol></li><li>輸出罷工天數</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hardwood Species</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Hardwood%20Species/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Hardwood%20Species/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10026<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=b0H-Eb-AP1k">銘傳資傳系 CPE 043 UVa10226-Hardwood Species</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>美國國家資源局使用衛星影像技術來調查森林中的樹種，你的任務就是根據輸入的樹木名稱，計算各樹種所佔的百分比。</p><p>輸入的第1列有一個正整數n，代表以下有多少組測試資料。空一列之後才是測試資料。</p><p>每組測試資料含有一或多列（不會超過1000000列），每列有一樹木的名稱（最多30個字元）。測試資料間有一空白列。請參考Sample input</p><p>對每一組測試資料，輸出各樹種名稱（樹種不會超過10000種，按數種名稱字典順序排列）及所佔的比例（到小數點後4位）。測試資料間亦請空一列。參考Sample Output</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">getchar</span>();</span><br><span class="line"><span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line">map&lt;string, <span class="type">double</span>&gt; Hardwood;</span><br><span class="line">string tree;</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">getline</span>(cin, tree) &amp;&amp; tree != <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">count++;</span><br><span class="line">Hardwood[tree]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (map&lt;string, <span class="type">double</span>&gt;::iterator it = Hardwood.<span class="built_in">begin</span>(); it != Hardwood.<span class="built_in">end</span>(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; it-&gt;first &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">4</span>) &lt;&lt; fixed &lt;&lt; it-&gt;second * <span class="number">100.0</span> / count &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (n)</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ul><li>使用 map 紀錄每個樹種出現的次數與樹種的名子</li><li>計算百分率並排序大小</li></ul><p>iterator的用法如下：</p><p><a href="https://hackmd.io/@Greenleaf/advanced_cpp">🗝 進階 C++ STL 迭代器 - HackMD</a></p><p><a href="http://squall.cs.ntou.edu.tw/cpp/93spring/lab04/vectorIterator.html">Iterator 的用法</a></p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hashmat the brave warrior</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Hashmat%20the%20brave%20warrior/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Hashmat%20the%20brave%20warrior/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10055<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Hashmat%20the%20brave%20warrior%20c2a31b382e81406e901aeed366da89f6/p10055.pdf">p10055.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>開戰前，Hashmat 都會去計算敵我之間的兵力差距，而且敵方的兵力永遠大於 Hashmat</p><ol><li>給定兩個整數（0 &lt; a &lt; b &lt; 2^32），輸入的順序未排列</li><li>輸出兵力差距（正數）</li></ol><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="type">int</span> a, b;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; a &gt;&gt; b &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line">a&gt;b? cout &lt;&lt; a-b &lt;&lt; endl : cout &lt;&lt; b-a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C版本"><a href="#C版本" class="headerlink" title="C版本"></a>C版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="type">int</span> a, b;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;a, &amp;b) != EOF)&#123;</span><br><span class="line"><span class="keyword">if</span>(a&lt;b)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, b-a);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, a-b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>因為 2^32 必定無法使用 int 存取，故需要使用【long long int】</p><ol><li>使用 long long int 存取輸入</li><li>判斷誰大誰小，或者直接使用 &lt;math.h&gt; 裡的絕對值功能 abs( a - b )</li><li>輸出【大-小】</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Jolly Jumpers</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Jolly%20Jumpers/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Jolly%20Jumpers/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10038<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Jolly%20Jumpers%202b9bfff562e442f78406327c6a652115/p10038.pdf">p10038.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><ul><li>每一列輸入的第一個數 <code>n</code> 代表接下來有 <code>n</code> 筆數字要輸入</li><li>相鄰兩數絕對值的差要介於 <code>1 ~ n-1</code> 的區間</li><li>而且所有的差要恰好擁有從 <code>1 ~ n-1</code> 的所有數字。</li><li>同時符合以上，才能稱作 <code>Jolly</code> ，反之則稱為 <code>Not jolly</code></li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> dif[n] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//算相差 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n<span class="number">-1</span> ; i++)&#123;</span><br><span class="line"><span class="type">int</span> num1 = <span class="built_in">max</span>(arr[i], arr[i+<span class="number">1</span>]);</span><br><span class="line"><span class="type">int</span> num2 = <span class="built_in">min</span>(arr[i], arr[i+<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> check = <span class="built_in">abs</span>(num1-num2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(check &gt; n<span class="number">-1</span> || check &lt; <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">dif[i] = check;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//排列 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n<span class="number">-1</span> ; i++)&#123;</span><br><span class="line"><span class="type">int</span> min_index = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = i+<span class="number">1</span> ; j &lt; n ; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(dif[min_index] &gt; dif[j])&#123;</span><br><span class="line">min_index = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">swap</span>(dif[min_index], dif[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//對照有無符合1~n-1 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i!=dif[i]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line"><span class="type">int</span> arr[n+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">cin &gt;&gt; arr[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">solve</span>(arr, n))&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Jolly&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Not jolly&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這是 2023 年程式設計 ( i、ii ) 的期末考題</p><p><a href="../../%E8%AE%80%E6%9B%B8%E6%9C%83%E9%A6%96%E9%A0%81%20da2b876d04d3429187bf9643479ec5ff/%E4%B8%8A%E8%AA%B2%E7%AD%86%E8%A8%98%E7%B8%BD%E8%A6%BD%20a775e73047084a9fb053dcf3256241ae/%E6%89%80%E6%9C%89%E7%AD%86%E8%A8%98%E4%B9%8B%E5%AD%B8%E5%B9%B4%E5%BA%A6%E4%B8%8A%E4%B8%8B%E5%AD%B8%E6%9C%9F%E7%B8%BD%E8%A6%BD%2063975aa1981b479099eb27a8995d1576/2023%20%E4%B8%8A%E5%AD%B8%E6%9C%9F%203b660802002f4e89ba641d508f08e109/%E6%89%80%E6%9C%89%E8%AA%B2%E7%A8%8B%200cbaa55dafff44cf8a6026b44452a805/%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%20i%E3%80%81ii%20f0a347ae13f944f8b2afa1ef15063464/%E7%AD%86%E8%A8%98%E7%B8%BD%E8%A6%BD%20b843dbf89a2a43b0ab6cd1d36f300a48/1%203%20%E6%9C%9F%E6%9C%AB%E8%80%83%E9%A1%8C%E7%9B%AE%2048740628ec944e778878b8258f25c767.md">1&#x2F;3 期末考題目</a></p><ol><li>相鄰兩數相減再絕對值，先行檢查是否符合介於 <code>1 ~ n-1</code> 區間</li><li>創建一個 dif 陣列儲存所有數字的絕對值差</li><li>從小到大排列好 dif 陣列</li><li>因為 <code>n</code> 個數只會有 <code>n-1</code> 個差值，所以只要有一個數不符合的話，整個數列就不是 Jolly</li><li>用for迴圈判斷數字有沒有符合 <code>1 ~ n-1</code> 的排列順序</li><li>輸出結果</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>List of Conquests</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/List%20of%20Conquests/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/List%20of%20Conquests/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10420<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="List%20of%20Conquests%2054514d726af94970b2af3e243f3d9025/p10420.pdf">p10420.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>Leporello 用一份清單記錄下他一生當中被愛上的女士，每一位女士的名子前都會註記上她的國籍以方便統計人數，請寫出一份計算的程式，用來統計每一個國家有幾位女士。</p><ul><li>輸入國家和人名，輸出國名與人數</li><li>需要注意的有：<ol><li>第一行輸入整數 <code>n</code> 代表人數 (最多 2000)</li><li>接下來的 <code>n</code> 行輸入每個人的國籍與名字 (最多 75 個字元)</li><li>國籍是一個單字</li><li>按照國籍的英文字母排序，輸出國籍與該國人數</li></ol></li><li>隱藏要點：<ul><li>國籍只有一個單字，但<strong>名字不會</strong></li></ul></li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string str;</span><br><span class="line">    map&lt;string, <span class="type">int</span>&gt; mp;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        cin &gt;&gt; str;</span><br><span class="line">        mp[str]++;</span><br><span class="line">        <span class="built_in">getline</span>(cin, str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i: mp)&#123;</span><br><span class="line">        cout &lt;&lt; i.first &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; i.second &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這一題屬於C++相當簡單的一題，非常適合用 <code>map</code> 來實作，因為每個元素都唯一且排序，直接 <code>key</code> 放國名，<code>value</code> 放次數插入可用 <code>.insert()</code> 或 <code>.emplace()</code> 都可以；遍歷也可改用 <code>iterator</code> 的標準寫法。</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Mutant Flatworld Explorers</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Mutant%20Flatworld%20Explorers/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Mutant%20Flatworld%20Explorers/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA118<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=cGrG5K09BZQ&list=PLYhy6KLAgQE6QpZ5dUz-p-5dC1bWCTuIi&index=47">銘傳資傳系 CPE 047 UVa118-Mutant Flatworld Explorers</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>給你一塊矩形土地的長寬，再依序給定每個機器人的初始位置狀況及一連串的指令集，你必須用你的程式求出每個機器人最後的位置狀況。</p><p>一個機器人的位置狀況包括了其坐標（ x 坐標， y 坐標），和它面向的方向（用 N , S , E , W 來分別代表北、南、東、西）。至於一個機器人所收到的指令集，是一個由字母 ‘ L ‘ ， ‘ R ‘ ， 和 ‘ F ‘ 所構成的字串，其分別代表：</p><ul><li><strong>左轉（Left）</strong>：機器人在原地往左轉 90 度。</li><li><strong>右轉（Right）</strong>: 機器人在原地往右轉 90 度。</li><li><strong>前進（Forward）</strong>: 機器人往其面向的方向向前走一格，且不改變其面向之方向。</li></ul><p>從坐標 (x,y) 走至 (x,y+1) 的這個方向我們定義為北方。</p><p>因為此矩形土地是有邊界的，所以一旦一個機器人走出邊界掉落下去，就相當於永遠消失了。不過這個掉下去的機器人會留下「標記 ( scent ) 」，提醒以後的機器人，避免他們從同一個地方掉下去。掉下去的機器人會把標記，留在他掉落之前所在的最後一個坐標點。所以對於以後的機器人，當他正位在有標記的地方時，這個機器人就會忽略會讓他掉下去的指令。</p><h3 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h3><p>輸入裡的第一列有2個正整數，代表這個矩形世界右上角頂點的坐標，其中假設這個世界的左下角頂點坐標為 ( 0 , 0 )。</p><p>接下來是若干組有關機器人的初始位置狀況和指令集，每個機器人2列。第一列為位置狀況，包括了兩個整數和一個字元（ N , S , E 或 W ），代表機器人初始的位置坐標以及機器人最初所面對的方向。第二列則是指令集，是一個由 ‘ L ‘ ， ‘ R ‘ 和 ‘ F ‘ 所組成的字串。輸入以 end-of-file 作為結束。</p><p>各機器人是依序動作的，也就是說，直到一個機器人作完他全部的動作，下一個機器人才會開始動作。</p><p>所有機器人的初始位置皆會在矩形土地上，不會落在外面。任何坐標的最大值皆不會超過 50 。每個指令集的長度皆不會超過 100 個字元長。</p><h3 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h3><p>對於每一個機器人，你都必須輸出其最後所在的坐標和面對的方向。如果一個機器人會掉落出此世界外，你必須先輸出他在掉落前，最後的所在位置和面對的方向，再多加一個字： LOST 。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;; <span class="comment">//N, E, S, W</span></span><br><span class="line"><span class="type">int</span> dy[] = &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> row, col, R, C, D, nR, nC;</span><br><span class="line">    <span class="type">char</span> d;</span><br><span class="line">    <span class="type">bool</span> lost = <span class="literal">false</span>;</span><br><span class="line">    string s;</span><br><span class="line">    map &lt;<span class="type">char</span>, <span class="type">int</span>&gt; mp1;</span><br><span class="line">    map &lt;<span class="type">int</span>, <span class="type">char</span>&gt; mp2;</span><br><span class="line">    mp1[<span class="string">&#x27;N&#x27;</span>] = <span class="number">0</span>; mp2[<span class="number">0</span>] = <span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">    mp1[<span class="string">&#x27;E&#x27;</span>] = <span class="number">1</span>; mp2[<span class="number">1</span>] = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">    mp1[<span class="string">&#x27;S&#x27;</span>] = <span class="number">2</span>; mp2[<span class="number">2</span>] = <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">    mp1[<span class="string">&#x27;W&#x27;</span>] = <span class="number">3</span>; mp2[<span class="number">3</span>] = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">    cin &gt;&gt; row &gt;&gt; col;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; R &gt;&gt; C &gt;&gt; d &gt;&gt; s)&#123;</span><br><span class="line">        D = mp1[d];</span><br><span class="line">        lost = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">&#x27;F&#x27;</span>)&#123;</span><br><span class="line">                nR = R + dx[D];</span><br><span class="line">                nC = C + dy[D];</span><br><span class="line">                <span class="keyword">if</span> (nR &gt;= <span class="number">0</span> &amp;&amp; nR &lt;= row &amp;&amp; nC &gt;= <span class="number">0</span> &amp;&amp; nC &lt;= col)&#123;</span><br><span class="line">                    R = nR;</span><br><span class="line">                    C = nC;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (a[R][C] == <span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="comment">//這個機器人正位在有標記的地方, 會忽略會讓他掉下去的指令。</span></span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        cout &lt;&lt; R &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; C &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mp2[D] &lt;&lt; <span class="string">&quot; LOST\n&quot;</span>;</span><br><span class="line">                        lost = <span class="literal">true</span>;</span><br><span class="line">                        a[R][C] = <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;R&#x27;</span>)&#123;</span><br><span class="line">                D = (D + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                D = (D - <span class="number">1</span> + <span class="number">4</span>) % <span class="number">4</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!lost) cout &lt;&lt; R &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; C &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mp2[D] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-版本二"><a href="#C-版本二" class="headerlink" title="C++版本二"></a>C++版本二</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Robot</span>&#123;</span></span><br><span class="line">    public:</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="type">int</span> y;</span><br><span class="line">        <span class="type">int</span> lost; <span class="comment">// yes: 1, no: 0</span></span><br><span class="line">        <span class="type">int</span> ori_index;</span><br><span class="line">        <span class="built_in">string</span> instr;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="title function_">is_lost</span><span class="params">(<span class="type">int</span> x_bound, <span class="type">int</span> y_bound)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (x &gt; x_bound || x &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (y &gt; y_bound || y &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> upper_right_x, upper_right_y;</span><br><span class="line">    Robot robot;</span><br><span class="line">    <span class="type">char</span> robot_ori[<span class="number">4</span>] = &#123;<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;S&#x27;</span>&#125;; </span><br><span class="line">    <span class="type">char</span> origin_ori;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; upper_right_x &gt;&gt; upper_right_y;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// initial map[][]</span></span><br><span class="line">    <span class="type">int</span> <span class="built_in">map</span>[upper_right_x+<span class="number">1</span>][upper_right_y+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= upper_right_x; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= upper_right_y; j++)&#123;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; robot.x &gt;&gt; robot.y &gt;&gt; origin_ori)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; robot.instr;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// find the index of origin_ori in robot_ori[]</span></span><br><span class="line">        robot.ori_index = distance(robot_ori, <span class="built_in">strchr</span>(robot_ori, origin_ori));</span><br><span class="line">        robot.lost = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> tmp_x = robot.x;</span><br><span class="line">        <span class="type">int</span> tmp_y = robot.y;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; robot.instr.length(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (robot.instr[i] == <span class="string">&#x27;L&#x27;</span>)&#123; <span class="comment">// turn left</span></span><br><span class="line">                robot.ori_index ++;</span><br><span class="line">                <span class="keyword">if</span> (robot.ori_index &gt; <span class="number">3</span>)&#123;</span><br><span class="line">                    robot.ori_index = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (robot.instr[i] == <span class="string">&#x27;R&#x27;</span>)&#123; <span class="comment">// turn right</span></span><br><span class="line">                robot.ori_index --;</span><br><span class="line">                <span class="keyword">if</span> (robot.ori_index &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                    robot.ori_index = <span class="number">3</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (robot.instr[i] == <span class="string">&#x27;F&#x27;</span>)&#123; <span class="comment">// move forward</span></span><br><span class="line">                tmp_x = robot.x;</span><br><span class="line">                tmp_y = robot.y;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (robot_ori[robot.ori_index] == <span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">                    robot.x ++;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (robot_ori[robot.ori_index] == <span class="string">&#x27;N&#x27;</span>)&#123;</span><br><span class="line">                    robot.y ++;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (robot_ori[robot.ori_index] == <span class="string">&#x27;W&#x27;</span>)&#123;</span><br><span class="line">                    robot.x --;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (robot_ori[robot.ori_index] == <span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                    robot.y --;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// check if robot losts</span></span><br><span class="line">                robot.lost = robot.is_lost(upper_right_x, upper_right_y);</span><br><span class="line">                <span class="keyword">if</span> (robot.lost)&#123;</span><br><span class="line">                    robot.x = tmp_x;</span><br><span class="line">                    robot.y = tmp_y;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">map</span>[robot.x][robot.y] == <span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="comment">// It&#x27;s the scent, won&#x27;t move off the edge</span></span><br><span class="line">                        robot.lost = <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">map</span>[robot.x][robot.y] = <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// output </span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; robot.x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; robot.y &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; robot_ori[robot.ori_index];</span><br><span class="line">        <span class="keyword">if</span> (robot.lost == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; LOST&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-版本三"><a href="#C-版本三" class="headerlink" title="C++版本三"></a>C++版本三</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,x,y;</span><br><span class="line">    <span class="type">char</span> z;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="type">int</span> mp[a+<span class="number">1</span>][b+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;x&gt;&gt;y&gt;&gt;z&gt;&gt;s)&#123;</span><br><span class="line">        <span class="type">bool</span> ok=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">length</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;R&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(z==<span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">                    z=<span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                    z=<span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;W&#x27;</span>)&#123;</span><br><span class="line">                    z=<span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;N&#x27;</span>)&#123;</span><br><span class="line">                    z=<span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;L&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(z==<span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">                    z=<span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                    z=<span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;W&#x27;</span>)&#123;</span><br><span class="line">                    z=<span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;N&#x27;</span>)&#123;</span><br><span class="line">                    z=<span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;F&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(z==<span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">                    x++;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                    y--;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;W&#x27;</span>)&#123;</span><br><span class="line">                    x--;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;N&#x27;</span>)&#123;</span><br><span class="line">                    y++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span> || y&lt;<span class="number">0</span> || x&gt;a || y&gt;b)&#123;</span><br><span class="line">                <span class="keyword">if</span>(z==<span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">                    x--;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                    y++;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;W&#x27;</span>)&#123;</span><br><span class="line">                    x++;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">&#x27;N&#x27;</span>)&#123;</span><br><span class="line">                    y--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(mp[x][y]==<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                mp[x][y]=<span class="number">1</span>;</span><br><span class="line">                ok=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ok)&#123;</span><br><span class="line">            cout&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;y&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;z&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;y&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;z&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="string">&quot;LOST&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ul><li>四個移動方向 N, E, S, W，座標值的變化量：<ul><li>dx[] &#x3D; {0, 1, 0, -1}</li><li>dy[] &#x3D; {1, 0, -1, 0}</li></ul></li><li>當機器人「正位在」有標記的地方時，這個機器人就會「忽略」會讓他掉下去的指令。</li><li>宣告一個int的二維陣列來跑機器人的位置（要大於題目所給的否則當你的機器人掉下去時你的程式也會停止跑因為超出二維陣列大小了）。</li><li>用迴圈處理機器人之指令。</li><li>每一次檢查是否掉出邊界。若掉出邊界，先檢查之前是不是有機器人掉落，如果有的話忽略此次指令；如果沒有的話，則判斷掉出邊界，並終止迴圈輸出此座標位置。</li></ul>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>MineSweeper</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/MineSweeper/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/MineSweeper/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10189<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=We0I0d1a9LM">銘傳資傳系  CPE 044 UVa10189-Minesweeper</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>您玩過《踩地雷》嗎？這是一款可愛的小遊戲，遊戲的目標是找到所有M×N地圖內的地雷。</p><p>為了幫助您，遊戲在一個正方形中顯示一個數字，告訴您該正方形附近有多少個地雷。</p><p>例如，假設下面的4×4的地圖內帶有2個地雷(以”*”字元表示)。</p><table><thead><tr><th>*</th><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td>.</td><td>.</td><td>.</td><td>.</td></tr><tr><td>.</td><td>*</td><td>.</td><td>.</td></tr><tr><td>.</td><td>.</td><td>.</td><td>.</td></tr></tbody></table><p>如果我們根據上述作法，將遊戲提示數字填入，則結果將為：</p><table><thead><tr><th>*</th><th>1</th><th>0</th><th>0</th></tr></thead><tbody><tr><td>2</td><td>2</td><td>1</td><td>0</td></tr><tr><td>1</td><td>*</td><td>1</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>當然，您可能已經注意到，每個正方形內的數字最多為8(因為最多有8個正方形相鄰)。</p><h3 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h3><p>輸入將包含多組測資。</p><p>每組測資第一行包含兩個整數n和m (0 &lt; n, m ≤ 100)，代表地圖大小。</p><p>如果n &#x3D; m &#x3D; 0代表輸入結束。</p><p>接下來的n行，每行m個字元，代表整張地圖。</p><p>每個安全方塊用”.”字元表示，每個地雷方塊用”*”字元表示。</p><h3 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h3><p>對於每組測資。</p><p>輸出第一行為”Field #k:”，k代表測資編號。</p><p>接下來輸出題示後的遊戲地圖。</p><p>每筆測資間請用空白行分隔。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_mine</span><span class="params">(string[], <span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> col, row;</span><br><span class="line">    <span class="type">int</span> index = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; col &gt;&gt; row)&#123;</span><br><span class="line">        <span class="comment">// end of input</span></span><br><span class="line">        <span class="keyword">if</span> (col == <span class="number">0</span> &amp;&amp; row == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        string game[col]; </span><br><span class="line">        <span class="type">char</span> mine_num[col][row];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; col; i++)&#123;</span><br><span class="line">            cin &gt;&gt; game[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// find the number of adjacent mines </span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; col; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; row; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (game[i][j] != <span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">                    mine_num[i][j] = <span class="string">&#x27;0&#x27;</span> + <span class="built_in">find_mine</span>(game, col, row, i, j);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    mine_num[i][j] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// output</span></span><br><span class="line">        <span class="keyword">if</span> (index != <span class="number">1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Field #&quot;</span> &lt;&lt; index &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; col; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; row; j++)&#123;</span><br><span class="line">                cout &lt;&lt; mine_num[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_mine</span><span class="params">(string game[], <span class="type">int</span> col, <span class="type">int</span> row, <span class="type">int</span> col_index, <span class="type">int</span> row_index)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> count_mine = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> x = col_index<span class="number">-1</span>; x &lt;= col_index+<span class="number">1</span>; x++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (x &gt;= <span class="number">0</span> &amp;&amp; x &lt; col)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> y = row_index<span class="number">-1</span>; y &lt;= row_index+<span class="number">1</span>; y++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (y &gt;= <span class="number">0</span> &amp;&amp; y &lt; row)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (game[x][y] == <span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">                        count_mine++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count_mine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ol><li>宣吿兩個 array，一個放測資，一個放地雷數</li><li>用迴圈一一尋找各個點周圍的地雷數</li><li>注意在尋找地雷時，pointer 不要 &lt;0 或 ≥ col&#x2F;row</li><li>注意輸出時的換行，在最後一組 Field 輸出後會有一個空行</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Largest Square</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Largest%20Square/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Largest%20Square/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10908<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=a33aDBfUZzA">銘傳資傳系 CPE 036 UVa10908-Largest Square</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>給定一個字元矩形，您必須找出最大正方形的邊的長度。<br>在其中正方形內的所有字元皆相同，並且正方形的中心(兩個對角線的交點)位於位置(r, c)。<br>矩形的高度和寬度分別為M和N。矩形的左上角座標為(0, 0)，右下角座標為(M-1, N-1)。</p><p>比方說下面給出的字元矩形。給定中心位置(1, 2)，此最大正方形邊長為3。</p><p>abbbaaaaaa<br>abbbaaaaaa<br>abbbaaaaaa<br>aaaaaaaaaa<br>aaaaaaaaaa<br>aaccaaaaaa<br>aaccaaaaaa</p><p>輸入第一行為一個整數T (T &lt; 21)，T代表有幾組測資。</p><p>每組測資的第一行包含三個整數M，N (1 &lt;&#x3D; M, N &lt;&#x3D; 100)，Q (Q &lt; 21)。</p><p>其中M，N表示矩形的高度和寬度，Q代表詢問的數量。</p><p>接下來M行每行N個字元，代表輸入的字元矩形。</p><p>接下來Q行，每行包含兩個整數r和c。</p><p>對於每組測資。</p><p>第一行輸出M，N，Q值，以空格分開。</p><p>接下來Q行，輸出以(r, c)當中心所對應的最大正方形邊長。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> testCaseNum;</span><br><span class="line">    <span class="type">int</span> height, width, squareLocationNum;</span><br><span class="line">    <span class="type">int</span> row, column; <span class="comment">// location of square</span></span><br><span class="line">    <span class="type">int</span> largestSide_half;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; testCaseNum;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; testCaseNum; i++)&#123;</span><br><span class="line">        cin &gt;&gt; height &gt;&gt; width &gt;&gt; squareLocationNum;</span><br><span class="line">        cout &lt;&lt; height &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; width &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; squareLocationNum &lt;&lt; endl;</span><br><span class="line">        </span><br><span class="line">        string square[height];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> m = <span class="number">0</span>; m &lt; height; m++)&#123;</span><br><span class="line">            cin &gt;&gt; square[m];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; squareLocationNum; j++)&#123;</span><br><span class="line">            cin &gt;&gt; row &gt;&gt; column;</span><br><span class="line">            largestSide_half = <span class="number">0</span>; <span class="comment">// the length between center and side</span></span><br><span class="line"></span><br><span class="line">            <span class="type">char</span> center = square[row][column];</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> largestHeight = (row &lt; (height-row<span class="number">-1</span>)) ? row : height-row<span class="number">-1</span>;</span><br><span class="line">            <span class="type">int</span> largestWidth = (column &lt; (width-column<span class="number">-1</span>)) ? column : width-column<span class="number">-1</span>;</span><br><span class="line">            <span class="type">int</span> largestPossibleSide_half = (largestHeight &lt; largestWidth) ? largestHeight : largestWidth;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// check if there is x length of a side of square, x = k * 2 + 1</span></span><br><span class="line">            <span class="type">bool</span> isSquare;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= largestPossibleSide_half; k++)&#123;</span><br><span class="line">                isSquare = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> m = row-k; m &lt;= row+k; m++)&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> n = column-k; n &lt;= column+k; n++)&#123;</span><br><span class="line">                        <span class="keyword">if</span> (square[m][n] != center)&#123;</span><br><span class="line">                            isSquare = <span class="literal">false</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (isSquare)&#123;</span><br><span class="line">                    largestSide_half++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; largestSide_half*<span class="number">2</span>+<span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ol><li><p>找出從中心點到邊界的最小距離</p></li><li><p>用迴圈檢查此距離內存在的最大正方形邊長</p></li></ol><p>概念其實很簡單，主要是對中心點向上下延伸伸展出最大的正方形</p><p>從正方形中心點的左上角開始繞一圈進行搜尋，如果這一圈都是相同字元，那就可以在對下一圈進行搜尋。</p><p>直到不能再對下一圈進行搜尋時就輸出最大正方形長度</p><p>舉例來說：</p><p>紅色點為中心點，而藍色為第一圈、螢光黃色為起頭圍著中心點繞一圈(藍色線段)，只要能夠成功繞一圈那就可以將正方形擴展長度，再從更外面一圈(綠色線條)對中心點圍繞。</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Odd Sum</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Odd%20Sum/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Odd%20Sum/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10783<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Odd%20Sum%2016f355b0dc2e4fd3aaf153c3be48e397/p10783.pdf">p10783.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>想知道在一個閉區間的範圍內，所有奇數的總和為多少？</p><ul><li>第一列會給予數字 T（1 ≤ T ≤ 100）代表接下來有 T 組測資</li><li>每組測資包含兩個數（0 ≤ a ≤ b ≤ 100），一個數一列進行輸入，代表閉區間的範圍</li><li>計算出範圍中所有奇數的總和（包含 a、b）</li><li>以輸出格式【Case T: sum】的格式輸出每組測資的結果</li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; cin.<span class="built_in">good</span>())&#123;</span><br><span class="line"><span class="type">int</span> tmp = n;</span><br><span class="line"><span class="keyword">while</span>(tmp--)&#123;</span><br><span class="line"><span class="type">int</span> start, end, sum = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; start &gt;&gt; end;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = start ; i &lt;= end ; i++)&#123;</span><br><span class="line">sum = i%<span class="number">2</span>? sum+=i : sum;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; n-tmp &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ul><li>使用取餘數判斷是否為奇數，如果是就進行加總，否則不進行動作</li></ul>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Eb Alto Saxophone Player</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Eb%20Alto%20Saxophone%20Player/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Eb%20Alto%20Saxophone%20Player/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10415<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=pnzB5qHfzlM&list=PLYhy6KLAgQE6QpZ5dUz-p-5dC1bWCTuIi&index=46">銘傳資傳系 CPE 046 UVa10415-Eb Alto Saxophone Player</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>你喜歡薩克斯風嗎？我有一個降E中音薩克斯風(Eb Alto Saxophone)。<br>當我在演奏某些手指必須動很快的曲子時，我對於我的手指頭按了幾下按鍵非常感興趣。<br>假設音樂僅由8個音調所組成。<br>分別是一個八度的 C、D、E、F、G、A、B。<br>以及高一個八度的 C、D、E、F、G、A、B。<br>我們使用 (c、d、e、f、g、a、b)、(C、D、E、F、G、A、B) 來代表他們。</p><p>每個音調的指法如下：<br>c: finger 2<del>4, 7</del>10<br>d: finger 2<del>4, 7</del>9<br>e: finger 2<del>4, 7, 8<br>f: finger 2</del>4, 7<br>g: finger 2<del>4<br>a: finger 2, 3<br>b: finger 2<br>C: finger 3<br>D: finger 1</del>4, 7<del>9<br>E: finger 1</del>4, 7, 8<br>F: finger 1<del>4, 7<br>G: finger 1</del>4<br>A: finger 1<del>3<br>B: finger 1</del>2</p><p>(假設一個手指頭只能按特定一個按鍵，且不同手指控制不同按鈕)<br>請寫出一支程式去計算每一根手指頭按了多少次按鍵。<br>如果某一按鍵在下一音符時不會用到，那麼就會放開，否則就是維持按著的情況。</p><h3 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h3><p>輸入的第一行是一個整數t (1 ≤ t ≤ 1000)，表示測資數量。</p><p>對於每組測資，只有一行字串s包含該歌曲。</p><p>歌曲s中只會出現{‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘a’, ‘b’, ‘C’, ‘D’, ‘E’, ‘F’, ‘G’, ‘A’, ‘B’}。</p><p>歌曲中最多有200個音符，而歌曲可能是空的。</p><h3 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h3><p>對於每組測資，請輸出10個數字，代表每個手指的按下次數。</p><p>數字用空格分隔。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// 音階 mp 所對應的指法，0代表放開，1代表按下 </span></span><br><span class="line">map&lt;<span class="type">char</span>, vector&lt;<span class="type">int</span>&gt; &gt; mp;</span><br><span class="line">mp[<span class="string">&#x27;c&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;d&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;e&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;f&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;g&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;a&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;b&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;C&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;D&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;E&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;F&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;G&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;A&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  mp[<span class="string">&#x27;B&#x27;</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">  <span class="type">int</span> t; <span class="comment">// 樂譜的數量 </span></span><br><span class="line">  string s; <span class="comment">// 樂譜的音階 </span></span><br><span class="line">  cin &gt;&gt; t;</span><br><span class="line">  <span class="built_in">getline</span>(cin, s);</span><br><span class="line">  <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">  <span class="built_in">getline</span>(cin, s);</span><br><span class="line">    <span class="type">int</span> count[<span class="number">11</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 計算每根手指頭按下的次數，第 0 項不做使用</span></span><br><span class="line"><span class="type">int</span> status[<span class="number">11</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 紀錄按下或沒按下的狀態，因為若連續兩個音都用到同一根手指頭，則不會按下</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; s.<span class="built_in">size</span>() ; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= <span class="number">10</span> ; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[s[i]][j])&#123;</span><br><span class="line"><span class="keyword">if</span>(status[j])&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">status[j] = <span class="number">1</span>;</span><br><span class="line">count[j]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">status[j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">1</span>) cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; count[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-、C-版本（不使用-map）"><a href="#C-、C-版本（不使用-map）" class="headerlink" title="C++、C 版本（不使用 map）"></a>C++、C 版本（不使用 map）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> notes[<span class="number">14</span>] = &#123;<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>&#125;;</span><br><span class="line"><span class="type">int</span> finger[<span class="number">14</span>][<span class="number">10</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;, <span class="comment">// c</span></span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;, <span class="comment">// d</span></span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// e</span></span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// f</span></span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// g</span></span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// a</span></span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// b</span></span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// C</span></span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;, <span class="comment">// D</span></span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// E</span></span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// F</span></span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// G</span></span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// A</span></span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="comment">// B</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> case_num;</span><br><span class="line">    <span class="built_in">string</span> song;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; case_num;</span><br><span class="line">    getline(<span class="built_in">cin</span>, song); <span class="comment">//clear buffer</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; case_num; i++)&#123;</span><br><span class="line">        <span class="built_in">string</span> song;</span><br><span class="line">        <span class="type">int</span> f_num[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="type">int</span> last_f[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="type">int</span> note_index;</span><br><span class="line"></span><br><span class="line">        getline(<span class="built_in">cin</span>, song);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; song.length(); j++)&#123;</span><br><span class="line">            <span class="comment">// find the index of note to find the fingering</span></span><br><span class="line">            note_index = distance(notes, <span class="built_in">strchr</span>(notes, song[j]));</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (j == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++)&#123;</span><br><span class="line">                    f_num[k] = finger[note_index][k];</span><br><span class="line">                    last_f[k] = finger[note_index][k];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++)&#123;</span><br><span class="line">                    <span class="comment">// check if finger used in last note</span></span><br><span class="line">                    <span class="keyword">if</span> (finger[note_index][k] == <span class="number">1</span> &amp;&amp; finger[note_index][k] != last_f[k])&#123;</span><br><span class="line">                        f_num[k] ++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    last_f[k] = finger[note_index][k];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// output</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (k != <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; f_num[k];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ul><li>map &lt;char, vector<int> &gt; mp; 紀錄每個音調需按鍵的手指</li><li>如果某一按鍵在下一音符時不會用到，那麼就會放開，否則就是維持按著的情況<ul><li>持續按著，不加計按鍵次數</li></ul></li><li>注意：歌曲可能是空的。讀入測資使用 getline(cin, s);</li></ul><h3 id="指法對應表（第一個不使用）"><a href="#指法對應表（第一個不使用）" class="headerlink" title="指法對應表（第一個不使用）"></a>指法對應表（第一個不使用）</h3><table><thead><tr><th>音高</th><th>省略</th><th>2.</th><th>3.</th><th>4.</th><th>5.</th><th>6.</th><th>7.</th><th>8.</th><th>9.</th><th>10.</th><th>11.</th></tr></thead><tbody><tr><td>c</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>1</td></tr><tr><td>d</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><td>e</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td></tr><tr><td>f</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td>g</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>a</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>b</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>C</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>D</td><td>0</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><td>E</td><td>0</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td></tr><tr><td>F</td><td>0</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td>G</td><td>0</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>A</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>B</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Doom&#39;s Day Algorithm</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Doom&#39;s%20Day%20Algorithm/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Doom&#39;s%20Day%20Algorithm/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA12019<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Doom's%20Day%20Algorithm%2056acb4d876f2456bb067f960ba14bb0a/p12019.pdf">p12019.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>給你一個日期，算出在2011是星期幾，已知下列日期皆為星期一，且 2011 年不是閏年</p><ul><li>4&#x2F;4</li><li>6&#x2F;6</li><li>8&#x2F;8</li><li>10&#x2F;10</li><li>12&#x2F;12</li></ul><p>輸入：第一列給定 <code>n</code> 接下來有 <code>n</code> 筆日期輸入，日期會以【月　日】的方式輸入</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> days[]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">string day[]=&#123;<span class="string">&quot;Friday&quot;</span>,<span class="string">&quot;Saturday&quot;</span>,<span class="string">&quot;Sunday&quot;</span>,<span class="string">&quot;Monday&quot;</span>,<span class="string">&quot;Tuesday&quot;</span>,<span class="string">&quot;Wednesday&quot;</span>,<span class="string">&quot;Thursday&quot;</span>&#125;;</span><br><span class="line"><span class="type">int</span> n, m, d, s;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> cs = <span class="number">0</span> ; cs &lt; n ; cs++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; d;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; m ; i++)</span><br><span class="line">s+=days[i];</span><br><span class="line">s+=d;</span><br><span class="line">cout&lt;&lt;day[s%<span class="number">7</span>]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ol><li>透過題意計算，4&#x2F;4 是 2011 年的第 93 天也是星期一，而【93 % 7 &#x3D; 2】得知 2011 年的第一天（1&#x2F;1）是星期五</li><li>先用字串陣列存取星期一 ~ 星期日的名稱，整數陣列存取每個月的總天數</li><li>將月轉換為天數，再加上該月的天數</li><li>輸出【 第3步驟 % 7 】的星期</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Divide, But Not Quite Conquer!</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Divide,%20But%20Not%20Quite%20Conquer!/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Divide,%20But%20Not%20Quite%20Conquer!/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10190<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?app=desktop&v=JsWd5LYwacQ">銘傳資傳系 CPE 032 UVa10190-Divide, But Not Quite Conquer!</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>此問題的目標是將某個整數n除以另一個整數m直到 n &#x3D; 1，這方法將會獲得一個數字序列。<br>我們假設該序列的每個數字為a[i]，假設它有k個數字(即必須進行 k−1 個連續除法才能達到 n &#x3D; 1)。</p><p>根據以下限制，此序列必唯一：</p><ol><li>a[1] &#x3D; n, a[i] &#x3D; a[i − 1] ÷ m, for all 1 &lt; i ≤ k</li><li>a[i] 被 m 整除(a[i] mod m &#x3D; 0) for all 1 ≤ i &lt; k</li><li>a[1] &gt; a[2] &gt; a[3] &gt; … &gt; a[k]</li></ol><p>以下為舉例：<br>如果n &#x3D; 125且m &#x3D; 5，則根據上述過程會得到125、25、5、1(做了3次除法：125&#x2F;5、25&#x2F;5、5&#x2F;5)。<br>因此，k &#x3D; 4，a[1] &#x3D; 125、a[2] &#x3D; 25、a[3] &#x3D; 5、a[4] &#x3D; 1。<br>如果n &#x3D; 30且m &#x3D; 3，則根據上述過程會得到30、10、3、1。<br>但是a[2] &#x3D; 10 且 10 mod 3 &#x3D; 1，違反了限制2，所以此序列不存在。<br>如果序列不存在，我們認為這不好玩，因此非常”Boring!”</p><p>輸入包含多行。每行有兩個非負整數n和m，n和m皆小於2000000000。</p><p>對於每行，輸出序列a(如題目定義)，序列的每個相鄰數字之間用一個空格隔開。</p><p>如果序列不存在，則輸出”Boring!”</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> dividend, divisor; <span class="comment">// 除數、被除數 </span></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; dividend &gt;&gt; divisor &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line"><span class="keyword">if</span>(dividend &lt; divisor || dividend &lt;= <span class="number">1</span> || divisor &lt;= <span class="number">1</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Boring!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">ans.<span class="built_in">push_back</span>(dividend);</span><br><span class="line"><span class="keyword">if</span>(dividend%divisor != <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">dividend /= divisor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(ans[ans.<span class="built_in">size</span>()<span class="number">-1</span>] != <span class="number">1</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Boring!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; ans.<span class="built_in">size</span>() ; i++)&#123;</span><br><span class="line">cout &lt;&lt; ans[i];</span><br><span class="line"><span class="keyword">if</span>(i != ans.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="版本二"><a href="#版本二" class="headerlink" title="版本二"></a>版本二</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="type">long</span> <span class="type">long</span> <span class="type">int</span>&gt; <span class="built_in">list</span>; </span><br><span class="line">    <span class="type">bool</span> isBoring;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m)&#123;</span><br><span class="line">        isBoring = <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">list</span>.clear();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (n &lt; m || m &lt;= <span class="number">1</span> || n &lt;= <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Boring!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (; n &gt; <span class="number">1</span>; n /= m)&#123;</span><br><span class="line">                <span class="keyword">if</span> (n % m == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="built_in">list</span>.push_back(n);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    isBoring = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">list</span>.push_back(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!isBoring)&#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="built_in">list</span>[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="built_in">list</span>.size(); i++)&#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="built_in">list</span>[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Boring!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>判斷測資(n, m) 是否能讓 n 為 m 的完全 k 次方數。</p><ol><li><p>先排除 n&lt;m 或 n ≤1 或 m≤1 ，這些狀況皆為 Boring!</p></li><li><p>n 用迴圈每次除去 m，判斷是否 n % m &#x3D;&#x3D; 0，若不為 0 則 break 減少計算</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Die Game</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Die%20Game/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Die%20Game/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10409<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=icz0On94yuA&list=PLYhy6KLAgQE6QpZ5dUz-p-5dC1bWCTuIi&index=45">銘傳資傳系 CPE 045 UVa10409-Die Game</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>“Life is not easy.”，人生往往超出我們的掌握<br>現在，作為ACM ICPC的參賽者，您可能只是在品嚐生活的痛苦。<br>但是不用擔心！不要只看人生的黑暗面，也要看光明面。<br>人生可能是一種令人愉快的機會遊戲，例如擲骰子”Do or die!”。<br>說不定可以找到通往勝利的途徑！</p><p>此問題來自骰子遊戲。”Do you know a die?”<br>此處的”die”與死亡無關，而是指一般的立方體骰子，每個面代表一到六個不同的數字。<br>順帶一提，”a die”是一個很少使用的詞。不過，您可能會聽過一個名言：”the die is cast”</p><p>遊戲開始時，骰子會在平台上靜止不動。<br>在遊戲中，主持人將骰子向各個方向滾動。<br>如果您可以預測骰子停止滾動時在頂面上看到的數字，則您將贏得比賽。</p><p>現在，要求您編寫一個模擬骰子滾動的程式。<br>為簡單起見，我們假設骰子既不滑動也不跳躍，而只是在四個方向(東，南，西，北)上滾動。<br>在每局遊戲開始時，主持人將骰子放在桌子的中央並調整其方向，以便分別在頂面、北面、西面上看到數字1、2、3。<br>對於其他三個面，我們沒有明確指定任何內容，但會告訴您一條黃金法則：任何一對相對的面的數字總和始終為7。</p><p>您的程式應接受一系列指令，指令為東”east”，南”south”，西”west”，北”north”。<br>例如”north”指令將骰子向下滾動到北，即頂面變為新的北，北變為新的底，依此類推。<br>其他指令也會根據自己的方向滾動骰子。<br>執行順序中的指令後，您的程式應計算最終顯示在頂部的數字。<br>請注意，桌子足夠大，骰子在遊戲中不會掉落或損壞。</p><h3 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h3><p>輸入第一行包含一個正整數n (n &lt;&#x3D; 1024)，代表指令序列的數量。</p><p>如果n &#x3D; 0代表輸入結束。</p><p>每個指令只包含東”east”、”south”、”west”、”north”。</p><h3 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h3><p>對於每個指令序列，在遊戲結束時輸出頂面上的數字。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本（務實版本）"><a href="#C-版本（務實版本）" class="headerlink" title="C++版本（務實版本）"></a>C++版本（務實版本）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">string rotate; <span class="comment">// 移動的指令 </span></span><br><span class="line"><span class="type">int</span> step, north, south, west, east, up, down, tmp; <span class="comment">// 總共的步數 骰子的六個面 暫存值 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; step &amp;&amp; !cin.<span class="built_in">eof</span>() &amp;&amp; step)&#123;</span><br><span class="line"><span class="comment">// 骰子初始值設定 </span></span><br><span class="line">up = <span class="number">1</span>, north = <span class="number">2</span>, west = <span class="number">3</span>, east = <span class="number">4</span>, south = <span class="number">5</span>, down = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(step--)&#123;</span><br><span class="line">cin &gt;&gt; rotate;</span><br><span class="line"><span class="keyword">if</span>(rotate == <span class="string">&quot;north&quot;</span>)&#123; <span class="comment">//向北邊翻轉 </span></span><br><span class="line">tmp = up; up = south; south = down; down = north; north = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(rotate == <span class="string">&quot;south&quot;</span>)&#123; <span class="comment">// 向南邊翻轉 </span></span><br><span class="line">tmp = up; up = north; north = down; down = south; south = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(rotate == <span class="string">&quot;east&quot;</span>)&#123; <span class="comment">// 向東邊翻轉</span></span><br><span class="line">tmp = up; up = west; west = down; down = east; east = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(rotate == <span class="string">&quot;west&quot;</span>)&#123; <span class="comment">// 向西邊翻轉</span></span><br><span class="line">tmp = up; up = east; east = down; down = west; west = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; up &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-版本（精簡版本）"><a href="#C-版本（精簡版本）" class="headerlink" title="C++版本（精簡版本）"></a>C++版本（精簡版本）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> command_num, tmp;</span><br><span class="line">    <span class="built_in">string</span> command;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; command_num)&#123;</span><br><span class="line">        <span class="comment">// end of input</span></span><br><span class="line">        <span class="keyword">if</span> (command_num == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> dice[<span class="number">3</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;; <span class="comment">// top, north, and west faces</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; command_num; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; command;</span><br><span class="line"></span><br><span class="line">            tmp = dice[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (command.compare(<span class="string">&quot;north&quot;</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">                dice[<span class="number">0</span>] = <span class="number">7</span> - dice[<span class="number">1</span>];</span><br><span class="line">                dice[<span class="number">1</span>] = tmp;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (command.compare(<span class="string">&quot;south&quot;</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">                dice[<span class="number">0</span>] = dice[<span class="number">1</span>];</span><br><span class="line">                dice[<span class="number">1</span>] = <span class="number">7</span> - tmp;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (command.compare(<span class="string">&quot;west&quot;</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">                dice[<span class="number">0</span>] = <span class="number">7</span> - dice[<span class="number">2</span>];</span><br><span class="line">                dice[<span class="number">2</span>] = tmp;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (command.compare(<span class="string">&quot;east&quot;</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">                dice[<span class="number">0</span>] = dice[<span class="number">2</span>];</span><br><span class="line">                dice[<span class="number">2</span>] = <span class="number">7</span> - tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; dice[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>解題之前要先知道骰子的六個面的關係：<strong>「兩個相對面的總和為７」</strong></p><p>透過字串對應翻轉動作，並執行相對應的交換</p><p>可以直接解出這一題</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Decode the Mad man</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Decode%20the%20Mad%20man/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Decode%20the%20Mad%20man/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10222<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Decode%20the%20Mad%20man%20723f47221c054447aac8bba39c481bbb/p10222.pdf">p10222.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>要解開教授說話的密碼，以其所給的符號或字母在鍵盤上的位置往左兩位來尋找正確解碼。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本（C差不多也是同個觀念，記得改掉-find-為循序搜尋）"><a href="#C-版本（C差不多也是同個觀念，記得改掉-find-為循序搜尋）" class="headerlink" title="C++版本（Ｃ差不多也是同個觀念，記得改掉 find 為循序搜尋）"></a>C++版本（Ｃ差不多也是同個觀念，記得改掉 find 為循序搜尋）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">string keyborad = <span class="string">&quot;1234567890-=qwertyuiop[]asdfghjkl;&#x27;zxcvbnm,./&#x27;&quot;</span>; <span class="comment">// 鍵盤的按鍵 </span></span><br><span class="line">string input; <span class="comment">// 輸入的密文 </span></span><br><span class="line"><span class="type">int</span> index; <span class="comment">// 等下找按鍵的索引值儲存 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">getline</span>(cin, input))&#123;</span><br><span class="line"><span class="built_in">transform</span>(input.<span class="built_in">begin</span>(), input.<span class="built_in">end</span>(), input.<span class="built_in">begin</span>(), ::tolower); <span class="comment">// 將全部的字元改成小寫</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; input.<span class="built_in">length</span>() ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(input[i] == <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">index = keyborad.<span class="built_in">find</span>(input[i]) - <span class="number">2</span>; <span class="comment">// 找到對應的原文</span></span><br><span class="line">cout &lt;&lt; keyborad[index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ol><li>將鍵盤內容按順序由左往右存為 <strong>string</strong></li><li>依序判斷輸入值之密碼轉換，注意空白及大小寫變化</li><li>創建一個字串，將鍵盤上所有按鍵直接打進去當作解密字串</li><li>用循序搜尋找到密碼所對應的原文</li><li>輸出原文</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Common Permutation</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Common%20Permutation/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Common%20Permutation/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10252<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Common%20Permutation%20647d181052254dc7ab6b74638b24fe4f/p10252.pdf">p10252.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><ul><li>輸入 a、b 兩字串，輸出皆為兩者的子字串</li><li>需要注意的有：<ol><li>重複輸入兩字串 (各一行)</li><li>字串皆小寫字母</li><li>輸出的字串要同時為兩字串的子字串 (可順序不同)</li><li>承上點，有多組符合輸出字母由小到大</li></ol></li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本（C概念相同，將-string-轉換成-char-）"><a href="#C-版本（C概念相同，將-string-轉換成-char-）" class="headerlink" title="C++版本（Ｃ概念相同，將 string 轉換成 char[]）"></a>C++版本（Ｃ概念相同，將 string 轉換成 char[]）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">string a, b;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">getline</span>(cin, a) &amp;&amp; <span class="built_in">getline</span>(cin, b))&#123;</span><br><span class="line"><span class="type">int</span> a_letter[<span class="number">26</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> b_letter[<span class="number">26</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; a.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">            a_letter[a[i] - <span class="string">&#x27;a&#x27;</span>] ++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; b.<span class="built_in">size</span>() ; i++)&#123;</span><br><span class="line">        b_letter[b[i] - <span class="string">&#x27;a&#x27;</span>] ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">26</span> ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a_letter[i] &amp;&amp; b_letter[i])&#123;</span><br><span class="line"><span class="type">int</span> min_index = <span class="built_in">min</span>(a_letter[i], b_letter[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; min_index ; j++)&#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">char</span>(i+<span class="number">97</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ol><li>創建字串 a、b，用來存取題目輸入的字串</li><li>創建一個長度為 26 的整數陣列，用來分別計算兩個字串中 26 個字母分別出現幾次</li><li>用 for 迴圈 + 【ASCII】的概念求出每個字母出現幾次</li><li>用 for 迴圈判別該字母是否有出現<ol><li>如果有，則判斷出現次數的最小值為何<ol><li>用 for 迴圈輸出最小值個字母</li></ol></li><li>如果沒有，則跳過</li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Cola</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Cola/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Cola/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA11150<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=ZLgX448oHMY&list=PLYhy6KLAgQE6QpZ5dUz-p-5dC1bWCTuIi&index=48">銘傳資傳系 CPE 048 UVa11150-Cola</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>你在便利商店看到一個這樣的宣傳單: “3瓶空可樂罐換一瓶可樂”</p><p>現在你決定在便利商店買一些可樂(就說N瓶好了), 你想知道你最多可以喝到多少瓶</p><p>下面的圖形說明的當 N&#x3D;8 時候的情況. 方法一是標準的做法: 在你喝了 8 瓶可樂之後, 你有 8 個空罐子, 把其中 6 瓶空罐子換成 2 瓶新的, 喝完之後你就有 4 瓶空罐子, 然後你又可以拿 3 瓶換 1 瓶新的, 最後, 你只有 2 個空罐子, 所以你再也不能再換新的可樂了. 所以你總共可以喝到 8 + 2 + 1 &#x3D; 11 瓶可樂.</p><p>可是其實你有一個更好的方法! 在第二種方法裡面, 你可以先和你的朋友(或者是店員??)借一個空罐子, 然後你就可以喝到 8 + 3 + 1 &#x3D; 12 瓶可樂! 當然, 你最後要把 1 瓶空罐子還給你的朋友.</p><p><img src="/Cola%206236bc27f5a2492dbe6c941ff49c51a4/Untitled.png" alt="Untitled"></p><h3 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h3><p>輸入有好幾組資料，每一組一行， 每一行有一個正整數 N (1 &lt;&#x3D; N &lt;&#x3D; 200)。</p><h3 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h3><p>對於每組輸入，輸出你最多可以喝到幾瓶可樂。你可以和你的朋友借一些空罐子，但是請記得還給他一樣數量的空罐子。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> cola, count;</span><br><span class="line"><span class="comment">// 輸入可樂的瓶數 </span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;cola)==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="comment">// 設定喝掉的瓶數為 0 </span></span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 如果可樂還有 3 瓶或以上 </span></span><br><span class="line"><span class="keyword">while</span>(cola &gt;= <span class="number">3</span>)&#123;</span><br><span class="line"><span class="comment">// 每次喝掉 3 個可樂 </span></span><br><span class="line">count += <span class="number">3</span>;</span><br><span class="line"><span class="comment">// 喝掉 3 瓶，兌換 1 瓶，剩餘瓶數總共減 3-1 = 2 </span></span><br><span class="line">cola -= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果最後只剩下 2 瓶，先喝掉 2瓶，再借 1 空瓶</span></span><br><span class="line"><span class="comment">// 湊滿 3 空瓶換 1 瓶喝掉，剩下的空瓶還回去，所以總共還可以喝 3 瓶 </span></span><br><span class="line"><span class="keyword">if</span>(cola == <span class="number">2</span>)&#123;</span><br><span class="line">count += <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 剩不到 2 瓶，則直接喝掉 </span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">count += cola;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; count &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-精簡版本"><a href="#C-精簡版本" class="headerlink" title="C++ 精簡版本"></a>C++ 精簡版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> N;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; N)&#123;</span><br><span class="line">        <span class="type">int</span> ans = N;</span><br><span class="line">        <span class="keyword">while</span> (N &gt;= <span class="number">3</span>)&#123;</span><br><span class="line">            ans += N / <span class="number">3</span>;</span><br><span class="line">            N = N / <span class="number">3</span> + N % <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans += (N == <span class="number">2</span>);</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>觀察規律算數學，只要看最後的瓶子數有沒有達到2瓶即可</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Cheapest Base</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Cheapest%20Base/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Cheapest%20Base/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA11005<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Cheapest%20Base%20a05492b8e3854ae8b25539145988416d/p11005.pdf">p11005.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>找出並計算最便宜的影印成本，需要用哪一個進制印才是最便宜的</p><p>有0<del>9、A</del>Z共 36 個字元，也代表 2~36 進制，輸入會給出它們每個字元印出來的成本</p><p>如果最便宜的有好幾個，就要全部列舉出來</p><h3 id="測資說明："><a href="#測資說明：" class="headerlink" title="測資說明："></a>測資說明：</h3><p>第一個輸入 2 為共 2 組測資<br>第一組測資一開始輸入共36個數字，分別是0<del>9 , A</del>Z的字元成本，如下表所示：</p><table><thead><tr><th>10</th><th>8</th><th>12</th><th>13</th><th>15</th><th>13</th><th>13</th><th>16</th><th>9</th></tr></thead><tbody><tr><td>11</td><td>18</td><td>24</td><td>21</td><td>23</td><td>23</td><td>23</td><td>13</td><td>15</td></tr><tr><td>17</td><td>33</td><td>21</td><td>23</td><td>27</td><td>26</td><td>27</td><td>19</td><td>4</td></tr><tr><td>22</td><td>18</td><td>30</td><td>30</td><td>24</td><td>16</td><td>26</td><td>21</td><td>21</td></tr></tbody></table><p>接下來輸入為5，表示要印出來的數字共有5組，分別為：</p><table><thead><tr><th>98329921</th><th>12345</th><th>800348</th><th>14</th><th>873645</th></tr></thead></table><p>第二組測資以此類推</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-、C通用版本（版主的）"><a href="#C-、C通用版本（版主的）" class="headerlink" title="C++、Ｃ通用版本（版主的）"></a>C++、Ｃ通用版本（版主的）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> price[<span class="number">38</span>] = &#123;<span class="number">0</span>&#125;;  <span class="comment">//存取每一種進位制的價錢，用索引值當作進位的數字</span></span><br><span class="line"><span class="type">int</span> cost[<span class="number">38</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 存取每一種進位制的影印成本，用索引值當作進位的數字</span></span><br><span class="line"><span class="type">int</span> t, q, x; <span class="comment">// t 組測資，q 次列印，x 影印數字的暫存 </span></span><br><span class="line"></span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> case_num = <span class="number">1</span> ; case_num &lt;= t ; case_num++)&#123;</span><br><span class="line"><span class="keyword">if</span>(case_num &gt; <span class="number">1</span>)&#123;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸入每種進位制的價錢 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">36</span> ; i++)&#123;</span><br><span class="line">cin &gt;&gt; price[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 這一組測資的號碼 </span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; case_num &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; q ; i++)&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 計算出每個進位制的影印成本，同時找出最小的成本為多少 </span></span><br><span class="line"><span class="type">int</span> min_cost = INT_MAX;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">36</span>; i++)&#123;</span><br><span class="line"><span class="type">int</span> n = x, result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n)&#123;</span><br><span class="line">result += price[n%i];</span><br><span class="line">n /= i;</span><br><span class="line">&#125;</span><br><span class="line">cost[i] = result;</span><br><span class="line">min_cost = <span class="built_in">min</span>(min_cost, cost[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出環節</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cheapest base(s) for number &quot;</span> &lt;&lt; x &lt;&lt; <span class="string">&quot;:&quot;</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= <span class="number">36</span> ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (cost[i] == min_cost)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C＋＋版本（網路精簡版）"><a href="#C＋＋版本（網路精簡版）" class="headerlink" title="C＋＋版本（網路精簡版）"></a>C＋＋版本（網路精簡版）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T, cost, Q, x;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> Case = <span class="number">1</span>; Case &lt;= T; Case++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (Case &gt; <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="built_in">map</span> &lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">36</span>; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; cost;</span><br><span class="line">            mp[i] = cost;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; Case &lt;&lt; <span class="string">&quot;:\n&quot;</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; Q;</span><br><span class="line">        <span class="keyword">while</span> (Q--)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Cheapest base(s) for number &quot;</span> &lt;&lt; x &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line">            <span class="type">int</span> mn =  <span class="number">0x7FFFFFFF</span>;</span><br><span class="line">            <span class="built_in">map</span> &lt;<span class="type">int</span>,<span class="type">int</span>&gt; ans;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">36</span>; i++)&#123;</span><br><span class="line">                <span class="type">int</span> n = x;</span><br><span class="line">                cost = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (n)&#123;</span><br><span class="line">                    cost += mp[n % i];</span><br><span class="line">                    n /= i;</span><br><span class="line">                &#125;</span><br><span class="line">                ans[i] = cost;</span><br><span class="line">                mn = min(mn, cost);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">36</span>; i++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (ans[i] == mn) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>把要印出來的數字，一個個從 2 進制轉換到 36 進制轉換，看哪個進制的成本最低</p><p>而題目最多只會有 1 ≤ t ≤ 25 組的測資</p><ol><li>創建變數 t 組測資、q 次列印、x 影印資料的暫存、min_cost 存取最低價錢</li><li>創建兩個一維陣列，【price】、【cost】<ol><li>price：存取每一種進位制的價錢，用索引值當作進位的數字</li><li>cost：存取每一種進位制計算過後的影印成本，用索引值當作進位的數字</li></ol></li><li>在題目輸入每一筆影印資料 x 之後，透過位制的轉換，計算出列印成本<ol><li>列印成本存入 cost 陣列</li><li>min_cost 判斷是否為目前的最低成本，如果是則儲存</li></ol></li><li>輸出案例號碼與最低成本</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Can You Solve It</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Can%20You%20Solve%20It/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Can%20You%20Solve%20It/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10642<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=mgoIwBhOx2A&list=PLYhy6KLAgQE6QpZ5dUz-p-5dC1bWCTuIi&index=38">銘傳資傳系 CPE 038 UVa10642-Can You Solve It</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>下面這張圖，每個圓都有一個坐標，根據笛卡爾坐標系，您可以按照以下所示的箭頭路徑從一個圓圈移動到另一個圓圈。</p><p>total_number_of_step(s)_needed &#x3D; number_of_intermediate_circles_you_pass + 1</p><p>例如，要從 (0, 3) 到 (3, 0)，您必須經過兩個中間圓 (1, 2) 和 (2, 1)。 所以，</p><p>在這種情況下，所需的總步數是 2 + 1 &#x3D; 3。</p><p><img src="/Can%20You%20Solve%20It%20545e69936fe2475a8a613e3aa7518e62/Untitled.png" alt="Untitled"></p><p>第一行為一個整數 n 代表測試資料數量</p><p>接下來 n 行，每行包含 4 個整數 x1, y1, x2, y2 (0 ≤ x1, y1, x2, y2 ≤ 100000)</p><ul><li>(x1, y1) 代表起始座標</li><li>(x2, y2) 代表目標座標</li></ul><p>對於每筆測試資料，請照格式輸出是第幾筆，以及要花費的最小步數</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 對角線編號概念</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">loc</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x+y)*(x+y+<span class="number">1</span>)/<span class="number">2</span>+x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n, t;</span><br><span class="line"><span class="type">int</span> x1, y1, x2, y2;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(t = <span class="number">1</span> ; t &lt;= n ; t++)&#123;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; t &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; <span class="built_in">loc</span>(x2, y2)-<span class="built_in">loc</span>(x1, y1) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>解這題之前，我們可以發現一個規律，每一條斜線，其步數是一個等差數列</p><h3 id="對角線編號公式推導-x-y"><a href="#對角線編號公式推導-x-y" class="headerlink" title="對角線編號公式推導 &#x3D; x + y"></a>對角線編號公式推導 &#x3D; x + y</h3><p>$$<br>Loc(x, y) &#x3D; 前面(含本身)所有對角線元素的總和+x<br>$$</p><p>$$<br>Loc(x, y) &#x3D; (0+1+2+3+…+本身對角線編號)+x<br>$$</p><p>$$<br>Loc(x, y) &#x3D; \frac{(對角線編號)(對角線編號+1)}{2}+x<br>$$</p><p>$$<br>Loc(x,y) &#x3D; \frac{(x+y)(x+y+1)}{2}+x<br>$$</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Beat the Spread!</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Beat%20the%20Spread!/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Beat%20the%20Spread!/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10812<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Beat%20the%20Spread!%20a74ea30acf044291ae8ef3245b02515b/p10812.pdf">p10812.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>駭客針對球賽設立了一項賭盤，請你根據兩隊的得分計算出以下的數據</p><ul><li>兩隊得分和的平均</li><li>兩隊得分差的平均</li><li>得分數的輸入順序不管，皆為正整數，且得分差與得分和皆為正整數&amp;偶數</li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> sum, dif; <span class="comment">// a+b = sum, a-b = dif </span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> a, b;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        cin &gt;&gt; sum &gt;&gt; dif;</span><br><span class="line"></span><br><span class="line">        a = (sum + dif) / <span class="number">2</span>;</span><br><span class="line">        b = (sum - dif) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((sum + dif) % <span class="number">2</span> == <span class="number">1</span> || (sum - dif) % <span class="number">2</span> == <span class="number">1</span> || a &lt; <span class="number">0</span> || b &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;impossible&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>主要是考英文邏輯，懂了之後就是進行數學運算</p><ol><li>若 sum+ dif 不為偶數、sum- dif 不為偶數、sum+ dif &lt; 0、sum- dif &lt; 0，則其解不存在</li><li>反之，a &#x3D; (sum+dif)&#x2F;2，b &#x3D; (sum- dif)&#x2F;2</li><li>輸出時，較大者在前</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Bangla Numbers</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Bangla%20Numbers/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Bangla%20Numbers/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10101<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Bangla%20Numbers%208cd761cd31f24a8680fbda31af948519/p10101.pdf">p10101.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>Bangla numbers 對於數字位數的標記如下:</p><ul><li>kuti (10000000)</li><li>lakh (100000)</li><li>hajar (1000)</li><li>shata (100)</li></ul><p>請你使用 Bangla numbers 去標記題目的輸入</p><p>如：23764 &#x3D; 23 hajar 7 shata 64</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bangla</span><span class="params">(<span class="type">long</span> <span class="type">long</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (num &gt;= <span class="number">10000000</span>) &#123;</span><br><span class="line">        <span class="built_in">bangla</span>(num / <span class="number">10000000</span>);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; kuti&quot;</span>;</span><br><span class="line">        num %= <span class="number">10000000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num &gt;= <span class="number">100000</span>) &#123;</span><br><span class="line">        <span class="built_in">bangla</span>(num / <span class="number">100000</span>);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; lakh&quot;</span>;</span><br><span class="line">        num %= <span class="number">100000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num &gt;= <span class="number">1000</span>) &#123;</span><br><span class="line">        <span class="built_in">bangla</span>(num / <span class="number">1000</span>);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; hajar&quot;</span>;</span><br><span class="line">        num %= <span class="number">1000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">        <span class="built_in">bangla</span>(num / <span class="number">100</span>);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; shata&quot;</span>;</span><br><span class="line">        num %= <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> num;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> countCase = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; num) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">4</span>) &lt;&lt; right &lt;&lt; ++countCase &lt;&lt; <span class="string">&quot;.&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (num)</span><br><span class="line">            <span class="built_in">bangla</span>(num);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 0&quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>遞迴輸出的概念，處於最底層的輸出反而最先顯示，加上取餘數即可解決</p><p>這邊因為要對齊案件編號，所以使用了一個 C++的【setw()】，效果會跟 C 的【%11d】相同</p><p><a href="https://www.runoob.com/w3cnote/cpp-func-setw.html">C++ setw() 函数 | 菜鸟教程</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; right &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%10d\n&quot;</span>, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你可以比較一下，這兩者的輸出格式基本一樣。</p><p>就像是之前上課限制小數點輸出位數的【%.2f】差不多。</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Back to School Physics</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Back%20to%20School%20Physics/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/Back%20to%20School%20Physics/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10071<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="Back%20to%20School%20Physics%200e7101f541d84991a803d291d8110d35/p10071.pdf">p10071.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>一粒子由靜止開始做等加速度運動，假設在 t 秒時速度為 v，問此粒子 2t 秒經過的位移為多少？</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">float</span> v, t;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; v &gt;&gt; t &amp;&amp; cin.<span class="built_in">good</span>())&#123;</span><br><span class="line"><span class="keyword">if</span>(v == <span class="number">0</span> || t == <span class="number">0</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;0&#x27;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">float</span> a = v/t;</span><br><span class="line"><span class="type">float</span> s = (a*(<span class="number">2</span>*t)*(<span class="number">2</span>*t))/<span class="number">2</span>;</span><br><span class="line">cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這一題就是純粹的物理習題，透過速度和時間，求出加速度，最後算出位移</p><p>但是要記得對這種會有小數點的問題，「全部用浮點數」會比較不會出錯</p><h3 id="位移公式"><a href="#位移公式" class="headerlink" title="位移公式"></a>位移公式</h3><p>$$<br>S &#x3D; v_0 \times t_0 +\frac{1}{2} \times a \times t^{2}<br>$$</p><h3 id="平均加速度公式"><a href="#平均加速度公式" class="headerlink" title="平均加速度公式"></a>平均加速度公式</h3><p>$$<br>a &#x3D; \frac{v}{t}<br>$$</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>B2-Sequence</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/B2-Sequence/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/B2-Sequence/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA11063<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="B2-Sequence%209c518bc92c384ff98a75334673d6f2ba/p11063.pdf">p11063.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>B2-Sequence 是指一串數列符合以下條件，才可稱之為 B2-Sequence</p><ol><li>後項必定大於前項（b1 &lt; b2）</li><li>每一項皆為正整數</li><li>每一項的和均不會重複出現</li></ol><p>第一列輸入給定 <code>n</code> 用以表示下一列有 <code>n</code> 個數字輸入，例如：</p><blockquote><p>4<br>1 2 4 8</p></blockquote><ol><li>後項皆大於前項，且皆為正整數（0 &lt; 1 &lt; 2 &lt; 4 &lt; 8）</li><li>每一項的和均不會重複出現，如下圖所示：</li></ol><table><thead><tr><th>相加</th><th>1</th><th>2</th><th>4</th><th>8</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>3</td><td>5</td><td>9</td></tr><tr><td>2</td><td></td><td>4</td><td>6</td><td>10</td></tr><tr><td>4</td><td></td><td></td><td>8</td><td>12</td></tr><tr><td>8</td><td></td><td></td><td></td><td>16</td></tr></tbody></table><p>所以此案例是 B2-Sequence</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n, caseNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; cin.<span class="built_in">good</span>())&#123;</span><br><span class="line">caseNum++;</span><br><span class="line"><span class="type">int</span> check_b2 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸入測資 </span></span><br><span class="line"><span class="type">int</span> ans[n] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">cin &gt;&gt; ans[i];</span><br><span class="line"></span><br><span class="line"><span class="comment">//檢查輸入值是否符合正整數 </span></span><br><span class="line"><span class="keyword">if</span>(ans[i] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">check_b2 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//檢查相鄰兩數是否符合升冪</span></span><br><span class="line"><span class="keyword">if</span>(i != <span class="number">0</span> &amp;&amp; ans[i<span class="number">-1</span>] &gt; ans[i])&#123;</span><br><span class="line">check_b2 = <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//檢查所有的和是否有重複的 </span></span><br><span class="line"><span class="keyword">if</span>(check_b2)&#123;</span><br><span class="line"><span class="type">int</span> sum[<span class="number">20001</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = i ; j &lt; n ; j++)&#123;</span><br><span class="line"><span class="type">int</span> result = ans[i] + ans[j];</span><br><span class="line"><span class="keyword">if</span>(sum[result] == <span class="number">0</span>)&#123;</span><br><span class="line">sum[result] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">check_b2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//輸出</span></span><br><span class="line"><span class="keyword">if</span>(check_b2)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; caseNum &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; <span class="string">&quot;It is a B2-Sequence.&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; caseNum &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; <span class="string">&quot;It is not a B2-Sequence.&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ol><li>輸入測資時排除 &lt;0 及沒有由小到大輸入的數列</li><li>用一個陣列 int sum[20001] 記錄曾出現之兩數相加總和</li><li>用迴圈計算 bi + bj，i ≤ j 透過 sum[ bi+bj ] 檢查此數是否出現過</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>An Easy Problem!</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/An%20Easy%20Problem!/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/An%20Easy%20Problem!/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10093<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="An%20Easy%20Problem!%20b01c3f522dab4a2085b71de15eb24189/p10093.pdf">p10093.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>題目給定一個 N 進制 (2 ≤ N ≤ 62) 的數字 R，R 保證可以被 (N-1) 整除。求符合提議的最小 N。當 N &#x3D; 62 時，用來表示62進制的字符為 0..9, A..Z, a..z。</p><ul><li>一個N進位制的數，表示成【abc】 &#x3D; a * N^2 + b * N + c<ul><li>&#x3D; a<em>N</em>(N-1+1) + b*(N-1+1) + c</li><li>&#x3D; a<em>N</em>(N-1) + a<em>N + b</em>(N-1) + b + c</li><li>&#x3D; a<em>N</em>(N-1) + a*(N-1) + a + b*(N-1) + b + c</li><li>&#x3D; (a * N + a + b) * <strong>(N-1)</strong> + (a + b + c)</li></ul></li><li>如果一個N進位制的數【abc】是 (N-1) 的倍數，則 (a + b + c) 也是(N-1) 的倍數。</li><li>⚠️注意：測資會有像 ” +A” 或 ” -5464″ 這樣有空白或正負號的字串。</li></ul><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">string input;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">getline</span>(cin, input))&#123;</span><br><span class="line"><span class="type">int</span> index = <span class="number">0</span>, base = <span class="number">1</span>, tmp;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isalnum</span>(input[index]))&#123;</span><br><span class="line">index++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = index ; i &lt; input.<span class="built_in">length</span>() ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isdigit</span>(input[i]))&#123;</span><br><span class="line">tmp = input[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isupper</span>(input[i]))&#123;</span><br><span class="line">tmp = input[i] - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">islower</span>(input[i]))&#123;</span><br><span class="line">tmp = input[i] - <span class="string">&#x27;a&#x27;</span> + <span class="number">26</span> + <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sum += tmp;</span><br><span class="line"><span class="keyword">if</span>(base &lt; tmp)&#123;</span><br><span class="line">base = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>( ; base &lt; <span class="number">62</span> ; base++)&#123;</span><br><span class="line"><span class="keyword">if</span>(sum % base == <span class="number">0</span>)&#123;</span><br><span class="line">cout &lt;&lt; base+<span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (base == <span class="number">62</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;such number is impossible!&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ol><li>以 string 輸入整數，再用 isalnum() 判斷位元是否為 0–9、A-Z、 a-z</li><li>base 必大於各個位數（例如，1A 的 base 必大於 11）</li><li>將各個位數加總(abc -&gt; a+b+c)，找出最小的 base</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>All You Need Is Love</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/All%20You%20Need%20Is%20Love/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/All%20You%20Need%20Is%20Love/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10193<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="All%20You%20Need%20Is%20Love%20340675fd871b4c3d94f586c557fb7864/p10193.pdf">p10193.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>IBM (International Beautiful Machines)公司發明了一種小玩意兒叫做「愛的算命機」。這台機器會回答你是否非常渴望愛情。</p><p>這機器運作的情形是：請你輸入一僅含0和1的字串（稱為S），機器自己則定義一僅含0和1的字串（稱為L，Love的意思）。</p><p>然後機器不斷的用 S 去減 L（當然是2進位的減法），如果最後可以得到S&#x3D;L，代表S是用Love做成的。如果最後L&gt;S，代表S不是用Love做成的。</p><h3 id="舉例說明"><a href="#舉例說明" class="headerlink" title="舉例說明"></a>舉例說明</h3><p>假設S&#x3D;”11011”，L&#x3D;”11”。如果我們不斷的從S減去L，</p><p>我們可以得到：11011、11000、10101、10010、1111、1100、1001、110、11。所以我們得到 L 了，也就是S是用Love做的。由於愛的算命機的某些限制，字串不可以有以0為開頭的，</p><p>也就是說”0010101”、”01110101”、”011111”這些字串都是不合法的。另外，只有一個位元的字串也是不合法的。</p><h3 id="測資說明"><a href="#測資說明" class="headerlink" title="測資說明"></a>測資說明</h3><p>輸入的第一列有一個整數N（N&lt;10000），代表以下有幾組測試資料。每組測試資料2列，代表S1和S2字串，其長度都不會超過30個字元。你可以假設所有的字串都是合法的。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GCD</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">GCD</span>(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Binary_to_Dercimal</span><span class="params">(string a)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = a.<span class="built_in">length</span>()<span class="number">-1</span> ; i &gt;= <span class="number">0</span> ; i--)&#123;</span><br><span class="line">result += <span class="built_in">pow</span>(<span class="number">2</span>, a.<span class="built_in">length</span>() - i - <span class="number">1</span>)*(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n, s1, s2;</span><br><span class="line">string S1_str, S2_str;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line"><span class="type">int</span> case_num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line">cin &gt;&gt; S1_str;</span><br><span class="line">cin &gt;&gt; S2_str;</span><br><span class="line"></span><br><span class="line">case_num++;</span><br><span class="line">s1 = <span class="built_in">Binary_to_Dercimal</span>(S1_str);</span><br><span class="line">s2 = <span class="built_in">Binary_to_Dercimal</span>(S2_str);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Pair #&quot;</span> &lt;&lt; case_num &lt;&lt; <span class="string">&quot;: &quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">GCD</span>(s1, s2) != <span class="number">1</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;All you need is love!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Love is not all you need!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>看似相當複雜其實，只要看是要考公因數的關係</p><ul><li>判斷是否能夠找到一個合法的L，使得S1和S2都可以用Love做成。亦即<ul><li>S1 是 L 的倍數。</li><li>S2 是 L 的倍數。</li><li>L 是 S1 和 S2 的公因數。</li></ul></li><li>利用輾轉相除法計算 S1 和 S2 的最大公因數<ul><li>如果大於 1 ( 只有一個位元的字串不合法 )，表示有解。</li></ul></li></ul><h3 id="輾轉相除法"><a href="#輾轉相除法" class="headerlink" title="輾轉相除法"></a>輾轉相除法</h3><p>輾轉相除法是一種取得兩數之間公因數的方法之一，利用被除數、商、餘數之間的關係做的運算</p><p><a href="https://www.youtube.com/watch?v=f0YmQ_8bOWc">C語言 實例講解 輾轉相除法求最大公因數</a></p><p><a href="https://www.liveism.com/live-concept.php?q=%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8%E7%9A%84%E6%B1%82%E6%B3%95%E2%94%80%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95">最大公因數的求法─輾轉相除法 - Live 多媒體數學觀念典 Online</a></p><p><a href="https://zh.wikipedia.org/zh-tw/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95">輾轉相除法 - 維基百科，自由的百科全書</a></p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>A mid-summer nights dream</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/A%20mid-summer%20nights%20dream/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/A%20mid-summer%20nights%20dream/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10057<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=lSh7iT8cnYk&list=PLYhy6KLAgQE6QpZ5dUz-p-5dC1bWCTuIi&index=40">銘傳資傳系 CPE 040 UVa10057-A mid-summer night’s dream</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>今年是公元2200年。在過去的200年中，科學取得了很大進步。這裡提到了兩百年，因為這個問題是在時光機的幫助下被發送回公元2000年的。<br>現在可以在人與電腦之間建立直接連接。人們可以在3D顯示器上觀看別人的夢，就像在看電影一樣。<br>本世紀最大的一個問題是，人們對電腦的依賴性變得如此之高，以至於他們的分析能力接近於零。<br>現在，電腦可以讀取問題並自動解決，但是他們只能解決困難的問題(現在已經沒有簡單的問題了)。<br>我們的首席科學家遇到了很大的麻煩，因為他忘記了密碼。出於安全原因，當今的電腦無法解決與密碼相關的問題。<br>在仲夏夜裡，科學家做了一個夢，在那裡他看到許多無號整數飛來飛去。<br>他在電腦的幫助下記錄了它們，然後他知道如果數字為(X1，X2，…，Xn)。<br>他需要找到一個整數A(此A為密碼)，使得能夠得到以下式子的最小值。</p><p>(|X1 − A| + |X2 − A| + . . . + |Xn − A|)</p><h3 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h3><p>輸入包含多組測資。</p><p>每組測資第一行為數字n (0 &lt; n ≤ 1000000)，表示他在夢中看到了多少個數字。</p><p>接下來有n個數字，所有數字都小於65536。</p><h3 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h3><p>對於每組測資，輸出三個整數。</p><p>第一個數字是能得到該算式最小值的A。</p><p>第二個數字是|Xi − A|為最小值的數量。</p><p>第三行數字是可能有幾種最小值。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n)&#123;</span><br><span class="line">        <span class="type">int</span> a[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            cin &gt;&gt; a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(a, a+n);</span><br><span class="line">        <span class="type">int</span> mid1 = a[(n<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line">        <span class="type">int</span> mid2 = a[n/<span class="number">2</span>];</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] == mid1 || a[i] == mid2) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; mid1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ans &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mid2 - mid1 + <span class="number">1</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ul><li>題目要求輸出三個整數:<ul><li>第一個數字是能使該算式最小的最小的 A：mid1</li><li>第二個數字是|Xi − A|為最小值 (&#x3D; 0) 的數量：Xi &#x3D; mid1 or Xi &#x3D; mid2</li><li>第三行數字是有幾種可能的 A：mid2 – mid1 + 1</li></ul></li><li>【例子】a&#x3D; {1, 3, 4, 6, 7, 10}<ul><li>中位數有兩個， mid1 &#x3D; 4， mid2 &#x3D; 6。</li><li>A &#x3D; 4, delta &#x3D; {3, 1, <strong>0</strong>, 2, 3, 6}, sum &#x3D; 15</li><li>A &#x3D; 5, delta &#x3D; {4, 2, 1, 1, 2, 5}, sum &#x3D; 15</li><li>A &#x3D; 6, delta &#x3D; {5, 3, 2, <strong>0</strong>, 1, 4}, sum &#x3D; 15</li></ul></li><li>如果 n 是奇數，中位數只有一個，mid1 &#x3D; mid2。</li><li>如果 n 是偶數，中位數有兩個， mid1 &#x3D; a[(n-1)&#x2F;2] 和 mid2 &#x3D; a[n&#x2F;2]</li><li>先對 a&#x3D; (X1，X2，…，Xn) 進行排序，由小排到大。</li><li>要讓 (|X1 − A| + |X2 − A| + . . . + |Xn − A|) 的值最小，A 是 (X1，X2，…，Xn) 的中位數。</li></ul>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2 the 9s</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/2%20the%209s/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/2%20the%209s/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10922<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p>此題的 PDF 於 Online Judge 中已經失效，所以這邊使用銘傳大學的影片當作題目</p><p><a href="https://www.youtube.com/watch?v=_YWuABaqk0U">銘傳資傳系 CPE 034 UVa10922-2 the 9s</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>我們知道要怎麼確定一個整數是不是 9 的倍數－如果它每位數的總和是9的倍數，那它就是9的倍數。這種檢驗的方法其實是一種遞迴的方法，而且我們把這種方法遞迴的深度稱作 N 的 9-degree 。</p><p>你的工作就是，給你一個正整數N，判斷他是不是9的倍數，而且如果他是9的倍數你還需要判斷它的 9-degree。</p><p>輸入含有多組測試資料。每組測試資料一列包含一個正數 N。</p><p>當 N&#x3D;0 時代表輸入結束；輸入的數最大可以到1000位數。</p><p>對於每一組測試資料，請輸出它是否是 9 的倍數及它的 9-degree。</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">is_nine_degree</span><span class="params">(string n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n.<span class="built_in">length</span>() == <span class="number">1</span> &amp;&amp; n[<span class="number">0</span>] == <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, degree = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n.<span class="built_in">length</span>() &gt;= <span class="number">2</span>)&#123;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n.<span class="built_in">length</span>() ; i++)&#123;</span><br><span class="line">sum += (n[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(sum%<span class="number">9</span> == <span class="number">0</span>)&#123;</span><br><span class="line">degree++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n.<span class="built_in">clear</span>();</span><br><span class="line">n = <span class="built_in">to_string</span>(sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> degree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">string n;</span><br><span class="line"><span class="type">int</span> result;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; !cin.<span class="built_in">eof</span>())&#123;</span><br><span class="line"><span class="keyword">if</span>(n[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">result = <span class="built_in">is_nine_degree</span>(n);</span><br><span class="line"><span class="keyword">if</span>(result)&#123;</span><br><span class="line">cout &lt;&lt; n &lt;&lt; <span class="string">&quot; is a multiple of 9 and has 9-degree &quot;</span> &lt;&lt; result &lt;&lt; <span class="string">&quot;.&quot;</span> &lt;&lt; endl; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; n &lt;&lt; <span class="string">&quot; is not a multiple of 9.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>倍數關係</p><ol><li>測資可能有 1000 bits，因此用 string 存取</li><li>用迴圈將測資之各位元相加，並判斷是否為 9 之倍數</li><li>若是，則再進入 2. 計算；加總進入迴圈的次數即得 9-degree</li></ol>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>10268 - 498-bis</title>
    <link href="/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/10268%20-%20498-bis/"/>
    <url>/2024/05/28/CPE/%E4%B8%80%E9%A1%86%E6%98%9F/10268%20-%20498-bis/</url>
    
    <content type="html"><![CDATA[<p>:::info<br>星星難度: ⭐<br>類型: 基礎題<br>題號: UVA10268<br>:::</p><h2 id="題目一覽（照片或PDF檔）"><a href="#題目一覽（照片或PDF檔）" class="headerlink" title="題目一覽（照片或PDF檔）"></a>題目一覽（照片或PDF檔）</h2><p><a href="10268%20-%20498-bis%20d091fcb40ba54761b0161ab75a077703/p10268.pdf">p10268.pdf</a></p><h2 id="中文翻譯"><a href="#中文翻譯" class="headerlink" title="中文翻譯"></a>中文翻譯</h2><p>題目開頭在推導微分公式，此題要求根據題目的輸入值，求出導數（微分過後的方程式）的值。</p><p>$$<br>f(x) &#x3D; a_{0}x^n+a_{1}x^{n-1}<br>$$</p><p>$$<br>f’(x) &#x3D; (a_{0} \times n)x^{n-1} + (a_{0} \times (n-1))x^{n-2}<br>$$</p><ul><li>輸入的第一列會告訴 X 的值是多少</li><li>輸入的第二列會以降冪的方式輸每個 X 的係數</li><li>最高次方會是 1000000</li></ul><p>舉例來說，X &#x3D; 7，第二列為 2 1 3 4：</p><blockquote><p>7<br>2 1 3 4</p></blockquote><p>可以得出，還未微分的原方程式為：</p><p>$$<br>2x^3+x^2+3x+4<br>$$</p><p>根據題目所給的微分公式：係數 * 次方、次方-1、原常數項消除</p><p>$$<br>6x^{2}+2x+3<br>$$</p><p>此時代入題目所給的 X &#x3D; 7</p><p>$$<br>6 \times 7^{2}+2 \times 7+3 &#x3D; 311<br>$$</p><p>得到最終答案 311</p><h2 id="程式碼一覽"><a href="#程式碼一覽" class="headerlink" title="程式碼一覽"></a>程式碼一覽</h2><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">1000000</span>] = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">derivative</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> max)</span></span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> exp = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = max<span class="number">-1</span> ; i &gt;= <span class="number">0</span> ; i--)&#123;</span><br><span class="line">sum += a[i] * exp * (max - i);</span><br><span class="line">exp *= x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; x &amp;&amp; cin.<span class="built_in">good</span>())&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(n = <span class="number">0</span> ;  ; n++)&#123;</span><br><span class="line">cin &gt;&gt; a[n];</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">getchar</span>() == <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">derivative</span>(x, n));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ol><li><p>處理輸入值，注意輸入之兩個係數間可能含多個空白、不知係數數量未知</p></li><li><p>使用 <strong>long long int</strong> 型別，依算式計算出微分答案 ( 注意 x &#x3D; 0 之結果 )</p></li></ol><h3 id="如何實現微分？"><a href="#如何實現微分？" class="headerlink" title="如何實現微分？"></a>如何實現微分？</h3><blockquote><p>使用整數陣列存取係數，索引值當作（次方－總數）</p></blockquote><p>以中文翻譯的範例來說：x &#x3D; 7</p><table><thead><tr><th>索引值</th><th>a[0]</th><th>a[1]</th><th>a[2]</th><th>a[3]</th></tr></thead><tbody><tr><td>代表的次方項</td><td>x^3</td><td>x^2</td><td>x^1</td><td>x^0</td></tr><tr><td>係數</td><td>2</td><td>1</td><td>3</td><td>4</td></tr></tbody></table><p>我們可以得知輸入總數為 4 個，又知道微分過後的公式是【係數* n】</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">derivative</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> max)</span></span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> exp = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = max<span class="number">-1</span> ; i &gt;= <span class="number">0</span> ; i--)&#123;</span><br><span class="line">sum += a[i] * exp * (max - i);</span><br><span class="line">exp *= x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>索引值（ｉ）</th><th>a[0]</th><th>a[1]</th><th>a[2]</th><th>a[3]</th></tr></thead><tbody><tr><td>代表的次方項</td><td>x^3</td><td>x^2</td><td>x^1</td><td>x^0</td></tr><tr><td>係數</td><td>2</td><td>1</td><td>3</td><td>4</td></tr><tr><td>max - i</td><td>3</td><td>2</td><td>1</td><td>不會執行</td></tr><tr><td>exp</td><td>49</td><td>7</td><td>1</td><td>不會執行</td></tr></tbody></table><p>所以【係數＊(max - i) *exp】的總和就會是答案了</p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
      <category>一顆星</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CPE 考試密笈</title>
    <link href="/2024/05/28/CPE/CPE%20%E8%80%83%E8%A9%A6%E7%A7%98%E7%AC%88/"/>
    <url>/2024/05/28/CPE/CPE%20%E8%80%83%E8%A9%A6%E7%A7%98%E7%AC%88/</url>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1606326608606-aa0b62935f2b?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" alt="https://images.unsplash.com/photo-1606326608606-aa0b62935f2b?ixlib=rb-4.0.3&amp;q=85&amp;fm=jpg&amp;crop=entropy&amp;cs=srgb"></p><p>😂 難倒我的不是程試，而是那該死的英文</p><p>💡 趕時間的話不彷就只複習一顆星的題目，每次考試必有一題一顆星的題目</p><h3 id="若想要安裝考試環境，請先閱讀這篇"><a href="#若想要安裝考試環境，請先閱讀這篇" class="headerlink" title="若想要安裝考試環境，請先閱讀這篇"></a>若想要安裝考試環境，請先閱讀這篇</h3><p><a href="https://www.notion.so/dfadcfbd46664792b6681a6167412ba6?pvs=21">瘋狂程設環境與安裝說明一覽</a></p><h3 id="考試注意事項"><a href="#考試注意事項" class="headerlink" title="考試注意事項"></a>考試注意事項</h3><p><a href="https://www.notion.so/241ee73296be4c3c96ebb22d15199a39?pvs=21">怎麼看錯誤訊息</a></p><h3 id="影片學習資源"><a href="#影片學習資源" class="headerlink" title="影片學習資源"></a>影片學習資源</h3><p><a href="https://www.youtube.com/watch?v=phY1Vk1OOVc&list=PLYhy6KLAgQE6QpZ5dUz-p-5dC1bWCTuIi">銘傳資傳系 CPE 001 UVa10041 Vito’s family</a></p>]]></content>
    
    
    <categories>
      
      <category>CPE</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/05/28/hello-world/"/>
    <url>/2024/05/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Different forms of Windows and Macs The Linux</title>
    <link href="/2024/05/28/English_reading/Different%20forms%20of%20Windows%20and%20Macs%20Linux/Different%20forms%20of%20Windows%20and%20Macs%20Linux/"/>
    <url>/2024/05/28/English_reading/Different%20forms%20of%20Windows%20and%20Macs%20Linux/Different%20forms%20of%20Windows%20and%20Macs%20Linux/</url>
    
    <content type="html"><![CDATA[<h1 id="Different-forms-of-Windows-and-Macs-Linux"><a href="#Different-forms-of-Windows-and-Macs-Linux" class="headerlink" title="Different forms of Windows and Macs: Linux"></a>Different forms of Windows and Macs: Linux</h1><p>原文網址: <a href="https://www.theknowledgeacademy.com/blog/linux-vs-windows/">Linux vs Windows: Which software is best</a><br>來源: The Knowledge Academy<br>Tags: Random<br>閱讀日期: 2024&#x2F;03&#x2F;15<br>字數統計: 4000<br>Status: Done</p><p><img src="/Different%20forms%20of%20Windows%20and%20Macs%20Linux%201d7f2f3c40d04482a06c15148393a06c/linux-vs-windows.jpg" alt="linux-vs-windows.jpg"></p><h1 id="English-version"><a href="#English-version" class="headerlink" title="English version"></a>English version</h1><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows:"></a>Windows:</h3><ul><li><strong>Introduction</strong>: Windows is an operating system developed by Microsoft, widely used on personal computers, laptops, and enterprise servers.</li><li><strong>Features</strong>:<ol><li><strong>Commercialization</strong>: Windows is a commercial operating system, typically requiring a license purchase to use legally.</li><li><strong>User-friendly</strong>: Windows is often regarded as a user-friendly operating system, featuring a graphical user interface and intuitive operation.</li><li><strong>Wide support</strong>: Due to its dominant position in the global market, many software and hardware vendors support Windows, making it easy to find compatible applications and devices.</li><li><strong>Closed-source</strong>: Windows is a closed-source operating system, meaning only Microsoft can modify and release versions of Windows.</li></ol></li></ul><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux:"></a>Linux:</h3><ul><li><strong>Introduction</strong>: Linux is an open-source operating system, with its core developed by developers like Linus Torvalds, and it has many different distributions to choose from.</li><li><strong>Features</strong>:<ol><li><strong>Open-source</strong>: Linux is an open-source operating system, meaning anyone can view, modify, and distribute Linux code.</li><li><strong>Diversity</strong>: Linux has many different distributions, each with its own characteristics and purposes, such as Ubuntu, Debian, Red Hat, CentOS, etc.</li><li><strong>Stability and security</strong>: Linux is generally considered more stable and secure than Windows, thanks to its open-source nature, which allows many people to review and fix vulnerabilities in the system.</li><li><strong>Customizability</strong>: Linux offers more customization and configuration options, allowing users to tailor the system to their needs.</li></ol></li></ul><h3 id="Differences"><a href="#Differences" class="headerlink" title="Differences:"></a>Differences:</h3><ul><li><strong>User interface</strong>: Windows typically features a graphical user interface, while Linux offers more customization and choice, including different desktop environments.</li><li><strong>Software compatibility</strong>: Windows enjoys better software and hardware support due to its larger market share, whereas Linux compatibility depends on the chosen distribution and related community support.</li><li><strong>Licensing</strong>: Windows is a commercial operating system requiring license purchase, while Linux is open-source and often free to use and distribute.</li><li><strong>Management</strong>: In Windows, system management is typically done through graphical user interfaces, while in Linux, users can manage the system through command-line interfaces or graphical interfaces, offering more flexibility and control.</li></ul><h2 id="Experience"><a href="#Experience" class="headerlink" title="Experience"></a>Experience</h2><p>This article provides a clear comparison of the features and differences between Windows and Linux operating systems. Through reading, I’ve learned that Windows is a commercialized operating system with a user-friendly interface and extensive software and hardware support, but it requires purchasing a license. On the other hand, Linux is an open-source operating system with diverse distributions available, typically free to use, and offers greater stability and security, although it requires more technical expertise for customization and configuration.</p><p>I find Windows more suitable for regular users as it offers an intuitive user interface and broad application support, suitable for everyday tasks and entertainment needs. Linux, on the other hand, is better suited for technical users or those who require customization and system control, providing more options for customization and configuration, along with better stability and security.</p><p>From now on, I will learn how to use Linux with my old computer for preparing my working needs.</p><hr><h1 id="中文版本"><a href="#中文版本" class="headerlink" title="中文版本"></a>中文版本</h1><h2 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h2><p>受到以前物理老師以及現在工程師心得影片的影響，我認為資訊工程系需要自己去學習另外一種系統，可以直接學習系統內指令的工具，讓我可以接觸到更多我曾沒有學習過的知識。</p><h2 id="Windows："><a href="#Windows：" class="headerlink" title="Windows："></a>Windows：</h2><ul><li><strong>簡介</strong>：Windows是由微軟（Microsoft）開發的操作系統，廣泛用於個人電腦、筆記型電腦和企業伺服器等設備上。</li><li><strong>特點</strong>：<ol><li><strong>商業化</strong>：Windows是一個商業操作系統，通常需要購買許可證才能合法使用。</li><li><strong>使用者友好</strong>：Windows通常被認為是使用者友好的操作系統，具有視覺化的用戶界面和易於上手的操作方式。</li><li><strong>廣泛支持</strong>：由於Windows在全球市場上佔有主導地位，許多軟件和硬件供應商都支持Windows，因此您可以輕鬆找到相容的應用程序和設備。</li><li><strong>封閉性</strong>：Windows是封閉源代碼的操作系統，這意味著只有微軟可以修改和發布Windows的版本。</li></ol></li></ul><h2 id="Linux："><a href="#Linux：" class="headerlink" title="Linux："></a>Linux：</h2><ul><li><strong>簡介</strong>：Linux是一個開放源代碼的操作系統，其核心是由林納斯·托瓦茲（Linus Torvalds）等開發者開發的Linux核心，並且有許多不同的發行版（distribution）可供選擇。</li><li><strong>特點</strong>：<ol><li><strong>開放源碼</strong>：Linux是開放源碼的操作系統，這意味著任何人都可以查看、修改和分發Linux的代碼。</li><li><strong>多樣性</strong>：Linux有許多不同的發行版，每個發行版都有自己的特色和用途，例如Ubuntu、Debian、Red Hat、CentOS等等。</li><li><strong>穩定性和安全性</strong>：Linux通常被認為比Windows更穩定和安全，這得益於其開放源碼的特性，使得有許多人可以共同審查和修復系統中的漏洞。</li><li><strong>自定義性</strong>：Linux提供了更多的自定義和配置選項，使得用戶可以根據自己的需求定制系統。</li></ol></li></ul><h2 id="差異性："><a href="#差異性：" class="headerlink" title="差異性："></a>差異性：</h2><ul><li><strong>用戶界面</strong>：Windows通常具有視覺化的用戶界面，而Linux則提供了更多的自定義和選擇，可以使用不同的桌面環境。</li><li><strong>軟體相容性</strong>：Windows因其市場份額大而具有較好的軟體和硬體支援，但Linux的相容性取決於所選擇的發行版和相關的社區支援。</li><li><strong>許可證</strong>：Windows是商業操作系統，需要購買許可證；而Linux是開放源碼的，通常免費並且可以自由分發。</li><li><strong>管理方式</strong>：在Windows中，系統管理通常是通過圖形用戶界面完成，而在Linux中，用戶可以通過命令行界面或圖形界面進行系統管理，具有更多的靈活性和控制權。</li></ul><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>通過閱讀，我了解到Windows是一個商業化的操作系統，具有使用者友好的介面和廣泛的軟硬體支援，但需要購買許可證。另一方面，Linux是一個開放源碼的操作系統，有多樣的發行版可供選擇，通常免費並且更加穩定和安全，但較為技術性強，需要更多自定義和配置。</p><p>我發現Windows更適合普通用戶，像是一般的商業人士、未曾學習過電腦相關的專業知識的人，因為它提供了直觀的用戶界面和廣泛的應用支援，適合用於一般日常工作和娛樂需求。而 Linux 則更適合技術人員或對自定義和控制系統有需求的用戶，因為它提供了更多的自定義和配置選項，並且具有更好的穩定性和安全性。</p><p>所以，我決定透過實際的學習來了解為什麼 Linux 會存在於此。</p><h1 id="資源"><a href="#資源" class="headerlink" title="資源"></a>資源</h1><p><a href="https://www.theknowledgeacademy.com/blog/linux-vs-windows/">Linux vs Windows: Which software is best</a></p><p><a href="https://www.tutorialspoint.com/difference-between-linux-and-windows">Difference between Linux and Windows</a></p>]]></content>
    
    
    <categories>
      
      <category>English reading</category>
      
    </categories>
    
    
    <tags>
      
      <tag>English reading</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Taiwan’s housing market is losing steam</title>
    <link href="/2024/05/28/English_reading/Taiwan%E2%80%99s%20housing%20market%20is%20losing%20steam/Taiwan%E2%80%99s%20housing%20market%20is%20losing%20steam/"/>
    <url>/2024/05/28/English_reading/Taiwan%E2%80%99s%20housing%20market%20is%20losing%20steam/Taiwan%E2%80%99s%20housing%20market%20is%20losing%20steam/</url>
    
    <content type="html"><![CDATA[<h1 id="Taiwan’s-housing-market-is-losing-steam"><a href="#Taiwan’s-housing-market-is-losing-steam" class="headerlink" title="Taiwan’s housing market is losing steam"></a>Taiwan’s housing market is losing steam</h1><p>原文網址: <a href="https://www.globalpropertyguide.com/asia/taiwan/price-history">https://www.globalpropertyguide.com/asia/taiwan/price-history</a><br>來源: Global Property Guide<br>Tags: News<br>閱讀日期: 2024&#x2F;03&#x2F;16<br>字數統計: 3000<br>Status: Done</p><p><img src="https://images.unsplash.com/photo-1519918448158-956d40b0d8fe?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" alt="https://images.unsplash.com/photo-1519918448158-956d40b0d8fe?ixlib=rb-4.0.3&amp;q=85&amp;fm=jpg&amp;crop=entropy&amp;cs=srgb"></p><h1 id="English-version"><a href="#English-version" class="headerlink" title="English version"></a>English version</h1><h2 id="How-did-we-end-up-unable-to-afford-houses"><a href="#How-did-we-end-up-unable-to-afford-houses" class="headerlink" title="How did we end up unable to afford houses?"></a>How did we end up unable to afford houses?</h2><p>As a young person, I’ve often heard stories of how my elders diligently saved money, planned finances, and eventually bought their own homes in those simpler times, laying the foundation for us, the next generation.</p><p>However, with the incessant news reports about soaring housing prices in Taiwan, a thought has gradually crept into my mind: “Will I ever be able to afford a house in the future?” Along with this thought comes fear and worry.</p><h2 id="Housing-affordability-across-regions"><a href="#Housing-affordability-across-regions" class="headerlink" title="Housing affordability across regions"></a>Housing affordability across regions</h2><p>Before we delve into how we can afford to buy houses, let’s look at some data from the Ministry of the Interior to calculate the income ratio.</p><p><a href="https://pip.moi.gov.tw/V3/E/SCRE0105.aspx">Ministry of the Interior Real Estate Information Platform - Housing Affordability Statistics</a></p><p><img src="/Untitled.png" alt="alt text"></p><p>$$</p><p>House Price to Income Ratio &#x3D; \frac{\text{Median Residential Property Price}}{\text{Median Disposable Household Income}}</p><p>$$</p><p>$$</p><p>Housing Affordability Ratio &#x3D; \frac{\text{Median Residential Property Mortgage Monthly Payment}}{\text{Median Disposable Household Income}}</p><p>$$</p><p>The house price to income ratio formula shows how many years of savings a family needs to buy their own house if paying in full.</p><p>The housing affordability ratio shows what percentage of income is occupied by monthly payments if 70% of the loan (including principal and interest) is paid off within 20 years.</p><p>According to the Ministry of the Interior’s “Housing Affordability Statistics for the Third Quarter of 2023,” it takes young people in the six major cities 8 to 15 years to buy a house without eating or drinking, and in other counties and cities, it takes at least 6 to 10 years, with an average of 10 years.</p><p>However, this data is inaccurate because it does not account for wealth disparity when considering income, and the method of calculating housing prices is biased towards less developed administrative districts within the same county or city.</p><p>Therefore, the actual situation may be more severe than this document suggests. Taking into account all real-life factors, I estimate that it takes young people approximately 20 to 30 years to buy a house in full.</p><h2 id="Efforts-by-Civil-Organizations"><a href="#Efforts-by-Civil-Organizations" class="headerlink" title="Efforts by Civil Organizations"></a>Efforts by Civil Organizations</h2><p><a href="https://ours.org.tw/">OURs Urban Reform Organization</a></p><p>The OURs Urban Reform Organization in Taipei has submitted many petitions in this regard and has proposed many suggestions on the Public Policy Network Participation Platform, some of which are currently under consideration. This shows me that not only am I concerned about this issue, but there are also many others who, like me, are speaking out for fairness to the public.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The persistently high housing prices have always been a problem in our society, and this problem will change with our economic development, changes in population structure, policy formulation, and other factors. The housing affordability statistics you mentioned highlight the difficulty young people face in purchasing homes in the current economic environment. The efforts and proposals of civil organizations are part of the solution to this problem.</p><p>In the face of high housing prices and the difficulty of home ownership, individuals can take action from themselves. For example, actively improving one’s professional skills and competitiveness to increase income levels, managing finances wisely to save for a down payment, and actively seeking suitable housing subsidy policies and loan schemes.</p><p>Furthermore, society needs to continue to pay attention to and discuss the housing issue, urging the government to implement more effective policies to solve this problem and enable more young people to realize their dream of homeownership.</p><hr><h1 id="中文版本"><a href="#中文版本" class="headerlink" title="中文版本"></a>中文版本</h1><h2 id="我們是怎麼開始買不起房的"><a href="#我們是怎麼開始買不起房的" class="headerlink" title="我們是怎麼開始買不起房的?"></a>我們是怎麼開始買不起房的?</h2><p>身為年輕人，我時有耳聞我的長輩是怎麼辛勤刻苦的存錢、理財規劃，才在那純樸的年代中買下屬於自己的家，進而才擁有我們這些下一代。</p><p>不過，隨著新聞開始不間斷的向我傳輸說台灣房價有夠高之後，一個想法逐漸在我腦中形成：「我是不是以後都買不起房子了?」，隨之而來的是恐懼、擔憂。</p><h2 id="各地的房屋負擔率"><a href="#各地的房屋負擔率" class="headerlink" title="各地的房屋負擔率"></a>各地的房屋負擔率</h2><p>計算我們怎麼買房之前，這裡有內政部的數據，用以計算所得比的。</p><p><a href="https://pip.moi.gov.tw/V3/E/SCRE0105.aspx">內政部不動產資訊平台 - 房價負擔能力統計</a></p><p><img src="/Untitled.png" alt="alt text"></p><p>$$<br>房價所得比 &#x3D; \frac{\text{中位數住宅價格}}{中位數家戶可支配所得}</p><p>$$</p><p>$$<br>房價負擔率 &#x3D; \frac{中位數住宅價格貸款月攤還額}{中位數家戶可支配所得}<br>$$</p><p>房價所得比公式顯示若是全額付款的話，一個家庭需要多少年的積蓄才能買下自己的房子</p><p>房價負擔率顯示在 20 年內還 7 成貸款連本帶利的話，占用一個月多少 % 的收入</p><p><img src="/Untitled.png" alt="alt text"></p><p>根據內政部《112年第3季房價負擔能力統計發布內容》可以看出，若當前年輕人不吃不喝的儲備購屋金，在六都中需要 8 ~15 年才能購屋，其他縣市則是至少 6 ~ 10 年，平均為 10 年。</p><p>但是，這個數據其實是不準確的，因為在參考收入的時候，並沒有排富，房價的計算方式也有平攤到同一縣市中較為偏遠的行政區。</p><p>因此，實際上的情況可能會比這份文件來的更加嚴重，將現實層面中的所有事物考慮進去，我認為年輕人全額買房的年限大約落在 20 ~ 30 年以上。</p><h2 id="民間團體的努力"><a href="#民間團體的努力" class="headerlink" title="民間團體的努力"></a>民間團體的努力</h2><p><a href="https://ours.org.tw/">OURs都市改革組織</a></p><p>台北市的 OURs 都市改革組織在這方面做了許多陳情書，並在公共政策網路參與平台中提出了許多提議目前也正在提議中，這讓我看到不只有我正在關注這份議題，更是有許多人正在跟我一樣為了公平而向社會大眾發聲。</p><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>房價居高不下一直是我們社會中存在的問題，這個問題會隨著我們的經濟發展、人口結構變化、政策制定等因素而有所變化。你提到的房價負擔能力統計顯示了年輕人在當前經濟環境下購屋的困難。而民間團體的努力和提議也是解決這個問題的一部分。</p><p>面對高房價和購屋難的問題，除了政府和民間組織的努力外，個人也可以從自身做起。例如，積極提升自身的專業能力和競爭力，以提高收入水平；合理理財，儲蓄購屋款；積極尋找適合的房屋補助政策和貸款方案等。</p><p>此外，社會也需要持續關注和討論房價問題，促使政府出台更多有效的政策來解決這個問題，讓更多的年輕人能夠實現居住的夢想。</p><h3 id="額外參考資源"><a href="#額外參考資源" class="headerlink" title="額外參考資源"></a>額外參考資源</h3><p><a href="https://www.youtube.com/watch?v=NlkHsyJ1CtA">https://www.youtube.com/watch?v=NlkHsyJ1CtA</a></p><p><a href="https://www.youtube.com/watch?v=T-nVPL3WGvY">https://www.youtube.com/watch?v=T-nVPL3WGvY</a></p><p><a href="https://www.youtube.com/watch?v=HAbtOCF6XfY">https://www.youtube.com/watch?v=HAbtOCF6XfY</a></p>]]></content>
    
    
    <categories>
      
      <category>English reading</category>
      
    </categories>
    
    
    <tags>
      
      <tag>English reading</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How I Built My Blogger</title>
    <link href="/2024/05/28/English_reading/How%20I%20Built%20My%20Blogger/How%20I%20Built%20My%20Blogger/"/>
    <url>/2024/05/28/English_reading/How%20I%20Built%20My%20Blogger/How%20I%20Built%20My%20Blogger/</url>
    
    <content type="html"><![CDATA[<h1 id="How-I-Built-My-Blogger"><a href="#How-I-Built-My-Blogger" class="headerlink" title="How I Built My Blogger"></a>How I Built My Blogger</h1><p>原文網址: <a href="https://lucioalpha.github.io/">ALR huang &#x3D; HBH 的學習</a><br>來源: Self-writting<br>Tags: Project<br>閱讀日期: 2024&#x2F;02&#x2F;28<br>字數統計: 10000<br>Status: Done</p><ul><li>Menu（目錄）</li></ul><p><img src="https://images.unsplash.com/photo-1584987404158-79e7637a29d6?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" alt="https://images.unsplash.com/photo-1584987404158-79e7637a29d6?ixlib=rb-4.0.3&amp;q=85&amp;fm=jpg&amp;crop=entropy&amp;cs=srgb"></p><h1 id="English-version"><a href="#English-version" class="headerlink" title="English version"></a>English version</h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>I built my own Static Pages website with Hexo, Github, NPM, Git Bash, and Visual Studio Code. it will be my blogger for updating my articles and projects in the future. This article is going to show and record the process of building a website.</p><h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a><strong>Preface</strong></h2><p>I’ve noticed that many engineers have their own blogs. They use various platforms like building their own websites and using GitHub, Google Blogger, or Medium to share their learning experiences. Not only does this allow more people to see their journey and achievements, but it also helps beginners who want to learn, saving them from some pitfalls. Eventually, their names spread within the social circles, giving them better job opportunities.</p><p>As a novice in information engineering like myself, I find some things too difficult (usually learned in the second year or later). This makes me feel stressed, but I don’t want to only write articles in a big company’s blog. So, I want to find a way that I can control and is also easy to understand. That’s why I found Hexo.</p><aside>📢 Attention! **Each Github account** can only have **ONE** Github Pages which require same name as account.More informations in Github’s official Docs.</aside><p><a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages">About GitHub Pages - GitHub Docs</a></p><h2 id="Installing-steps"><a href="#Installing-steps" class="headerlink" title="Installing steps"></a>Installing steps</h2><h3 id="What-we-need-to-informationbuild-a-website"><a href="#What-we-need-to-informationbuild-a-website" class="headerlink" title="What we need to informationbuild a website"></a>What we need to informationbuild a website</h3><ol><li>Node.js</li><li>Git Bash</li><li>Github</li><li>Hexo</li><li>Visual Studio Code</li></ol><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>node package manager for package our project to Github,  20.11.1 LTS version</p><p><a href="https://www.w3schools.com/whatis/whatis_npm.asp">What is npm</a></p><p><a href="https://nodejs.org/en/">Node.js</a></p><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled.png)</p><h3 id="Git-Bash"><a href="#Git-Bash" class="headerlink" title="Git Bash"></a>Git Bash</h3><p>Helping us to run command of Node.js</p><p><a href="https://gitforwindows.org/">Git for Windows</a></p><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%201.png)</p><ul><li>After installing, Git Bash’s icon should been seen on the screen.</li></ul><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%202.png)</p><ul><li>When you right click the mouse, you might see some Git Bash functions.</li></ul><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%203.png)</p><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>A place for users and coders to online their website, Open Sources, storage projects.</p><ol><li>Sign up a Github account.</li><li>Click <strong>New</strong> to add an new repository, whether the right button or the left one.</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%204.png)</p><ol><li>Owner: select GitHubyour account.<br>Repository name: <code>username.github.io</code></li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%205.png)</p><ol><li>Copy the url of repository’s HTTPS, it will be used soon as we setup the Hexo setting.</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%206.png)</p><ol><li>Click on user’s icon find setting → Pages, set Branch: <strong>master &#x2F; (roots)</strong></li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%207.png)</p><ol><li>The repository can to view in Your repositories.</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%208.png)</p><h3 id="Github-Pages-and-SSH-Key"><a href="#Github-Pages-and-SSH-Key" class="headerlink" title="Github Pages and SSH Key"></a>Github Pages and SSH Key</h3><p><a href="https://git-scm.com/book/en/v2/Git-on-the-Server-Generating-Your-SSH-Public-Key">Git - Generating Your SSH Public Key</a></p><p><a href="https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration">Git - Account Setup and Configuration</a></p><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%209.png)</p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p><a href="https://hexo.io/zh-tw/index.html">Hexo</a></p><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2010.png)</p><ol><li>Create an new folder in your computer, and click in the right-click to find <strong>“Open Git Bash here”</strong></li></ol><aside>💡 In Git Bash, there are different keyboard shortcut for copy and poste.Copy：Ctrl + insertPoste：Shift + insert</aside><ol><li>In command window of Git Bash, enter the command below to install Hexo in the folder.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2011.png)</p><ol><li>If the installing is correctly, you will see the version of Hexo after enter the command below.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2012.png)</p><ol><li>Enter the command to restore the folder.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2013.png)</p><ol><li>When the command upper is finished, you will find out the folder is like the picture below.</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2014.png)</p><ol><li>Enter the command to install NPM in the folder.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2015.png)</p><ol><li>To update the project to Github Pages, enter the command below to install the tools of npm.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2016.png)</p><p><strong>Don’t close the window yet.</strong></p><p>We have finished the setup of Hexo setting so far, and now we going to install Visual Studio Code to edit project.</p><h3 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h3><p>Visual Studio Code can view and edit the folder created by Hexo, furthermore the language we need （Markdown）can be edit here in the same time. It also saveing time for changing theme.</p><p><a href="https://code.visualstudio.com/"></a></p><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2017.png)</p><ul><li>After installing, you can chose the mother language in the Extensive.</li></ul><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2018.png)</p><ul><li>Use Visual Studio Code open the folder:</li></ul><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2019.png)</p><ol><li>In main menu’s “_config.yml” to find “Deployment”.</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2020.png)</p><ol><li><p>Set the【Deployment】:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>Here are some basic command to build and update website to GitHub Pages.<br>Remember the Git Bash’s window?<br>Enter the command and you can see your demo website on the GitHub Pages!</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo cl    // 清除之前建立的靜態檔案 // delte the git file</span><br><span class="line">$ hexo g     // 建立靜態頁面          // git static pages</span><br><span class="line">$ hexo d     // 部署至 GitHub Pages  // deploy to GitHub Pages</span><br><span class="line">$ hexo s     // 在本地端開啟網頁      // Open an offline website on computer</span><br></pre></td></tr></table></figure></li></ol><h2 id="Experience"><a href="#Experience" class="headerlink" title="Experience"></a>Experience</h2><p>My first website in the world, That’s one small step for man, one giant leap for mankind.<br>I gonna to adjust it as a gallery, not only show the pretty of gallery, but also the paintings.</p><p><a href="https://lucioalpha.github.io/">ALR huang &#x3D; HBH 的學習</a></p><hr><h1 id="中文版本"><a href="#中文版本" class="headerlink" title="中文版本"></a>中文版本</h1><h2 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h2><p>我利用 Hexo、Github、NPM、Git Bash、Visual Studio Code 架設了一個靜態網頁，未來會將這個網頁當作我的部落格網站來撰寫文章。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我發現，很多工程師都有寫自己的部落格。他們用各種方式，像是自己建網站、用Github、Google Blogger或Medium，分享他們的學習成果。這樣不只可以讓更多人看到他們的經歷與成果，也可以幫助想要學習的新手，讓他們少走一些彎路。最後，他們的名字也會在社交圈子裡傳開，讓他們可以有更好的工作機會。</p><p>對我這樣的資訊工程新手來說，我覺得有些東西太難了（大二以上才會學）。這讓我覺得很壓力，但是我又不想要只在一家大公司的部落格裡寫文章。所以，我想要找一個我可以控制，而且也簡單好懂的方式。於是我找到了Hexo。</p><aside>💡 **請注意，任何一個帳號只能擁有一個與帳號名稱相同的 GitHub Pages**</aside><p><a href="https://docs.github.com/zh/pages/getting-started-with-github-pages/about-github-pages">关于 GitHub Pages - GitHub 文档</a></p><h2 id="安裝步驟"><a href="#安裝步驟" class="headerlink" title="安裝步驟"></a>安裝步驟</h2><h3 id="此教學所需的軟體"><a href="#此教學所需的軟體" class="headerlink" title="此教學所需的軟體"></a>此教學所需的軟體</h3><ol><li>Node.js</li><li>Git Bash</li><li>Github</li><li>Hexo</li><li>Visual Studio Code</li></ol><h3 id="Node-js-1"><a href="#Node-js-1" class="headerlink" title="Node.js"></a>Node.js</h3><p><strong>提供 npm 來安裝所需的套件。這裡可選擇安裝左側 20.11.1 LTS 版本</strong></p><blockquote><p>Hexo 官網建議使用 Node.js 10.0 及以上版本，若不確定下載哪個版本，可在終端機（win鍵+R，輸入cmd）輸入 npm versin 查看版本號。</p></blockquote><p><a href="https://nodejs.org/en/">Node.js</a></p><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled.png)</p><h3 id="Git-Bash-1"><a href="#Git-Bash-1" class="headerlink" title="Git Bash"></a>Git Bash</h3><p><strong>用來將檔案發布到 GitHub Page</strong></p><p><a href="https://gitforwindows.org/">Git for Windows</a></p><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%201.png)</p><ul><li>安裝完成後，Git Bash 的圖示會直接出現在桌面</li></ul><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%202.png)</p><ul><li>右鍵時，也會出現 Git Bash 的功能</li></ul><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%203.png)</p><h3 id="Github-1"><a href="#Github-1" class="headerlink" title="Github"></a>Github</h3><p><strong>提供給使用者存放網站、存取開源軟體、推行自己所寫程式碼的地方</strong></p><ol><li>註冊一個 Github 帳號</li><li>點選 New 新增一個 repository（專案）<br>無論是左方還是右方的按鈕皆可以</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%204.png)</p><ol><li>Owner 請選取自己的帳號名稱<br>Repository name 可以自行填寫，通常為 <code>帳號名稱.github.io</code></li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%205.png)</p><ol><li>請複製 repository 的【HTTPS】網址，等下在 Hexo 的設定中會需要用到</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%206.png)</p><ol><li>請點選頭像的【setting】&gt;【Pages】，將 Branch 的設定改為【master】【&#x2F;(roots)】</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%207.png)</p><ol><li>日後可點選頭像，【Your repositories】中檢視</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%208.png)</p><h3 id="Github-Pages-和電腦的-SSH-Key"><a href="#Github-Pages-和電腦的-SSH-Key" class="headerlink" title="Github Pages 和電腦的 SSH Key"></a>Github Pages 和電腦的 SSH Key</h3><p>電腦要與 Github 做連結，需要 SSH Key 公開金鑰</p><p><a href="https://git-scm.com/book/zh-tw/v2/GitHub-%E5%BB%BA%E7%AB%8B%E5%B8%B3%E6%88%B6%E5%8F%8A%E8%A8%AD%E5%AE%9A">Git - 建立帳戶及設定</a></p><p><a href="https://git-scm.com/book/zh-tw/v2/%E4%BC%BA%E6%9C%8D%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%A2%E7%94%9F%E4%BD%A0%E7%9A%84-SSH-%E5%85%AC%E9%91%B0#r_generate_ssh_key">Git - 產生你的 SSH 公鑰</a></p><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%209.png)</p><h3 id="Hexo-1"><a href="#Hexo-1" class="headerlink" title="Hexo"></a>Hexo</h3><p><a href="https://hexo.io/zh-tw/index.html">Hexo</a></p><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2010.png)</p><ol><li>請在電腦中新增一個資料夾，並在資料夾中右鍵開啟【Open Git Bash here】</li></ol><aside>💡 在 Git Bash 中，傳統的複製貼上無法作用，需要更改快捷鍵複製：Ctrl + insert貼上：Shift + insert</aside><ol><li>輸入以下程式碼，在資料夾中安裝 Hexo</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2011.png)</p><ol><li>可以輸入以下程式碼確認有無正確安裝，會出現 Hexo 版本資訊</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2012.png)</p><ol><li>輸入以下程式碼以初始化整個資料夾</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2013.png)</p><ol><li>完成後，整個資料夾的畫面會如下圖所示</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2014.png)</p><ol><li>輸入以下程式碼，安裝 npm 在此資料夾</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2015.png)</p><ol><li>輸入以下程式碼，安裝 npm 的擴充工具，此工具可以將整個專案更新至 Github Page</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2016.png)</p><p>目前我們已經基本完成 Hexo 的設定，接下來我們需要使用 Visual Studio  Code 來進行最後幾步的設定，用以連結 Github Page 與電腦上的 Hexo 專案。</p><h3 id="Visual-Studio-Code-1"><a href="#Visual-Studio-Code-1" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h3><p>Hexo 所生成的專案資料夾可以使用 Visual Studio Code 檢視與編輯，其中 Hexo 文章所需使用的 Markdown 語法也能在此直接編輯，後續更換 Hexo 主題時也會使用到。</p><p><a href="https://code.visualstudio.com/"></a></p><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2017.png)</p><ul><li>完成安裝後，可在延伸模組中安裝自己熟悉的語言</li></ul><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2018.png)</p><ul><li>開啟剛剛建立的 Hexo 資料夾後，整體專案的畫面如下所示：</li></ul><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2019.png)</p><ol><li>在根目錄的【_config.yml】中找到【Deployment】</li></ol><p>![Untitled](source&#x2F;_posts&#x2F;English_reading&#x2F;How I Built My Blogger&#x2F;Untitled%2020.png)</p><ol><li>將【Deployment】的設定變成如下所示：</li></ol><ul><li>type：選擇部屬模式，這裡填 git</li><li>repo：GitHub repository 的連結，記得將 username 修改成自己的帳號名稱</li><li>branch：選擇分支，預設為 master</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><ol><li>分別在此資料夾的 Git Bash 介面，輸入以下程式碼</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo cl    // 清除之前建立的靜態檔案</span><br><span class="line">$ hexo g     // 建立靜態頁面</span><br><span class="line">$ hexo d     // 部署至 GitHub</span><br><span class="line">$ hexo s     // 在本地端運行一個暫行的靜態網站</span><br></pre></td></tr></table></figure><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>架設了一個正在更新的網站，未來會自己更換主題，並持續了解如何更新</p><p><a href="https://lucioalpha.github.io/">ALR huang &#x3D; HBH 的學習</a></p>]]></content>
    
    
    <categories>
      
      <category>English reading</category>
      
    </categories>
    
    
    <tags>
      
      <tag>English reading</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
